{"version":3,"sources":["./src/app/salary/create-salary-for-one-dialog/create-salary-for-one-dialog.component.ts","./src/app/salary/create-salary-for-one-dialog/create-salary-for-one-dialog.component.html","./src/app/stock/delete-component-dialog/delete-component-dialog.component.ts","./src/app/stock/delete-component-dialog/delete-component-dialog.component.html","./src/app/inventory/copy-product-dialog/copy-product-dialog.component.ts","./src/app/inventory/copy-product-dialog/copy-product-dialog.component.html","./src/app/manufacture/add-day-invoice-dialog/add-day-invoice-dialog.component.ts","./src/app/manufacture/add-day-invoice-dialog/add-day-invoice-dialog.component.html","./src/app/manufacture/manufacture.component.ts","./src/app/manufacture/manufacture.component.html","./src/app/shared/services/batch-process.service.ts","./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/app/shared/services/work-specification.service.ts","./src/environments/environment.ts","./src/app/overview/overview.component.html","./src/app/overview/overview.component.ts","./src/app/manufacture/complete-work-dialog/complete-work-dialog.component.ts","./src/app/manufacture/complete-work-dialog/complete-work-dialog.component.html","./src/app/operation/operation.component.ts","./src/app/operation/operation.component.html","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/app/shared/util.service.ts","./src/app/shared/services/batch.service.ts","./src/app/create-product/create-product.component.ts","./src/app/create-product/create-product.component.html","./src/app/buyer-list/buyer-list.component.ts","./src/app/buyer-list/buyer-list.component.html","./src/app/employee/create-employee-dialog/create-employee-dialog.component.ts","./src/app/employee/create-employee-dialog/create-employee-dialog.component.html","./src/app/shared/services/delivery.service.ts","./src/app/stock/edit-component-dialog/edit-component-dialog.component.ts","./src/app/stock/edit-component-dialog/edit-component-dialog.component.html","./src/app/shared/services/salary.service.ts","./src/app/shared/services/auth.service.ts","./src/app/delivery/delivery.component.ts","./src/app/delivery/delivery.component.html","./src/app/delivery/create-delivery-dialog/create-delivery-dialog.component.ts","./src/app/delivery/create-delivery-dialog/create-delivery-dialog.component.html","./src/app/buyer-list/create-buyer-dialog/create-buyer-dialog.component.ts","./src/app/buyer-list/create-buyer-dialog/create-buyer-dialog.component.html","./src/app/vendor-list/vendor-list.component.ts","./src/app/vendor-list/vendor-list.component.html","./src/app/shared/custom-style.module.ts","./src/app/shared/services/vendor.service.ts","./src/app/shared/services/employee.service.ts","./src/app/shared/services/process.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/warehouse-record.service.ts","./src/app/manufacture/history/history.component.ts","./src/app/manufacture/history/history.component.html","./src/app/salary/create-salary-for-all/create-salary-for-all.component.ts","./src/app/salary/create-salary-for-all/create-salary-for-all.component.html","./src/app/shared/services/work.service.ts","./src/app/inventory/deprecated/deprecated.component.ts","./src/app/inventory/deprecated/deprecated.component.html","./src/app/salary/salary.component.ts","./src/app/salary/salary.component.html","./src/app/app.module.ts","./src/app/transmission/transmission.component.ts","./src/app/transmission/transmission.component.html","./src/app/manufacture/batch-summary/batch-summary.component.html","./src/app/manufacture/batch-summary/batch-summary.component.ts","./src/app/stock/edit-spec-dialog/edit-spec-dialog.component.ts","./src/app/stock/edit-spec-dialog/edit-spec-dialog.component.html","./src/app/manufacture/create-batch-dialog/create-batch-dialog.component.ts","./src/app/manufacture/create-batch-dialog/create-batch-dialog.component.html","./src/app/inventory/confirm-deprecate-dialog/confirm-deprecate-dialog.component.ts","./src/app/inventory/confirm-deprecate-dialog/confirm-deprecate-dialog.component.html","./src/app/admin.guard.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/shared/services/compo.service.ts","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/manufacture/batch-complete-dialog/batch-complete-dialog.component.ts","./src/app/manufacture/batch-complete-dialog/batch-complete-dialog.component.html","./src/app/shared/services/spec.service.ts","./src/app/shared/services/operation.service.ts","./src/app/stock/pull-in-dialog/pull-in-dialog.component.ts","./src/app/stock/pull-in-dialog/pull-in-dialog.component.html","./src/app/create-spec/create-spec.component.ts","./src/app/create-spec/create-spec.component.html","./src/app/stock/stock.component.ts","./src/app/stock/stock.component.html","./src/app/shared/services/product.service.ts","./src/app/shared/services/local-storage.service.ts","./src/app/manufacture/edit-work-dialog/edit-work-dialog.component.ts","./src/app/manufacture/edit-work-dialog/edit-work-dialog.component.html","./src/app/shared/services/jwt-token.service.ts","./src/app/inventory/edit-product-dialog/edit-product-dialog.component.ts","./src/app/inventory/edit-product-dialog/edit-product-dialog.component.html","./src/app/create-employee/create-employee.component.ts","./src/app/create-employee/create-employee.component.html","./src/app/manufacture/process-complete-dialog/process-complete-dialog.component.ts","./src/app/manufacture/process-complete-dialog/process-complete-dialog.component.html","./src/app/shared/services/buyer.service.ts","./src/app/vendor-list/create-vendor-dialog/create-vendor-dialog.component.ts","./src/app/vendor-list/create-vendor-dialog/create-vendor-dialog.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/manufacture/create-work-dialog/create-work-dialog.component.ts","./src/app/manufacture/create-work-dialog/create-work-dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {Employee} from '../../shared/models/employee';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {EmployeeService} from '../../shared/services/employee.service';\nimport {Salary} from '../../shared/models/salary';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {CreateWorkDialogComponent} from '../../manufacture/create-work-dialog/create-work-dialog.component';\nimport {WorkService} from '../../shared/services/work.service';\nimport {map} from 'rxjs/operators';\nimport {SalaryService} from '../../shared/services/salary.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nclass DialogData {\n  employees!: Employee[];\n  target_employee!: Employee;\n  start_date!: Date;\n  end_date!: Date;\n}\n\n@Component({\n  selector: 'app-create-salary-for-one-dialog',\n  templateUrl: './create-salary-for-one-dialog.component.html',\n  styleUrls: ['./create-salary-for-one-dialog.component.scss']\n})\nexport class CreateSalaryForOneDialogComponent implements OnInit {\n  employees: Employee[] = [];\n  employeeOptions!: Observable<Employee[]>;\n\n  salaryGroup!: FormGroup;\n  total!: number;\n\n  previewSalary!: Salary;\n  payNow!: boolean;\n\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateSalaryForOneDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public employeeService: EmployeeService,\n    private salaryService: SalaryService,\n    private workService: WorkService,\n    private formBuilder: FormBuilder,\n    private _snackBar: MatSnackBar\n  ) { }\n\n\n  ngOnInit(): void {\n    this.employees = this.data.employees;\n    this.salaryGroup = this.formBuilder.group({\n      employee: new FormControl(null, Validators.required),\n      start_date: new FormControl(null, Validators.required),\n      end_date: new FormControl(null, Validators.required),\n      deduction: new FormControl(0, Validators.min(0)),\n      bonus: new FormControl(0, Validators.min(0))\n    });\n    this.employeeOptions = this.salaryGroup.controls['employee'].valueChanges.pipe(\n      map(name => this.employeeService.employeeAutocompleteFilter(name, this.employees)));\n    this.data.target_employee && this.salaryGroup.controls['employee'].setValue(this.data.target_employee)\n    this.data.start_date && this.salaryGroup.controls['start_date'].setValue(this.data.start_date)\n    this.data.end_date && this.salaryGroup.controls['end_date'].setValue(this.data.end_date)\n  }\n\n  onPreviewConfirm() {\n    this.previewSalary = {\n      bonus: 0, deduction: 0, hour_salary: 0, unit_salary: 0, status: 'unpaid',\n      employee_name: this.salaryGroup.controls['employee'].value.name,\n      employee_id: this.salaryGroup.controls['employee'].value.id,\n      start_date: this.salaryGroup.controls['start_date'].value,\n      end_date: this.salaryGroup.controls['end_date'].value\n    }\n    this.workService.getUncheckedWorksByEmployeeIdAndWorkDate(\n      this.salaryGroup.controls['employee'].value.id,\n      this.salaryGroup.controls['start_date'].value,\n      this.salaryGroup.controls['end_date'].value).subscribe(\n        ret_works => {\n          this.previewSalary.work = this.workService.sortWorkByDate(ret_works);\n          this.previewSalary.hour_salary = Number(this.previewSalary.work?.reduce(\n            (prev, curr) => prev + (curr.hour_pay * curr.complete_hour), 0));\n          this.previewSalary.unit_salary = Number(this.previewSalary.work?.reduce(\n            (prev, curr) => prev + (curr.unit_pay * curr.complete_unit), 0));\n          this.total = this.previewSalary.hour_salary + this.previewSalary.unit_salary;\n        }\n    );\n    this.salaryGroup.valueChanges.subscribe(changes => {\n      this.total = (this.previewSalary.hour_salary + this.previewSalary.unit_salary + changes.bonus - changes.deduction)\n    })\n  }\n\n  onSalaryConfirm() {\n    const hour_pay_subtotal = this.previewSalary.work?.reduce((prev, curr) => prev + (curr.hour_pay * curr.complete_hour), 0);\n    const unit_pay_subtotal = this.previewSalary.work?.reduce((prev, curr) => prev + (curr.unit_pay * curr.complete_unit), 0);\n    const new_salary: Salary = {\n      ...this.previewSalary,\n      hour_salary: Number(hour_pay_subtotal),\n      unit_salary: Number(unit_pay_subtotal)};\n    if (this.payNow) {\n      new_salary.check_date = new Date();\n    }\n    console.log(new_salary);\n    this.salaryService.postSalary(new_salary).subscribe(\n      ret_salary => {\n        new_salary.work?.forEach(work => {\n          if (work.complete_unit || work.complete_hour) {\n            work.check = true;\n            work.salary_id = ret_salary.id;\n            this.workService.putWork(work).subscribe();\n          }\n        });\n        this.payNow && this.employeeService.updateLastPayCheck(ret_salary.employee_id, ret_salary.check_date || new Date()).subscribe();\n        this.dialogRef.close(ret_salary);\n      },\n      error => {\n        console.log(error);\n        this._snackBar.open(`薪水结算失败`, \"关闭\");\n      }\n    )\n  }\n\n  ifAllWorkValidated() {\n    if (!this.previewSalary) {\n      return false;\n    } else {\n      return this.previewSalary.work?.every(w => (w.unit_pay || w.hour_pay || (!w.complete_unit && !w.complete_hour)))\n    }\n  }\n\n  updateSalaryData() {\n    this.previewSalary.hour_salary = Number(this.previewSalary.work?.reduce(\n      (prev, curr) => prev + (curr.hour_pay * curr.complete_hour), 0));\n    this.previewSalary.unit_salary = Number(this.previewSalary.work?.reduce(\n      (prev, curr) => prev + (curr.unit_pay * curr.complete_unit), 0));\n    this.total = (this.previewSalary.hour_salary + this.previewSalary.unit_salary + Number(this.salaryGroup.controls['bonus'].value) - Number(this.salaryGroup.controls['deduction'].value))\n  }\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">个人结算</p>\n</div>\n\n<div mat-dialog-content class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n  <div class=\"ety-percent-fill\" fxFlex=\"50\">\n    <p class=\"subtitle mat-h3\">【结算范围】</p>\n    <form [formGroup]=\"salaryGroup\" fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>员工</mat-label>\n        <input type=\"text\" matInput formControlName=\"employee\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"employeeService.employeeDisplayFn\">\n          <mat-option *ngFor=\"let emp of this.employeeOptions | async\" [value]=\"emp\">\n            {{emp.name}} | {{emp.id}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>结算日期范围</mat-label>\n        <mat-date-range-input [rangePicker]=\"picker\">\n          <input matStartDate formControlName=\"start_date\" placeholder=\"开始日期\">\n          <input matEndDate formControlName=\"end_date\" placeholder=\"结束日期\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n      </mat-form-field>\n    </form>\n    <div class=\"isolated\">\n      <mat-checkbox [(ngModel)]=\"payNow\"\n                    color=\"primary\">\n        现在支付\n      </mat-checkbox>\n    </div>\n\n    <mat-divider></mat-divider>\n    <div *ngIf=\"previewSalary\" class=\"isolated\">\n      <p class=\"subtitle mat-h3\">【工资计算】</p>\n      <div class=\"salary-summary-container\">\n        <p class=\"subtitle\">\n          计件工资：{{previewSalary.unit_salary | currency : 'CNY' : 'symbol-narrow'}}\n          ｜ 计时工资：{{previewSalary.hour_salary | currency : 'CNY' : 'symbol-narrow'}}\n        </p>\n        <form [formGroup]=\"salaryGroup\"  fxLayout=\"column\" fxLayoutAlign=\"space-between start\" >\n          <mat-form-field appearance=\"outline\">\n            <mat-label> 扣除额 </mat-label>\n            <input type=\"number\" matInput formControlName=\"deduction\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label> 增补额 </mat-label>\n            <input type=\"number\" matInput formControlName=\"bonus\">\n          </mat-form-field>\n        </form>\n\n        <p class=\"mat-h2 info\">总计：{{total | currency : 'CNY' : 'symbol-narrow'}}</p>\n      </div>\n    </div>\n  </div>\n  <div fxFlex=\"50\">\n    <p class=\"subtitle mat-h3\"> 【工单信息】</p>\n    <div *ngIf=\"previewSalary\" >\n      <p class=\"warn\" *ngIf=\"previewSalary && !previewSalary.work?.length\">没有对应的工单</p>\n      <div *ngFor=\"let w of previewSalary.work\" class=\"salary-work-container\" fxLayout=\"column\">\n        <div mat-line> 产品：{{w.product_name}} | 工艺：{{w.process_name}} | {{w.work_date | date : 'yyyy/MM/dd'}}</div>\n        <div fxLayout=\"row\">\n          <div mat-line *ngIf=\"w.complete_unit\">\n            <mat-form-field>\n              <mat-label>单件酬劳</mat-label>\n              <input type=\"number\" matInput [(ngModel)]=\"w.unit_pay\">\n            </mat-form-field> * {{w.complete_unit}}件\n            <p class=\"record\">计件小计：{{((w.unit_pay || 0) * w.complete_unit) | currency : 'CNY' : 'symbol-narrow'}}</p>\n          </div>\n          <div mat-line *ngIf=\"w.complete_hour\">\n            <mat-form-field>\n              <mat-label>小时酬劳</mat-label>\n              <input type=\"number\" matInput [(ngModel)]=\"w.hour_pay\">\n            </mat-form-field> * {{w.complete_hour}}小时\n            <p class=\"record\">计时小计：{{((w.hour_pay || 0) * w.complete_hour) | currency : 'CNY' : 'symbol-narrow'}}</p>\n          </div>\n        </div>\n        <p class=\"highlight\" mat-line *ngIf=\"!w.complete_hour && !w.complete_unit\"> 该工单尚未完成，将不会被结算 </p>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button class=\"action\" (click)=\"onPreviewConfirm()\" [disabled]=\"!salaryGroup.valid\"> 预览工单 </button>\n  <button mat-raised-button color=\"accent\" (click)=\"updateSalaryData()\" [disabled]=\"!ifAllWorkValidated()\"> 确认工单信息 </button>\n  <button mat-raised-button color=\"primary\" (click)=\"onSalaryConfirm()\" [disabled]=\"!salaryGroup.valid || !ifAllWorkValidated()\"> 确认提交新工资记录 </button>\n  <button mat-button (click)=\"this.dialogRef.close()\">结束</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {CompoService} from '../../shared/services/compo.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Compo} from '../../shared/models/compo';\n\nclass DialogData {\n  compo!: Compo\n}\n\n@Component({\n  selector: 'app-delete-component-dialog',\n  templateUrl: './delete-component-dialog.component.html',\n  styleUrls: ['./delete-component-dialog.component.scss']\n})\nexport class DeleteComponentDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteComponentDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private compoService: CompoService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onConfirmDelete(): void {\n    this.compoService.deleteCompo(String(this.data.compo.id)).subscribe(\n      res => this.dialogRef.close(res),\n      error => this._snackBar.open(`删除失败`, \"关闭\")\n    )\n  }\n\n}\n","<h1 mat-dialog-title>删除确认</h1>\n<div mat-dialog-content>\n  <p>确定要删除以下配件信息吗？所有相关规格也将一并删除。</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\" (click)=\"onConfirmDelete()\">确认删除</button>\n  <button mat-button mat-dialog-close>取消</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../shared/models/product';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ProductService} from '../../shared/services/product.service';\nimport {Router} from '@angular/router';\n\nclass DialogData {\n  product!: Product\n}\n\n@Component({\n  selector: 'app-copy-product-dialog',\n  templateUrl: './copy-product-dialog.component.html',\n  styleUrls: ['./copy-product-dialog.component.scss']\n})\nexport class CopyProductDialogComponent implements OnInit {\n  new_id = new FormControl(null, [Validators.required, Validators.maxLength(16), Validators.pattern('[a-zA-Z0-9]*')]);\n  new_prod!: Product;\n\n  constructor(\n    public dialogRef: MatDialogRef<CopyProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public _snackBar: MatSnackBar,\n    private productService: ProductService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.new_prod = this.data.product;\n  }\n\n  onProductCopyConfirm() {\n    this.productService.postProduct({...this.data.product, id: this.new_id.value}).subscribe(\n      res => this.dialogRef.close(res),\n      error => this.onFailure('复制产品')\n    );\n  }\n\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n  onDetailInfoEdit() {\n    this.router.navigateByUrl(`/copy-product/${this.data.product.id}/${this.new_id.value}`);\n    this.dialogRef.close();\n  }\n}\n","<div mat-dialog-title>\n  <p class=\"mat-title\">复制产品</p>\n  <p class=\"mat-title promise piece\"> 拷贝的原产品序列号为：{{data.product.id}}</p>\n</div>\n\n<div mat-dialog-content>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>产品序列号</mat-label>\n    <input matInput [formControl]=\"new_id\">\n  </mat-form-field>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" [disabled]=\"!new_id.valid\" (click)=\"onDetailInfoEdit()\">继续编辑其他信息</button>\n  <button mat-raised-button color=\"primary\" [disabled]=\"!new_id.valid\" (click)=\"onProductCopyConfirm()\">直接提交</button>\n  <button mat-button color=\"warn\" (click)=\"dialogRef.close()\">取消</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, Validators} from '@angular/forms';\nimport {Batch} from '../../shared/models/batch';\nimport {BatchService} from '../../shared/services/batch.service';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {Work} from '../../shared/models/work';\nimport {WorkService} from '../../shared/services/work.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BatchProcessService} from '../../shared/services/batch-process.service';\n\nclass DialogData {\n  workingBatches!: Batch[]\n}\n\n@Component({\n  selector: 'app-add-day-invoice-dialog',\n  templateUrl: './add-day-invoice-dialog.component.html',\n  styleUrls: ['./add-day-invoice-dialog.component.scss']\n})\nexport class AddDayInvoiceDialogComponent implements OnInit {\n  selectedBatch!: Batch | undefined;\n  selectedBatchProcess!: BatchProcess | undefined;\n  selectedWork!: Work | undefined;\n  completeUnitCtrl = new FormControl(null)\n  completeHourCtrl = new FormControl(null)\n\n  workingBatches: Batch[] = []\n  calculateMethod: string = ''\n  finishedBatchAddCtrl = new FormControl('', Validators.required);\n\n  constructor(\n    public dialogRef: MatDialogRef<AddDayInvoiceDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private batchService: BatchService,\n    public bpService: BatchProcessService,\n    private workService: WorkService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data && this.data.workingBatches.length > 0) {\n      this.workingBatches = this.data.workingBatches;\n    } else {\n      this.batchService.getWorkingBatches().subscribe(\n        res => this.workingBatches = res\n      );\n    }\n  }\n\n  onConfirmClick() {\n    if (this.selectedWork) {\n      this.selectedWork.complete_unit += this.completeUnitCtrl.value;\n      if (this.calculateMethod === 'unit') {\n        this.selectedWork.unit_pay = this.selectedBatchProcess?.unit_pay || this.selectedBatchProcess?.process?.unit_pay || 1.5;\n      } else {\n        this.selectedWork.complete_hour += this.completeHourCtrl.value;\n      }\n      this.workService.putWork(this.selectedWork).subscribe(\n        res => {\n          this.completeHourCtrl.reset();\n          this.completeUnitCtrl.reset();\n          this.onSuccess('员工日产添加');\n        },\n        error => this.onFailure('员工日产添加')\n      )\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n  onBatchChange() {\n    this.selectedBatchProcess = undefined;\n    this.selectedWork = undefined;\n  }\n\n  onBatchProcessChange() {\n    this.selectedWork = undefined;\n  }\n\n  onFinishedBatchAdd(batch_id: number) {\n    this.batchService.getBatch(batch_id).subscribe(\n      res => {\n        this.workingBatches.push(res);\n        this.onSuccess('历史批次加入');\n      },\n      error => {\n        this.onFailure('历史批次加入');\n        console.log(error);\n      }\n    )\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加日产记录</p>\n</div>\n\n<div mat-dialog-content fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n  <section fxLayout=\"column\" fxLayoutAlign=\" none\" fxFlex=\"30\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>生产批次</mat-label>\n      <mat-select [(ngModel)]=\"selectedBatch\" (ngModelChange)=\"onBatchChange()\">\n        <mat-option *ngFor=\"let b of workingBatches\" [value]=\"b\" class=\"flex-container\">\n          <p>{{b.product_name}}（{{b.plan_amount}}件）| {{b.start | date:\"YYYY/MM/dd\" }}</p>\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field *ngIf=\"selectedBatch\" appearance=\"outline\">\n      <mat-label>工艺流程</mat-label>\n      <mat-select [(ngModel)]=\"selectedBatchProcess\" (ngModelChange)=\"onBatchProcessChange()\">\n        <mat-option>----</mat-option>\n        <mat-option *ngFor=\"let bp of bpService.sortedBatchProcesses(selectedBatch.batch_process)\" [value]=\"bp\"> {{bp.process?.process_order}} - {{bp.process?.process_name}} </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field *ngIf=\"selectedBatchProcess\" appearance=\"outline\">\n      <mat-label>工单</mat-label>\n      <mat-select [(ngModel)]=\"selectedWork\">\n        <mat-option>----</mat-option>\n        <mat-option *ngFor=\"let work of selectedBatchProcess.work\" [value]=\"work\"> {{work.employee_name}} | {{work.work_date | date : 'yyyy/MM/dd'}} | 计划 {{work.plan_unit}} 件 </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <br>\n    <mat-divider></mat-divider>\n    <div class=\"button-container fullfill\">\n      <p class=\"highlight\">加入历史生产批次：</p>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>历史批次号</mat-label>\n        <input matInput [formControl]=\"finishedBatchAddCtrl\">\n      </mat-form-field>\n      <button mat-stroked-button color=\"primary\"\n              [disabled]=\"!finishedBatchAddCtrl.valid\"\n              (click)=\"onFinishedBatchAdd(finishedBatchAddCtrl.value)\"> 确认 </button>\n    </div>\n\n  </section>\n\n  <section fxLayout=\"column\" fxLayoutAlign=\" none\" *ngIf=\"selectedWork\" fxFlex=\"60\">\n    <mat-expansion-panel hideToggle>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-container\">\n          <p class=\"record piece\">{{selectedWork.process_name}}</p>\n          <p class=\"record piece\">计划 {{selectedWork.plan_unit}} 件</p>\n        </mat-panel-title>\n        <mat-panel-description>\n          <p class=\" piece\">{{selectedWork.work_date | date : 'yyyy/MM/dd'}}</p>\n          <p class=\" piece\">计件工资：{{selectedWork.unit_pay | currency : 'CNY' : 'symbol-narrow'}}</p>\n          <p class=\" piece\">小时工资：{{selectedWork.hour_pay | currency : 'CNY' : 'symbol-narrow'}}</p>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list>\n        <mat-list-item *ngFor=\"let ws of selectedWork.work_specification\" class=\"flex-container\">\n          <p class=\"mat-h4 piece\">{{ws.component_name}}</p>\n          <p class=\"mat-h4 piece\">应领：{{ws.plan_amount}}</p>\n          <p class=\"mat-h4 piece\">（实领：{{ws.actual_amount}}）</p>\n        </mat-list-item>\n      </mat-list>\n      <div  class=\"flex-container\">\n        <p class=\"info piece\">已完成件数：{{selectedWork.complete_unit}}</p>\n        <p class=\"info piece\">已完成小时：{{selectedWork.complete_hour}}</p>\n      </div>\n    </mat-expansion-panel>\n    <div>\n      <div class=\"isolated\">\n        <h4>选择酬劳结算方式</h4>\n        <mat-button-toggle-group [(ngModel)]=\"calculateMethod\" aria-label=\"Font Style\">\n          <mat-button-toggle value=\"unit\">计件<mat-icon>category</mat-icon></mat-button-toggle>\n          <mat-button-toggle value=\"hour\">计时<mat-icon>timer</mat-icon></mat-button-toggle>\n        </mat-button-toggle-group>\n      </div>\n      <div class=\"unit-pay-template\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>添加完成件数</mat-label>\n          <input matInput type=\"number\" step=\"1\" [formControl]=\"completeUnitCtrl\">\n        </mat-form-field>\n      </div>\n      <div class=\"hour-pay-template\"\n           *ngIf=\"calculateMethod==='hour'\"\n           fxLayout=\"column\"\n           fxLayoutAlign=\"space-around start\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>工作小时数</mat-label>\n          <input matInput type=\"number\" step=\"0.5\" [formControl]=\"completeHourCtrl\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>每小时工资</mat-label>\n          <input matInput type=\"number\" step=\"0.01\" [(ngModel)]=\"selectedWork.hour_pay\">\n        </mat-form-field>\n      </div>\n\n    </div>\n  </section>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\">确认修改</button>\n  <button mat-button (click)=\"onNoClick()\">关闭</button>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Batch} from '../shared/models/batch';\nimport {BatchService} from '../shared/services/batch.service';\nimport {MatListOption} from '@angular/material/list';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {BatchProcess} from '../shared/models/batch-process';\nimport {Employee} from '../shared/models/employee';\nimport {EmployeeService} from '../shared/services/employee.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateWorkDialogComponent} from './create-work-dialog/create-work-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {ProductService} from '../shared/services/product.service';\nimport {WorkService} from '../shared/services/work.service';\nimport {Work} from '../shared/models/work';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {CompleteWorkDialogComponent} from './complete-work-dialog/complete-work-dialog.component';\nimport {EditWorkDialogComponent} from './edit-work-dialog/edit-work-dialog.component';\nimport {WarehouseRecord} from '../shared/models/warehouse-record';\nimport {BatchProcessService} from '../shared/services/batch-process.service';\nimport {CreateBatchDialogComponent} from './create-batch-dialog/create-batch-dialog.component';\nimport {WarehouseRecordService} from '../shared/services/warehouse-record.service';\nimport {CompoService} from '../shared/services/compo.service';\nimport {UtilService} from '../shared/util.service';\nimport {SpecService} from '../shared/services/spec.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\nimport {AddDayInvoiceDialogComponent} from './add-day-invoice-dialog/add-day-invoice-dialog.component';\n\n@Component({\n  selector: 'app-manufacture',\n  templateUrl: './manufacture.component.html',\n  styleUrls: ['./manufacture.component.scss']\n})\nexport class ManufactureComponent implements OnInit {\n\n  displayId!: string;\n  displayedBatches: Batch[] = [];\n  selectedBatch!: Batch;\n  selectedBatchProcess!: BatchProcess;\n\n  step = 1;\n  batchTitleClass = new Map([['ongoing', 'success'], ['urgent', 'warn'], ['unstarted', 'promise']])\n  statusMap = new Map([['ongoing', '生产中'], ['urgent', '加急'], ['unstarted', '未开始'], ['finished', '已完成']])\n\n\n  specChoiceGroup!: FormGroup;\n  workingEmployees: Employee[] = [];\n\n  constructor(\n    public jwtTokenService: JWTTokenService,\n    private batchService: BatchService,\n    private formBuilder: FormBuilder,\n    private employeeService: EmployeeService,\n    private productService: ProductService,\n    public dialog: MatDialog,\n    private route: ActivatedRoute,\n    private workService: WorkService,\n    private _snackBar: MatSnackBar,\n    private specService: SpecService,\n    private bpService: BatchProcessService,\n    private wrService: WarehouseRecordService,\n    private compoService: CompoService,\n    private util: UtilService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.displayId = String(this.route.snapshot.paramMap.get('batch_id'));\n    this.batchService.autoUpdateBatchStatus().subscribe(\n      res => res.success && this.batchService.getUnfinishedBatches().subscribe(\n        res => {\n          this.displayedBatches = res;\n          this.displayedBatches.forEach(b => {\n            this.productService.getProductNameById(b.product_id).subscribe(\n              res => b.product_name = res.name,\n              error => console.log(error)\n            );\n            if (String(b.id) === String(this.displayId)) {\n              this.selectedBatch = b;\n            }\n          })\n        },\n        error => console.log(error)\n      )\n    );\n    this.employeeService.getEmployeesByStatus('working').subscribe(\n      res => this.workingEmployees = res,\n      error => console.log(error)\n    );\n    this.specChoiceGroup = this.formBuilder.group({});\n  }\n\n  onBatchChange(options: MatListOption[]) {\n    // map these MatListOptions to their values\n    this.selectedBatch = options[0].value;\n    this.step = this.selectedBatch.batch_process.find(bp => bp.status === 'ongoing' || bp.status === 'unstarted')?.process?.process_order || 1;\n    this.specChoiceGroup = new FormGroup({});\n  }\n\n  updateSpecChoiceGroup(bp: BatchProcess): void {\n    // this.selectedBatchProcess = bp;\n    this.specChoiceGroup = this.formBuilder.group({});\n    bp.process?.process_component.forEach(\n      pc => {\n        this.specChoiceGroup.addControl(pc.component_id, this.formBuilder.control('', Validators.required));\n      }\n    );\n    if (bp.warehouse_record && bp.warehouse_record.length > 0) {\n      bp.warehouse_record.forEach(wr => {\n        const compo_id = wr.component_id;\n        const spec_id = wr.specification_id;\n        const selectedSpec = bp.process?.process_component.find(pc => pc.component_id === compo_id)?.component?.specification?.find(spec => spec.id === spec_id)\n        this.specChoiceGroup.controls[compo_id].setValue(selectedSpec);\n      });\n      this.specChoiceGroup.disable();\n    } else {\n      this.specChoiceGroup.enable();\n    }\n  }\n\n  onConfirmSpecs(bp: BatchProcess): void {\n    bp.process?.process_component.forEach(pc => {\n      const wr: WarehouseRecord = {\n        batch_process_id: Number(bp.id),\n        component_id: pc.component_id,\n        component_name: pc.component?.name || '',\n        consumption: pc.consumption || 1,\n        specification_id: this.specChoiceGroup.controls[pc.component_id].value.id,\n        specification_net_price: this.specChoiceGroup.controls[pc.component_id].value.net_price,\n        specification_gross_price: this.specChoiceGroup.controls[pc.component_id].value.gross_price\n      };\n      this.wrService.postWarehouseRecord(wr).subscribe(\n        res => bp.warehouse_record?.push(res),\n        error => {\n          console.log(error);\n          this.onFailure('确认领料规格')\n        }\n      )\n    });\n    this.onSuccess('确认领料规格');\n    this.specChoiceGroup.disable();\n  }\n\n  onEditSpecs(bp: BatchProcess): void {\n    const new_wr_array: WarehouseRecord[] = [];\n    bp.warehouse_record?.forEach(wr => {\n      wr.specification_id = this.specChoiceGroup.controls[wr.component_id].value.id;\n      wr.specification_net_price = this.specChoiceGroup.controls[wr.component_id].value.net_price;\n      wr.specification_gross_price = this.specChoiceGroup.controls[wr.component_id].value.gross_price;\n      this.wrService.putWarehouseRecord(wr).subscribe(\n        res => new_wr_array.push(res),\n        error => {\n          console.log(error);\n          this.onFailure('修改领料规格')\n        }\n      )\n    });\n    bp.warehouse_record = new_wr_array;\n    this.rerenderBatch(bp.batch_id);\n    this.onSuccess('修改领料规格');\n    this.specChoiceGroup.disable();\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  openCreateWorkDialog(bp: BatchProcess, product_name: string): void {\n    const dialogRef = this.dialog.open(CreateWorkDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {bp: bp, batch_plan_unit: this.selectedBatch.plan_amount, employees: this.workingEmployees, product_name: product_name}\n    });\n    dialogRef.afterClosed().subscribe(\n      new_work => {\n        if (new_work) {\n          this.rerenderBatch(bp.batch_id);\n        }\n      }\n    );\n  }\n\n  openEditWorkDialog(work: Work, wr_array: WarehouseRecord[], unit_limit: number): void {\n    const specWithdrawsBefore = new Map();\n    work.work_specification?.forEach(\n      ws => specWithdrawsBefore.set(ws.specification_id, ws.actual_amount))\n    const dialogRef = this.dialog.open(EditWorkDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {work: work, warehouse_record: wr_array, max_amount: unit_limit}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      updated_work => updated_work && this.workService.putWork(updated_work).subscribe(\n        res => {\n          res.work_specification?.forEach(nws => {\n            const adjust_number = specWithdrawsBefore.get(nws.specification_id) - Number(nws.actual_amount);\n            this.specService.adjustSpecStock(nws.specification_id, adjust_number).subscribe();\n          });\n          this.rerenderBatch(Number(this.selectedBatch.id));\n          this.onSuccess('修改工人领料');\n        },\n        error => {\n          this.onFailure('修改工人领料');\n          console.log(error);\n        }));\n  }\n\n  openCompleteWorkDialog(work: Work): void {\n    const dialogRef = this.dialog.open(CompleteWorkDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {work: work}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      updated_work => {\n        if (updated_work) {\n          this.workService.putWork(updated_work).subscribe(\n            res => {\n              this.rerenderBatch(Number(this.selectedBatch.id));\n              this.onSuccess('确认完成');\n            },\n            error => {\n              console.log(error);\n              this.onFailure('确认完成');\n              return work;\n            })\n        }\n      }\n    );\n  }\n\n  openCreateBatchDialog(): void {\n    const dialogRef = this.dialog.open(CreateBatchDialogComponent, {\n      width: environment.SMALL_DIALOG_WIDTH\n    });\n    dialogRef.afterClosed().subscribe(\n      new_batch => {\n        if (new_batch) {\n          this.displayedBatches.push(new_batch);\n          this.onSuccess('创建生产批次');\n        }\n      }\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n  checkAllWorkDone(works: Work[]): boolean {\n    return !!(works.length && works.every(w => w.complete_unit && w.complete_unit > 0))\n  }\n\n  checkAllBatchProcessDone(bps: BatchProcess[]): boolean {\n    return bps.every(bp => bp.status === 'finished');\n  }\n\n  completeBatchProcess(bp: BatchProcess): void {\n    const complete_bp = {...bp}\n    // @ts-ignore\n    complete_bp.end_amount = complete_bp.work?.reduce((acc, w) => {\n      return acc + Number(w.complete_unit);\n    }, 0);\n    complete_bp.status = 'finished';\n    this.bpService.putBatchProcess(complete_bp).subscribe(\n      res => {\n        this.rerenderBatch(complete_bp.batch_id);\n        this.onSuccess('修改工艺状态');\n      },\n      error => {\n        this.onFailure('修改工艺状态');\n        console.log(error)\n      }\n    )\n  }\n\n  forceCompleteBatchProcess(bp: BatchProcess) {\n    const complete_bp = {...bp}\n    // @ts-ignore\n    complete_bp.end_amount = complete_bp.start_amount;\n    complete_bp.status = 'finished';\n    this.bpService.putBatchProcess(complete_bp).subscribe(\n      res => {\n        this.rerenderBatch(complete_bp.batch_id);\n        this.onSuccess('强制确认');\n      },\n      error => {\n        this.onFailure('强制确认');\n        console.log(error)\n      }\n    )\n  }\n\n  completeBatch(batch: Batch): void {\n    const updated_batch = {...batch}\n    updated_batch.id = updated_batch.id || 0\n    updated_batch.actual_amount = batch.batch_process[batch.batch_process.length - 1].end_amount || 0\n    updated_batch.status = 'finished';\n    updated_batch.end = this.util.mysqlDatetimeTransformer(new Date());\n    this.batchService.completeBatch(updated_batch.id, updated_batch.actual_amount).subscribe(\n      res => {\n        // delete from display\n        const targetIdx = this.displayedBatches.findIndex(b => b.id === res.id);\n        this.displayedBatches = this.displayedBatches.splice(targetIdx, 1);\n        // product inventory adjustment\n        this.productService.adjustProductInventory(batch.product_id, Number(batch.actual_amount)).subscribe()\n        this.onSuccess(`批次${res.id}完工确认`);\n      },\n      error => {\n        this.onFailure(`批次${batch.id}完工确认`);\n        console.log(error)\n      }\n    )\n  }\n\n  startBatchProcess(bp: BatchProcess, batch: Batch): void {\n    const updated_bp = {...bp}\n    updated_bp.status = 'ongoing';\n    const current_order = updated_bp.process?.process_order;\n    if (current_order === 1) {\n      updated_bp.start_amount = batch.plan_amount;\n    } else {\n      const last_bp = batch.batch_process.find(bp => bp.process?.process_order === (Number(current_order) - 1))!;\n      updated_bp.start_amount = last_bp.end_amount || last_bp.start_amount;\n    }\n    this.bpService.putBatchProcess(updated_bp).subscribe(\n      res => {\n        this.rerenderBatch(Number(this.selectedBatch.id));\n        this.onSuccess('修改工艺状态');\n      },\n      error => {\n        this.onFailure('修改工艺状态');\n        console.log(error)\n      }\n    )\n  }\n\n  rerenderBatch(batch_id: number): void {\n    this.batchService.getBatch(Number(batch_id)).subscribe(\n      updated_batch => {\n        const target_idx = this.displayedBatches.findIndex(b => b.id === batch_id);\n        this.displayedBatches[target_idx] = {...this.displayedBatches[target_idx], ...updated_batch};\n        this.selectedBatch = this.displayedBatches[target_idx];\n      }\n    )\n  }\n\n  sortedBatchProcesses(bp_array: BatchProcess[]): BatchProcess[] {\n    return bp_array.sort((a, b) => (Number(a.process?.process_order) - Number(b.process?.process_order)))\n  }\n\n  openAddDayInvoiceDialog() {\n    const workingBatches = this.displayedBatches.filter(b => (b.status !== 'unstarted'));\n    const dialogRef = this.dialog.open(AddDayInvoiceDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {workingBatches: workingBatches}\n    });\n    dialogRef.afterClosed().subscribe(\n    );\n  }\n\n  setBatchUrgent(selectedBatch: Batch) {\n    this.batchService.putBatch({...selectedBatch, status: 'urgent'}).subscribe(\n      res => {\n        this.rerenderBatch(res.id!);\n        this.onSuccess('加急')\n      },\n      error => {\n        this.onFailure('加急')\n        console.log(error)\n      }\n    )\n  }\n\n  print(element: any) {\n    console.log(element);\n  }\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <button mat-button class=\"call\" (click)=\"openCreateBatchDialog()\" [disabled]=\"jwtTokenService.getRole()==='employee'\"> 创建新生产批次 </button>\n    <button mat-button class=\"view\" routerLink=\"/history\"> 历史生产批次 </button>\n    <button mat-button class=\"call\" (click)=\"openAddDayInvoiceDialog()\"> 添加日产记录 </button>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"fullfill\">\n    <mat-card fxFlex=\"40\">\n      <mat-card-header>\n        <mat-card-title> 未完工批次 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-selection-list #unfinished [multiple]=\"false\" (selectionChange)=\"onBatchChange(unfinished.selectedOptions.selected)\">\n          <mat-list-option *ngFor=\"let batch of displayedBatches\"\n                           [value]=\"batch\"\n                           [disabled]=\"jwtTokenService.getRole()==='employee'\">\n            <p [attr.class]=\"batchTitleClass.get(batch.status)\">\n              {{batch.product_name}} | {{batch.plan_amount}}件 | 排产：{{batch.start | date:\"YYYY/MM/dd\" }}\n            </p>\n          </mat-list-option>\n        </mat-selection-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card *ngIf=\"selectedBatch && selectedBatch.id\" fxFlex=\"60\">\n      <mat-card-header>\n        <p class=\"mat-title highlight\">批次：{{selectedBatch.id}}</p>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-accordion class=\"example-headers-align\">\n          <mat-expansion-panel\n            [expanded]=\"step === (bp.process?.process_order || 1)\"\n            (opened)=\"setStep(bp.process?.process_order || 1);updateSpecChoiceGroup(bp)\"\n            hideToggle\n            *ngFor=\"let bp of sortedBatchProcesses(selectedBatch.batch_process)\">\n            <mat-expansion-panel-header *ngIf=\"bp.process\">\n              <mat-panel-title>\n                工艺{{bp.process.process_order}} - {{bp.process.process_name}}\n              </mat-panel-title>\n              <mat-panel-description>\n                状态：{{statusMap.get(bp.status)}}\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"meta-info\" *ngIf=\"bp.process && bp.process.process_order === step\">\n              <p class=\"info\"> 预计数量：{{bp.start_amount || '尚未开始'}} | 完成数量：{{bp.end_amount || '尚未完成'}}</p>\n              <p class=\"subtitle\"> 采用配件： </p>\n              <div class=\"greyborder distance\">\n                <p *ngIf=\"!bp.process.process_component || bp.process.process_component.length === 0\"> 无需配件 </p>\n                <div *ngFor=\"let pc of bp.process.process_component\">\n                  <form [formGroup]=\"specChoiceGroup\"\n                      class=\"flex-container\">\n                    <div *ngIf=\"pc.component\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"fullfill\">\n                      <p> {{pc.component.name}} * {{pc.consumption}} </p>\n                      <mat-form-field>\n                        <mat-label> 选择具体使用规格 </mat-label>\n                        <mat-select [formControlName]=\"pc.component.id || ''\">\n                          <mat-option *ngFor=\"let spec of pc.component.specification\" [value]=\"spec\">\n                            <p [attr.class]=\"(spec.stock > (pc.consumption * (bp.start_amount || 0))) ? 'piece' : 'piece warn'\">\n                              {{spec.id}} | {{spec.vendor?.company}}（库存{{spec.stock}}件）\n                            </p>\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                  </form>\n                </div>\n                <button mat-button class=\"call\"\n                        *ngIf=\"bp.process.process_component && bp.process.process_component.length > 0 && !(bp.warehouse_record && bp.warehouse_record.length > 0)\"\n                        [disabled]=\"specChoiceGroup.invalid\"\n                        (click)=\"onConfirmSpecs(bp)\">确认领料规格</button>\n                <button mat-button class=\"action\"\n                        *ngIf=\"bp.process.process_component && bp.process.process_component.length > 0 && !!(bp.warehouse_record && bp.warehouse_record.length > 0) && (specChoiceGroup.status === 'DISABLED')\"\n                        (click)=\"specChoiceGroup.enable()\">修改领料规格</button>\n                <button mat-button class=\"call\"\n                        *ngIf=\"!!(bp.warehouse_record && bp.warehouse_record.length > 0) && !(specChoiceGroup.status === 'DISABLED')\"\n                        [disabled]=\"specChoiceGroup.invalid\"\n                        (click)=\"onEditSpecs(bp)\">确认修改</button>\n              </div>\n            </div>\n\n            <br>\n            <div class=\"work-info\">\n              <p class=\"subtitle\"> 领料记录： </p>\n              <div class=\"greyborder distance work\" *ngIf=\"!bp.work || bp.work.length === 0\"> <p>无领料记录</p> </div>\n              <div *ngIf=\"!!bp.work\">\n                <div *ngFor=\"let work of bp.work\" class=\"greyborder distance work\">\n                  <div class=\"flex-container\">\n                    <p class=\"mat-h4 record super-piece\"> {{work.employee_name}} (工号{{work.employee_id}}) </p>\n                    <p class=\"mat-h4 record super-piece\">计划{{work.plan_unit}}件</p>\n                    <p class=\"mat-h4 record super-piece\">已产{{work.complete_unit}}件</p>\n                    <p class=\"mat-h4 record super-piece\">领料于{{work.work_date | date:\"YYYY/MM/dd\"}}</p>\n                  </div>\n                  <p *ngFor=\"let ws of work.work_specification\">\n                    {{ws.specification_id}} 实领 {{ws.actual_amount}} (应领：{{ws.plan_amount}})\n                  </p>\n                  <div class=\"flex-container\">\n                    <button mat-raised-button color=\"accent\"\n                            [disabled]=\"!bp.warehouse_record\"\n                            (click)=\"openEditWorkDialog(work, bp.warehouse_record || [], bp.start_amount || 0);rerenderBatch(selectedBatch.id)\"\n                            *ngIf=\"work.complete_unit < work.plan_unit\">\n                      编辑该工人领料</button>\n<!--                    <button mat-raised-button color=\"primary\"-->\n<!--                            (click)=\"openCompleteWorkDialog(work)\"-->\n<!--                            *ngIf=\"!work.complete_unit\">-->\n<!--                      标记完成</button>-->\n                    <button mat-button color=\"primary\" *ngIf=\"work.complete_unit >= work.plan_unit\" disabled>已全额完成</button>\n                  </div>\n                  <p class=\"detail warn\" *ngIf=\"(work.complete_unit > 0) && (work.complete_unit < work.plan_unit)\">已有相关日产单，编辑领料时请注意已完成的数量</p>\n                </div>\n              </div>\n              <div class=\"flex-container\">\n                <button mat-raised-button\n                        color=\"accent\"\n                        (click)=\"openCreateWorkDialog(bp, selectedBatch.product_name || '')\"\n                        [disabled]=\"bp.status !== 'ongoing' || ((bp.warehouse_record?.length === 0 ) && (bp.process?.process_component!.length > 0))\">\n                  添加参与工人</button>\n                <button mat-raised-button\n                        color=\"primary\"\n                        (click)=\"completeBatchProcess(bp)\"\n                        [disabled]=\"!checkAllWorkDone(bp.work || [])\"\n                        *ngIf=\"bp.status === 'ongoing'\">确认工艺完成</button>\n                <button mat-raised-button\n                        color=\"warn\"\n                        (click)=\"forceCompleteBatchProcess(bp)\"\n                        *ngIf=\"bp.status === 'ongoing'\">强制确认完成</button>\n                <button mat-raised-button\n                        color=\"primary\"\n                        *ngIf=\"bp.status === 'finished'\" disabled>工艺已完成</button>\n                <button mat-raised-button\n                        color=\"primary\"\n                        (click)=\"startBatchProcess(bp, selectedBatch);rerenderBatch(selectedBatch.id)\"\n                        *ngIf=\"bp.status === 'unstarted'\">开始该工艺</button>\n              </div>\n            </div>\n\n            <mat-action-row *ngIf=\"selectedBatch.batch_process\">\n              <button mat-button color=\"warn\" (click)=\"prevStep()\" *ngIf=\"step > 1\">前一步</button>\n              <button mat-button color=\"primary\" (click)=\"nextStep()\" *ngIf=\"step <= selectedBatch.batch_process.length\">后一步</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n        </mat-accordion>\n\n        <div class=\"button-container\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n          <button mat-raised-button color=\"warn\" class=\"insert\" *ngIf=\"selectedBatch.status !== 'urgent'\" (click)=\"setBatchUrgent(selectedBatch)\">加急该批次</button>\n          <button mat-raised-button color=\"primary\" class=\"insert\"  [disabled]=\"!checkAllBatchProcessDone(selectedBatch.batch_process)\" (click)=\"completeBatch(selectedBatch)\">确认批次完工</button>\n        </div>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {BatchProcess} from '../models/batch-process';\nimport {environment} from '../../../environments/environment';\nimport {Batch} from '../models/batch';\nimport {ProcessService} from './process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatchProcessService {\n\n  constructor(\n    private http: HttpClient,\n    private processService: ProcessService,\n    ) { }\n\n  getBatchProcessById(id: number): Observable<BatchProcess> {\n    return this.http.get<BatchProcess>(`${environment.API_URL}/batch_process/${id}`)\n  }\n\n  postBatchProcess(bp: BatchProcess): Observable<BatchProcess> {\n    return this.http.post<BatchProcess>(`${environment.API_URL}/batch_process`, bp)\n  }\n\n  postBatchProcessesByBatch(batch: Batch): BatchProcess[] {\n    const bp_array: BatchProcess[] = []\n    this.processService.getProcessesByProductId(batch.product_id).subscribe(\n      processes => {\n        processes.forEach(p => {\n          const bp: BatchProcess = {unit_pay: p.unit_pay, batch_id: Number(batch.id), process_id: String(p.id), status: 'unstarted'};\n          this.postBatchProcess(bp).subscribe(\n            bp => bp_array.push(bp)\n          )})\n      }\n    )\n    return bp_array;\n  }\n\n  putBatchProcess(bp: BatchProcess): Observable<BatchProcess> {\n    return this.http.put<BatchProcess>(`${environment.API_URL}/batch_process`, bp)\n  }\n\n  sortedBatchProcesses(bp_array: BatchProcess[]): BatchProcess[] {\n    return bp_array.sort((a, b) => (Number(a.process?.process_order) - Number(b.process?.process_order)))\n  }\n}\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Employee} from '../shared/models/employee';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {EmployeeService} from '../shared/services/employee.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {environment} from '../../environments/environment';\nimport {CreateEmployeeDialogComponent} from './create-employee-dialog/create-employee-dialog.component';\nimport {CreateSalaryForOneDialogComponent} from '../salary/create-salary-for-one-dialog/create-salary-for-one-dialog.component';\nimport {Salary} from '../shared/models/salary';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss']\n})\nexport class EmployeeComponent implements OnInit, AfterViewInit{\n  displayedProperties: string[] = [\n    'id', 'name', 'gender', 'phone',\n    'ssn', 'department', 'notice', 'edit'\n  ];\n\n  displayedColumns = new Map([['id', '工号'], ['name','姓名'],\n    ['gender', '性别'], ['phone', '联系电话'], ['ssn', '身份证号'], ['department', '部门'], ['notice', '备注'],\n    ['edit', '操作']]);\n\n  searchKeyword = new FormControl('')\n  employees: Employee[] = [];\n  dataSource: any;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    private employeeService: EmployeeService,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.employeeService.getEmployees().subscribe(\n      res => {\n        this.employeeService.employees = res;\n        this.employees = res;\n        this.dataSource = new MatTableDataSource<Employee>(this.employees);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    );\n    this.searchKeyword.valueChanges.subscribe(\n      kw => {\n        this.dataSource = new MatTableDataSource<Employee>(this.employeeService.employeeSearchFilter(this.employees, kw));\n        this.dataSource.paginator = this.paginator;\n      })\n  }\n\n  ngAfterViewInit() {}\n\n  openCreateEmployeeDialog(): void {\n    const dialogRef = this.dialog.open(CreateEmployeeDialogComponent, {\n      width: environment.SMALL_DIALOG_WIDTH\n    });\n    dialogRef.afterClosed().subscribe(new_employee => {\n      if (new_employee) {\n        this.employees.push(new_employee);\n        this.dataSource = new MatTableDataSource<Employee>(this.employees);\n      }\n\n    });\n  }\n\n  onEmployeeSubmit(employee: Employee): void {\n    this.employeeService.putEmployee(employee).subscribe(\n      res => this.onSuccess('修改员工信息'),\n      error => this.onFailure('修改员工信息')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n  checkLastMonthSalary(emp: Employee) {\n    const flag = new Date();\n    flag.setDate(1);\n    const end_date = new Date(flag.getTime());\n    flag.setMonth(flag.getMonth()-1);\n    const start_date = new Date(flag.getTime());\n    console.log(start_date, end_date)\n    const dialogRef = this.dialog.open(CreateSalaryForOneDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {employees: this.employees, target_employee: emp, start_date: start_date, end_date: end_date}\n    });\n    dialogRef.afterClosed().subscribe(\n      ret_salary => {\n        if (ret_salary) {\n          this.onSuccess('薪水结算');\n        }\n      }\n    );\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <mat-form-field appearance=\"standard\" class=\"field-search\">\n      <mat-label>搜索</mat-label>\n      <input matInput type=\"text\" [formControl]=\"searchKeyword\">\n    </mat-form-field>\n    <button mat-button class=\"call\" (click)=\"openCreateEmployeeDialog()\"> 添加新员工 </button>\n  </div>\n\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\"\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef>{{displayedColumns.get(col)}}</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit\"><mat-icon>edit</mat-icon></button>\n              <button mat-stroked-button (click)=\"checkLastMonthSalary(element)\"> 结算上月工资 </button>\n            </div>\n            <span #spanHeader>\n              {{element[col]}}\n            </span>\n          </div>\n          <div *ngIf=\"element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col === 'edit'; else dataField\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit; onEmployeeSubmit(element);\"><mat-icon>check</mat-icon></button>\n            </div>\n            <ng-template #dataField>\n              <mat-form-field>\n                <mat-label>{{col}}</mat-label>\n                <input [type]=\"'text'\" matInput [(ngModel)]=\"element[col]\">\n              </mat-form-field>\n            </ng-template>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProperties;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {WorkSpecification} from '../models/work-specification';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkSpecificationService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getWorkSpecifications(): Observable<WorkSpecification[]> {\n    return this.http.get<WorkSpecification[]>(`${environment.API_URL}/work_specification`)\n  }\n\n  getWorkSpecificationById(work_specification_id: number): Observable<WorkSpecification> {\n    return this.http.get<WorkSpecification>(`${environment.API_URL}/work_specification/${work_specification_id}`)\n  }\n\n  getWorkSpecificationsByWorkId(work_id: number): Observable<WorkSpecification[]> {\n    return this.http.get<WorkSpecification[]>(`${environment.API_URL}/work_specification/employee_id/${work_id}`)\n  }\n\n  postWorkSpecification(work_specification: WorkSpecification): Observable<WorkSpecification> {\n    return this.http.post<WorkSpecification>(`${environment.API_URL}/work_specification`, work_specification)\n  }\n\n  putWorkSpecification(work_specification: WorkSpecification): Observable<WorkSpecification> {\n    return this.http.put<WorkSpecification>(`${environment.API_URL}/work_specification`, work_specification)\n  }\n\n  deleteWorkSpecification(work_specification_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/work_specification/${work_specification_id}`)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://47.96.104.221:81',\n  // API_URL: 'http://0.0.0.0:81',\n  SMALL_DIALOG_WIDTH: '40%',\n  MEDIAN_DIALOG_WIDTH: '60%',\n  LARGE_DIALOG_WIDTH: '80%'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div>\n  <div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div class=\"row-container\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n    </div>\n  </div>\n  <div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n    <div class=\"row-container\" fxLayout=\"column\" fxLayoutAlign=\"start\">\n      <mat-card class=\"column\">\n        <mat-card-title>\n          <p>未完成批次</p>\n        </mat-card-title>\n        <mat-card-content>\n          <p class=\"info mat-title\" *ngIf=\"!ongoing_batches && !plan_batches\"> 没有未完成的生产批次 </p>\n          <mat-list>\n            <div mat-subheader>生产中</div>\n            <mat-list-item class=\"clickable\" *ngFor=\"let batch of ongoing_batches\" [routerLink]=\"['/manufacture', batch.id]\">\n              <mat-icon mat-list-icon>pending</mat-icon>\n              <div mat-line>{{batch.product_name}} * {{batch.plan_amount}}</div>\n              <div mat-line> {{batch.start | date : 'YYYY/MM/dd'}} </div>\n            </mat-list-item>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <div mat-subheader>未开始</div>\n            <mat-list-item class=\"clickable\" *ngFor=\"let batch of plan_batches\" [routerLink]=\"['/manufacture', batch.id]\">\n              <mat-icon mat-list-icon>update</mat-icon>\n              <div mat-line>{{batch.product_name}} * {{batch.plan_amount}}</div>\n              <div mat-line> {{batch.start | date : 'YYYY/MM/dd'}} </div>\n            </mat-list-item>\n          </mat-list>\n        </mat-card-content>\n      </mat-card>\n      <mat-card class=\"column\">\n        <mat-card-title>\n          <p>过去一周完成批次</p>\n        </mat-card-title>\n        <mat-card-content>\n          <p class=\"info mat-title\" *ngIf=\"!recent_finished_batches\"> 过去一周没有完成生产批次 </p>\n          <mat-list>\n            <mat-list-item class=\"clickable\" *ngFor=\"let batch of recent_finished_batches\" [routerLink]=\"['/batch-summary', batch.id]\">\n              <mat-icon mat-list-icon>check_circle_outline</mat-icon>\n              <div mat-line>{{batch.product_name}} * {{batch.plan_amount}}</div>\n              <div mat-line> {{batch.start | date}} </div>\n            </mat-list-item>\n          </mat-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div class=\"row-container\" fxLayout=\"column\" fxLayoutAlign=\"start none\">\n      <mat-card class=\"column\">\n        <mat-card-title> 库存预警 </mat-card-title>\n        <br>\n        <mat-card-content>\n          <ul>\n            <li *ngFor=\"let compo of displayCompos\">\n              <p class=\"mat-h3 info\">\n                {{compo.name}}({{compo.id}}) | 现有 {{getTotalStock(compo)}} | 警戒线 {{compo.warn_stock}}\n              </p>\n            </li>\n          </ul>\n\n        </mat-card-content>\n      </mat-card>\n      <mat-card class=\"column\">\n        <mat-card-title> 近期操作 </mat-card-title>\n        <br>\n        <mat-card-content>\n        </mat-card-content>\n      </mat-card>\n\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {BatchService} from '../shared/services/batch.service';\nimport {OperationService} from '../shared/services/operation.service';\nimport {Batch} from '../shared/models/batch';\nimport {ProductService} from '../shared/services/product.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Compo} from '../shared/models/compo';\nimport {CompoService} from '../shared/services/compo.service';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n  ongoing_batches!: Batch[];\n  plan_batches!: Batch[];\n  recent_finished_batches!: Batch[];\n\n  compos: Compo[] = [];\n  displayCompos: Compo[] = [];\n\n  constructor(\n    private batchService: BatchService,\n    private productService: ProductService,\n    private operationService: OperationService,\n    private compoService: CompoService\n  ) { }\n\n  ngOnInit(): void {\n    this.batchService.autoUpdateBatchStatus().subscribe(\n      res => {\n        if (res.success) {\n          this.batchService.getBatchesByStatus('ongoing').subscribe(\n            batches => {\n              this.ongoing_batches = batches;\n              this.ongoing_batches.forEach(b => {\n                this.productService.getProductNameById(b.product_id).subscribe(\n                  res => b.product_name = res.name\n                )})},\n            error => {console.log(error)}\n          );\n          this.batchService.getBatchesByStatus('unstarted').subscribe(\n            batches => {\n              this.plan_batches = batches;\n              this.plan_batches.forEach(b => {\n                this.productService.getProductNameById(b.product_id).subscribe(\n                  res => b.product_name = res.name\n                );})},\n            error => {console.log(error)}\n            );\n        this.batchService.getRecentFinishedBatches().subscribe(\n          res => {\n            this.recent_finished_batches = res;\n            this.recent_finished_batches.forEach(b => {\n              this.productService.getProductNameById(b.product_id).subscribe(\n                res => b.product_name = res.name\n              );})\n          },\n          error => {console.log(error)}\n        )}\n      });\n    this.compoService.getCompos().subscribe(\n      res => {\n        this.compos = res;\n        this.checkWarns();\n      },\n      error => console.log(error)\n    )\n  }\n\n  checkWarns(): void {\n    this.displayCompos = this.compos.filter(compo => this.getTotalStock(compo) < compo.warn_stock);\n  }\n\n  getTotalStock(compo: Compo): number {\n    return Number(compo.specification?.reduce((acc, spec) => acc + spec.stock, 0));\n  }\n\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Work} from '../../shared/models/work';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {map} from 'rxjs/operators';\n\nclass DialogData {\n  work!: Work;\n}\n\nclass method {\n  method!: string;\n  display!: string\n}\n\n@Component({\n  selector: 'app-complete-work-dialog',\n  templateUrl: './complete-work-dialog.component.html',\n  styleUrls: ['./complete-work-dialog.component.scss']\n})\nexport class CompleteWorkDialogComponent implements OnInit {\n  workCompleteGroup!: FormGroup;\n  methodCtrl = new FormControl('', Validators.required);\n  methods: method[] = [{method: 'complete_unit', display: '计件'}, {method: 'complete_hour', display: '计时'}]\n  isByHour: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<CompleteWorkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.workCompleteGroup = this.formBuilder.group({\n      complete_unit: new FormControl(0, Validators.required),\n      complete_hour: new FormControl(null)\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirm(): void {\n    const return_work: Work = {...this.data.work, ...this.workCompleteGroup.value};\n    this.dialogRef.close(return_work)\n  }\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">确认完成</p>\n</div>\n\n<div mat-dialog-content>\n<!--  <label id=\"example-radio-group-label\">酬劳计算方式</label>-->\n<!--  <mat-radio-group [formControl]=\"methodCtrl\">-->\n<!--    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let m of methods\" [value]=\"m.method\">-->\n<!--      {{m.display}}-->\n<!--    </mat-radio-button>-->\n<!--  </mat-radio-group>-->\n  <mat-slide-toggle [(ngModel)]=\"isByHour\"> 计时工单 </mat-slide-toggle>\n\n  <form [formGroup]=\"workCompleteGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>实际完成件数</mat-label>\n      <input type=\"number\" matInput formControlName=\"complete_unit\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" *ngIf=\"isByHour\">\n      <mat-label>工作小时</mat-label>\n      <input type=\"number\" matInput formControlName=\"complete_hour\">\n      <mat-hint>只有按小时计酬时需要填写，否则请留空</mat-hint>\n    </mat-form-field>\n  </form>\n\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">取消</button>\n  <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">确认完成</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operation',\n  templateUrl: './operation.component.html',\n  styleUrls: ['./operation.component.scss']\n})\nexport class OperationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>operation works!</p>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {Product} from '../shared/models/product';\nimport {ProductService} from '../shared/services/product.service';\nimport {Observable} from 'rxjs';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateWorkDialogComponent} from '../manufacture/create-work-dialog/create-work-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {CreateDeliveryDialogComponent} from '../delivery/create-delivery-dialog/create-delivery-dialog.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {Compo} from '../shared/models/compo';\nimport {EditProductDialogComponent} from './edit-product-dialog/edit-product-dialog.component';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\nimport {CopyProductDialogComponent} from './copy-product-dialog/copy-product-dialog.component';\nimport {ConfirmDeprecateDialogComponent} from './confirm-deprecate-dialog/confirm-deprecate-dialog.component';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnInit {\n\n  displayedProperties: string[] = [\n    'id', 'name', 'category', 'description',\n    'inventory', 'custom', 'notice',\n    'edit'\n  ];\n\n  displayedColumns = new Map([['id', '产品编码'], ['name','产品名称'],\n    ['category', '分类'], ['description', '描述'], ['inventory', '库存'], ['custom', '定制客户'], ['notice', '备注'],\n    ['edit', '操作']]);\n\n  products: Product[] = []\n  displayProducts: Product[] = []\n  dataSource: any\n\n  filterGroup!: FormGroup;\n  categories: string[] = [];\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    public jwtTokenService: JWTTokenService,\n    private productService: ProductService,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.productService.getValidProducts().subscribe(\n      res => {\n        this.products = res;\n        this.displayProducts = this.products;\n        this.categories = res.map(prod => prod.category).filter((v, idx, arr) => !!v && arr.indexOf(v) === idx);\n        this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    )\n    this.filterGroup = this.formBuilder.group({\n      keyword: new FormControl(''),\n      material: new FormControl(null),\n      category: new FormControl(null)\n    })\n    this.filterGroup.valueChanges.subscribe(\n      changes => {\n        this.displayProducts = this.productService.productSearchFilter(this.products, changes)\n        this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n      }\n    )\n  }\n\n  emptyFilter(): void {\n    this.filterGroup.reset()\n    this.displayProducts = this.products;\n    this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n  }\n\n  openCreateDeliveryDialog(product: Product) {\n    const dialogRef = this.dialog.open(CreateDeliveryDialogComponent, {\n      width: environment.SMALL_DIALOG_WIDTH,\n      data: {product: product}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      new_delivery => new_delivery && this.onSuccess('新增交付记录')\n    );\n  }\n\n  openEditProductDialog(product: Product) {\n    const dialogRef = this.dialog.open(EditProductDialogComponent, {\n      width: environment.LARGE_DIALOG_WIDTH,\n      data: {product: product}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      res => {\n        const targetIdx1 = this.products.findIndex(prod => prod.id === res.id);\n        const targetIdx2 = this.displayProducts.findIndex(prod => prod.id === res.id);\n        this.products[targetIdx1] = res;\n        this.displayProducts[targetIdx2] = res;\n        this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n        this.onSuccess('编辑')\n      }\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n\n  openCopyProductDialog(product: Product) {\n    const dialogRef = this.dialog.open(CopyProductDialogComponent, {\n      width: '30%',\n      height: '30%',\n      data: {product: product}\n    });\n    dialogRef.afterClosed().subscribe(\n      res => {\n        if (res) {\n          this.products.push(res);\n          this.displayProducts.push(res)\n          this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n          this.onSuccess('复制')\n        }})}\n\n\n  openDeprecateConfirmDialog(product: Product) {\n    const dialogRef = this.dialog.open(ConfirmDeprecateDialogComponent, {\n      width: '30%',\n      height: '30%',\n      data: {product: product}\n    });\n    dialogRef.afterClosed().subscribe(\n      res => {\n        if (res.success === 'success') {\n          const target_idx1 = this.displayProducts.findIndex(p => p.id === product.id);\n          this.displayProducts = this.displayProducts.splice(target_idx1, 1);\n          const target_idx2 = this.products.findIndex(p => p.id === product.id);\n          this.products = this.products.splice(target_idx2, 1);\n          this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n          this.onSuccess('停用');\n        }\n      }\n    )\n  }\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <form [formGroup]=\"filterGroup\" fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>搜索</mat-label>\n        <input matInput type=\"text\" formControlName=\"keyword\">\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>种类</mat-label>\n        <mat-select formControlName=\"category\">\n          <mat-option>**不限**</mat-option>\n          <mat-option *ngFor=\"let c of categories\" [value]=\"c\">\n            {{c}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <button mat-flat-button (click)=\"emptyFilter()\">清空筛选</button>\n    </form>\n    <button mat-button class=\"call\" [routerLink]=\"['/create-product']\" [disabled]=\"jwtTokenService.getRole()==='employee'\"> 创建新产品 </button>\n    <button mat-button class=\"view\" [routerLink]=\"['/delivery']\"> 查看交付记录 </button>\n    <button mat-button class=\"view\" [routerLink]=\"['/buyer']\"> 客户信息列表 </button>\n    <button mat-button class=\"view\" [routerLink]=\"['/deprecated']\"> 查看停用产品 </button>\n  </div>\n\n  <div class=\"mat-elevation-z8 data-table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef> {{displayedColumns.get(col)}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button [routerLink]=\"['/edit-product/', element.id]\" title=\"编辑\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>edit</mat-icon></button>\n              <button mat-icon-button (click)=\"openCreateDeliveryDialog(element)\" title=\"交付\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>local_shipping</mat-icon></button>\n              <button mat-icon-button (click)=\"openCopyProductDialog(element)\" title=\"复制\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>content_copy</mat-icon></button>\n              <button mat-icon-button (click)=\"openDeprecateConfirmDialog(element)\" title=\"停用\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>dangerous</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              {{element[col]}}\n            </span>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProperties;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of products\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n\n  </div>\n\n\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor() { }\n\n  mysqlDatetimeParser(dateString: string): Date {\n    return new Date(dateString.replace(' ', 'T'))\n  }\n\n  mysqlDatetimeTransformer(date: Date): string {\n    return date.toISOString().slice(0, 19).replace('T', ' ')\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Batch} from '../models/batch';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatchService {\n\n  constructor(private http: HttpClient) { }\n\n  getBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch`)\n  }\n\n  getBatch(id: number): Observable<Batch> {\n    return this.http.get<Batch>(`${environment.API_URL}/batch/${id}`)\n  }\n\n  getBatchesByStatus(status: string): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/status/${status}`)\n  }\n\n  getBatchesByProductIdAndStatus(product_id: string, status: string): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/product_id/${product_id}/${status}`)\n  }\n\n  getUnfinishedBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/unfinished`)\n  }\n\n  getWorkingBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/working`)\n  }\n\n  getCollectedBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/collected`)\n  }\n\n  postBatch(batch: Batch): Observable<Batch> {\n    return this.http.post<Batch>(`${environment.API_URL}/batch`, batch)\n  }\n\n  putBatch(batch: Batch): Observable<Batch> {\n    return this.http.put<Batch>(`${environment.API_URL}/batch`, batch)\n  }\n\n  completeBatch(batch_id: number, actual_amount: number): Observable<Batch> {\n    return this.http.put<Batch>(`${environment.API_URL}/batch/complete/${batch_id}/${actual_amount}`, null)\n  }\n\n  autoUpdateBatchStatus(): Observable<PostResponse> {\n    return this.http.put<PostResponse>(`${environment.API_URL}/batch/auto_update_status`, null)\n  }\n\n  getRecentFinishedBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/recent`)\n  }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ProductService} from '../shared/services/product.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Product} from '../shared/models/product';\nimport {Compo} from '../shared/models/compo';\nimport {Observable} from 'rxjs';\nimport {CompoService} from '../shared/services/compo.service';\nimport {map} from 'rxjs/operators';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {Process} from '../shared/models/process';\nimport {ProcessComponent} from '../shared/models/process-component';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.scss']\n})\nexport class CreateProductComponent implements OnInit {\n  productGroup!: FormGroup\n  newProduct!: Product;\n\n  processGroup!: FormGroup\n  processOfProduct: Process[] = []\n\n  processCompoGroup!: FormGroup\n  composOfProcess: Compo[] = []\n\n  compos: Compo[] = [];\n  compoOptions!: Observable<Compo[]>;\n  selectedCompo = new FormControl();\n\n  // MAT chip list params\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @ViewChild('compoInput') compoInput!: ElementRef<HTMLInputElement>;\n  public editProductId: string = '';\n  public originProductId: string = '';\n\n  constructor(\n    private productService: ProductService,\n    private compoService: CompoService,\n    private _snackBar: MatSnackBar,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.editProductId = this.route.snapshot.paramMap.get('pid') || '';\n    this.originProductId = this.route.snapshot.paramMap.get('origin_id') || '';\n    this.productGroup = this.formBuilder.group({\n      id: new FormControl('', [Validators.required, Validators.maxLength(16), Validators.pattern('[a-zA-Z0-9]*')]),\n      name: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      inventory: new FormControl(0, Validators.min(0)),\n      custom: new FormControl(''),\n      notice: new FormControl(''),\n      picture: new FormControl('')\n    });\n    this.processGroup = this.formBuilder.group({\n      process_name: new FormControl('', Validators.required),\n      process_order: new FormControl(1, [Validators.required, Validators.min(1)]),\n      unit_pay: new FormControl(null, [Validators.required, Validators.min(0)]),\n      notice: new FormControl('')\n    });\n    this.processCompoGroup = this.formBuilder.group({\n      component_id: new FormControl('', Validators.required),\n      attrition_rate: new FormControl(0.001)\n    });\n    this.productGroup.valueChanges.subscribe(product => this.newProduct = {...this.newProduct, ...product});\n    this.compoService.getCompos().subscribe(\n      res => this.compos = res,\n      error => console.log(error)\n    );\n    this.compoOptions = this.selectedCompo.valueChanges\n      .pipe(\n        map((c : string | null) => c ? this.compoAutocompleteFilter(c) : this.compos.slice())\n      );\n    if (this.editProductId || this.originProductId) {\n      this.productService.getProductById(this.editProductId || this.originProductId).subscribe(\n        target_prod => {\n          target_prod.process?.forEach(p => p.process_component.forEach(pc => pc.component_name = pc.component?.name));\n          this.newProduct = target_prod;\n          this.processOfProduct = target_prod.process || [];\n          delete target_prod.process;\n          this.productGroup.setValue(target_prod);\n        }\n      );\n      this.originProductId && this.productGroup.controls['id'].setValue(this.originProductId);\n      this.editProductId && this.productGroup.controls['id'].disable();\n    }\n  }\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      // @ts-ignore\n      this.composOfProcess.push(value);\n    }\n\n    this.selectedCompo.setValue(null);\n  }\n\n  remove(compo: Compo): void {\n    const index = this.composOfProcess.indexOf(compo);\n\n    if (index >= 0) {\n      this.composOfProcess.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.composOfProcess.push(event.option.value);\n    this.compoInput.nativeElement.value = '';\n    this.selectedCompo.setValue(null);\n  }\n\n  removeProcess(process: Process): void {\n    const index = this.processOfProduct.indexOf(process);\n    if (index >= 0) {\n      this.processOfProduct.splice(index, 1);\n      this.processGroup.controls['process_order'].setValue(this.processOfProduct.length + 1)\n    }\n  }\n\n  onProcessSubmit(form: FormGroup): void {\n    const newProcess: Process = {...form.value, product_id: this.productGroup.controls['id'].value};\n    newProcess.process_component = [];\n    this.composOfProcess.forEach(\n      compo => {\n        const existingIdx = newProcess.process_component.findIndex(pc => pc.component_id === compo.id)\n        if (existingIdx >= 0) {\n          newProcess.process_component[existingIdx].consumption += 1\n        } else {\n          const pc: ProcessComponent = {\n            consumption: 1,\n            component_id: compo.id || 'placeholder',\n            attrition_rate: 0.001,\n            component_name: compo.name\n          }\n          newProcess.process_component.push(pc);\n        }\n      });\n    this.processOfProduct.push(newProcess);\n    this.processGroup.reset();\n    this.selectedCompo.reset();\n    this.composOfProcess = [];\n    this.processGroup.controls['process_order'].setValue(this.processOfProduct.length + 1)\n  }\n\n  onFinalSubmit(): void {\n    this.newProduct = {...this.newProduct, ...this.productGroup.value}\n    this.newProduct.process = this.processOfProduct;\n    console.log(this.newProduct)\n    this.productService.postProduct(this.newProduct).subscribe(\n        res => {\n          this.onSuccess('创建产品');\n          this.productGroup.reset();\n          this.productGroup.reset();\n          this.processOfProduct = [];\n          this.composOfProcess = [];\n        },\n        error => this.onFailure('创建产品')\n      )\n  }\n\n  onConfirmEdit() {\n    this.newProduct = {...this.newProduct, ...this.productGroup.value}\n    this.newProduct.process = this.processOfProduct;\n    console.log(this.newProduct)\n    this.productService.putProduct(this.newProduct).subscribe(\n      res => {\n        this.onSuccess('编辑产品信息');\n        this.router.navigateByUrl('/inventory');\n      },\n      error => this.onFailure('编辑产品信息')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n  compoAutocompleteFilter(value: string): Compo[] {\n    return this.compos.filter(c => c.name.includes(value));\n  }\n\n  compoDisplayFn(compo: Compo): string {\n    return compo && compo.name ? `${compo.name} | ${compo.id}` : '';\n  }\n\n  sortedProcessArray(process_array: Process[]): Process[] {\n    return process_array.sort((a, b) => (Number(a.process_order) - Number(b.process_order)))\n  }\n\n  editProcess(process: Process) {\n    const index = this.processOfProduct.indexOf(process);\n    if (index >= 0) {\n      this.processOfProduct.splice(index, 1);\n    }\n    const pcs = process.process_component;\n    console.log(this.composOfProcess);\n    this.processGroup.setValue({\n      process_name: process.process_name,\n      process_order: process.process_order,\n      unit_pay: process.unit_pay,\n      notice: process.notice,\n    });\n    this.composOfProcess = pcs.map(pc => this.compos.find(c => c.id === pc.component_id) || this.compos[0]);\n    console.log(this.composOfProcess);\n  }\n\n}\n","<div>\n  <div class=\"sub-header\">\n    <p class=\"mat-title\" *ngIf=\"editProductId; else createProdTemplate\">编辑产品信息 - ID: {{editProductId}}</p>\n    <ng-template #createProdTemplate>\n      <p class=\"mat-title\">创建产品</p>\n      <p class=\"mat-title promise piece\" *ngIf=\"originProductId\"> 拷贝的产品序列号为：{{originProductId}}</p>\n    </ng-template>\n  </div>\n  <div  class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n    <mat-card class=\"new-product\">\n      <mat-card-header>\n        <mat-card-title> 产品信息 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"productGroup\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>产品序列号</mat-label>\n            <input matInput formControlName=\"id\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>产品名称</mat-label>\n            <input matInput formControlName=\"name\">\n            <mat-hint align=\"end\">可以与其他产品重复</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>分类</mat-label>\n            <input matInput formControlName=\"category\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>产品描述</mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>初始库存</mat-label>\n            <input matInput type=\"number\" formControlName=\"inventory\">\n            <mat-hint align=\"end\">默认值为零</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>定制客户</mat-label>\n            <input matInput type=\"text\" formControlName=\"custom\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"process\">\n      <mat-card-header>\n        <mat-card-title> 产品工艺 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"processGroup\" (ngSubmit)=\"onProcessSubmit(processGroup)\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>工艺名称</mat-label>\n            <input matInput formControlName=\"process_name\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>工艺顺序</mat-label>\n            <input type=\"number\" matInput formControlName=\"process_order\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>单件酬劳</mat-label>\n            <input type=\"number\" step=\"0.01\" matInput formControlName=\"unit_pay\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>所需配件</mat-label>\n            <mat-chip-list #chipList aria-label=\"compo selection\">\n              <mat-chip\n                *ngFor=\"let compo of composOfProcess\"\n                [selectable]=\"selectable\"\n                [removable]=\"removable\"\n                (removed)=\"remove(compo)\">\n                {{compo.name}} | {{compo.id}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n              </mat-chip>\n              <input\n                matInput\n                placeholder=\"所需配件...\"\n                #compoInput\n                [formControl]=\"selectedCompo\"\n                [matAutocomplete]=\"auto\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                (matChipInputTokenEnd)=\"add($event)\">\n            </mat-chip-list>\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"compoDisplayFn\" (optionSelected)=\"selected($event)\">\n              <mat-option *ngFor=\"let compo of this.compoOptions | async\" [value]=\"compo\">\n                {{compo.name}} | {{compo.id}} | {{compo.description}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n\n          <div class=\"button-container\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!productGroup.valid\">确认添加该工艺</button>\n          </div>\n          </form>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"submit-info\">\n      <mat-card-header>\n        <mat-card-title> 提交信息预览</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div *ngIf=\"this.newProduct\" fxLayout=\"column\" fxLayoutAlign=\"space-around start\" class=\"super-isolated\">\n          <div fxLayout=\"column\" fxLayoutAlign=\"start start\" >\n            <p class=\"info\"> 产品序列号： {{this.newProduct.id}}</p>\n            <p class=\"info\"> 产品名称：{{this.newProduct.name}} </p>\n            <p class=\"info\"> 产品分类：{{this.newProduct.category}} </p>\n            <p class=\"info\"> 工艺：</p>\n          </div>\n          <mat-accordion class=\"process-list-display\">\n            <mat-expansion-panel hideToggle *ngFor=\"let process of sortedProcessArray(processOfProduct)\">\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  {{process.process_name}}\n                </mat-panel-title>\n                <mat-panel-description>\n                  顺序：{{process.process_order}}\n                </mat-panel-description>\n              </mat-expansion-panel-header>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n                <mat-chip-list aria-label=\"Fish selection\">\n                  <mat-chip color=\"accent\" *ngFor=\"let pc of process.process_component\">{{pc.component_name}} | {{pc.component_id}}</mat-chip>\n                </mat-chip-list>\n                <div class=\"button-container\">\n                  <button mat-icon-button (click)=\"editProcess(process)\">\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                  <button mat-icon-button (click)=\"removeProcess(process)\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n                </div>\n              </div>\n            </mat-expansion-panel>\n          </mat-accordion>\n          <div class=\"button-container\">\n            <button mat-raised-button class=\"action\"\n                    (click)=\"onConfirmEdit()\"\n                    [disabled]=\"!productGroup.valid\"\n                    *ngIf=\"this.editProductId; else createProdTemplate\">提交编辑</button>\n            <ng-template #createProdTemplate>\n              <button mat-raised-button class=\"action\" (click)=\"onFinalSubmit()\" [disabled]=\"!productGroup.valid\">确认提交</button>\n            </ng-template>\n          </div>\n        </div>\n      </mat-card-content>\n\n    </mat-card>\n\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Buyer} from '../shared/models/buyer';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {BuyerService} from '../shared/services/buyer.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {environment} from '../../environments/environment';\nimport {CreateBuyerDialogComponent} from './create-buyer-dialog/create-buyer-dialog.component';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n@Component({\n  selector: 'app-buyer-list',\n  templateUrl: './buyer-list.component.html',\n  styleUrls: ['./buyer-list.component.scss']\n})\nexport class BuyerListComponent implements OnInit {\n  displayedProperties = ['name', 'company','payment_period', 'contact', 'address', 'notice', 'edit'];\n  displayedColumns = new Map([['name', '联系人姓名'], ['company','公司'], ['payment_period', '账期'],\n    ['contact', '联系方式'], ['address', '地址'], ['notice', '备注'], ['edit', '编辑']]);\n\n  searchKeyword = new FormControl('')\n  buyers: Buyer[] = [];\n  dataSource: any;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    public jwtTokenService: JWTTokenService,\n    private buyerService: BuyerService,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.buyerService.getBuyers().subscribe(\n      res => {\n        this.buyers = res;\n        this.dataSource = new MatTableDataSource<Buyer>(this.buyers);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    );\n    this.searchKeyword.valueChanges.subscribe(\n      kw => {\n        this.dataSource = new MatTableDataSource<Buyer>(this.buyerSearchFilter(kw));\n        this.dataSource.paginator = this.paginator;\n      })\n  }\n\n  openCreateBuyerDialog(): void {\n    const dialogRef = this.dialog.open(CreateBuyerDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH\n    });\n\n    dialogRef.afterClosed().subscribe(new_buyer => {\n      this.buyers.push(new_buyer);\n      this.dataSource = new MatTableDataSource<Buyer>(this.buyers);\n    });\n  }\n\n  buyerSearchFilter(keyword: string): Buyer[] {\n    return keyword\n      ? this.buyers.filter(\n        buyer => buyer.company.includes(keyword) || buyer.name.includes(keyword) || (buyer.notice && buyer.notice.includes(keyword)))\n      : this.buyers\n  }\n\n  onBuyerSubmit(buyer: Buyer): void {\n    this.buyerService.putBuyer(buyer).subscribe(\n      res => this.onSuccess('修改供应商'),\n      error => this.onFailure('修改供应商')\n    )\n  }\n\n  onBuyerDelete(buyer: Buyer): void {\n    this.buyerService.deleteBuyer(Number(buyer.id)).subscribe(\n      res => {\n        const target = this.buyers.findIndex(v => v.id === buyer.id);\n        if (target > -1) {\n          this.buyers.splice(target, 1);\n          this.dataSource = new MatTableDataSource<Buyer>(this.buyers);\n        }\n        this.onSuccess('删除供应商');\n      },\n      error => this.onFailure('删除供应商')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <mat-form-field appearance=\"standard\" class=\"field-search\">\n      <mat-label>搜索</mat-label>\n      <input matInput type=\"text\" [formControl]=\"searchKeyword\">\n    </mat-form-field>\n    <button mat-button class=\"call\" (click)=\"openCreateBuyerDialog()\" [disabled]=\"jwtTokenService.getRole()==='employee'\"> 添加新客户 </button>\n  </div>\n\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\"\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef>{{displayedColumns.get(col)}}</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>edit</mat-icon></button>\n            </div>\n            <span #spanHeader>\n            {{element[col]}}\n          </span>\n          </div>\n          <div *ngIf=\"element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col === 'edit'; else dataField\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit; onBuyerSubmit(element);\"><mat-icon>done</mat-icon></button>\n            </div>\n            <ng-template #dataField>\n              <mat-form-field>\n                <mat-label>{{displayedColumns.get(col)}}</mat-label>\n                <input [type]=\"'text'\" matInput [(ngModel)]=\"element[col]\">\n              </mat-form-field>\n            </ng-template>\n          </div>\n        </td>\n\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProperties;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Employee} from '../../shared/models/employee';\nimport {EmployeeService} from '../../shared/services/employee.service';\n\n@Component({\n  selector: 'app-create-employee-dialog',\n  templateUrl: './create-employee-dialog.component.html',\n  styleUrls: ['./create-employee-dialog.component.scss']\n})\nexport class CreateEmployeeDialogComponent implements OnInit {\n\n  employeeGroup!: FormGroup;\n  newEmployee!: Employee\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateEmployeeDialogComponent>,\n    private formBuilder: FormBuilder,\n    private employeeService: EmployeeService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.employeeGroup = this.formBuilder.group({\n      name: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      birth: new FormControl(''),\n      phone: new FormControl('', Validators.required),\n      ssn: new FormControl(''),\n      department: new FormControl(''),\n      notice: new FormControl('')\n    })\n  }\n\n  onSubmit(form: FormGroup): void {\n    const newEmployee = {...form.value, status: 'working', onboard: new Date()};\n    console.log(newEmployee);\n    this.employeeService.postEmployee(newEmployee).subscribe(\n      res => {\n        this.dialogRef.close(res)\n      },\n      error => {\n        console.log(error);\n        this.onFailure();\n      }\n    )\n  }\n\n  onFailure(): void {\n    this._snackBar.open(`创建失败`, \"关闭\");\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加新员工</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"employeeGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>姓名</mat-label>\n      <input matInput type=\"text\" formControlName=\"name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>性别</mat-label>\n      <mat-select formControlName=\"gender\">\n        <mat-option value=\"女\">女</mat-option>\n        <mat-option value=\"男\">男</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>出生年月</mat-label>\n      <input matInput [matDatepicker]=\"picker1\" formControlName=\"birth\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>联系方式</mat-label>\n      <input matInput type=\"text\" formControlName=\"phone\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>身份证号</mat-label>\n      <input matInput  type=\"text\" formControlName=\"ssn\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>部门</mat-label>\n      <input matInput  type=\"text\" formControlName=\"department\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n  </form>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onSubmit(employeeGroup)\" cdkFocusInitial>确认提交</button>\n  <button mat-stroked-button color=\"warn\" (click)=\"onNoClick()\">取消</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Delivery} from '../models/delivery';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeliveryService {\n  target_controller = `${environment.API_URL}/delivery`\n\n  constructor(private http: HttpClient) { }\n\n  getDeliveries(): Observable<Delivery[]> {\n    return this.http.get<Delivery[]>(`${this.target_controller}`)\n  }\n\n  getDeliveriesByBuyerId(buyer_id: number): Observable<Delivery[]> {\n    return this.http.get<Delivery[]>(`${this.target_controller}/buyer_id/${buyer_id}`)\n  }\n\n  getDeliveriesByProductId(product_id: number): Observable<Delivery[]> {\n    return this.http.get<Delivery[]>(`${this.target_controller}/product_id/${product_id}`)\n  }\n\n  postDelivery(delivery: Delivery): Observable<Delivery> {\n    return this.http.post<Delivery>(`${this.target_controller}`, delivery);\n  }\n\n  putDelivery(delivery: Delivery): Observable<Delivery> {\n    return this.http.put<Delivery>(`${this.target_controller}`, delivery);\n  }\n\n  deliverySearchFilter(deliveries: Delivery[], keyword: string): Delivery[] {\n    keyword = keyword.toUpperCase();\n    return deliveries.filter(\n        d => d.buyer?.name.toUpperCase().includes(keyword) || d.buyer?.company.toUpperCase().includes(keyword) || d.product_name?.toUpperCase().includes(keyword))\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Compo} from '../../shared/models/compo';\nimport {Observable} from 'rxjs';\nimport {Vendor} from '../../shared/models/vendor';\nimport {CompoService} from '../../shared/services/compo.service';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {VendorService} from '../../shared/services/vendor.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nclass DialogData {\n  compo!: Compo\n}\n\n@Component({\n  selector: 'app-edit-component-dialog',\n  templateUrl: './edit-component-dialog.component.html',\n  styleUrls: ['./edit-component-dialog.component.scss']\n})\nexport class EditComponentDialogComponent implements OnInit {\n  compoGroup!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditComponentDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    private compoService: CompoService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.compoGroup = this.formBuilder.group({\n      id: new FormControl(''),\n      name: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      material: new FormControl(''),\n      description: new FormControl(''),\n      expiration: new FormControl(''),\n      unit_weight: new FormControl(''),\n      warn_stock: new FormControl(1000, Validators.min(0)),\n      notice: new FormControl(''),\n      picture: new FormControl('')\n    });\n    this.compoGroup.setValue(this.data.compo);\n  }\n\n  onCompoInfoConfirm(form: FormGroup): void {\n    const updated_compo: Compo = {...form.value};\n    updated_compo.id = this.data.compo.id;\n    console.log(updated_compo);\n    this.compoService.putCompo(updated_compo).subscribe(\n      res => {\n        this.dialogRef.close(res);\n      },\n      error => {\n        this.onFailure('配件信息修改');\n        console.log(error);\n      }\n    )\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">编辑配件</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"compoGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>配件编码</mat-label>\n      <input matInput type=\"text\" formControlName=\"id\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>配件名称</mat-label>\n      <input matInput formControlName=\"name\">\n      <mat-hint align=\"end\">可以与其他产品重复</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>分类</mat-label>\n      <input matInput formControlName=\"category\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>材质</mat-label>\n      <input matInput type=\"text\" formControlName=\"material\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>配件描述</mat-label>\n      <!--          <input matInput formControlName=\"description\">-->\n      <textarea matInput formControlName=\"description\"></textarea>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>保存期限</mat-label>\n      <input matInput type=\"text\" formControlName=\"expiration\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>单位重量</mat-label>\n      <input matInput type=\"text\" formControlName=\"unit_weight\">\n      <mat-hint align=\"end\">默认值为零</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>警示库存</mat-label>\n      <input matInput type=\"number\" formControlName=\"warn_stock\">\n      <mat-hint align=\"end\">默认值为1000</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <!--          <input matInput formControlName=\"notice\">-->\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n  </form>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!compoGroup.valid\" (click)=\"onCompoInfoConfirm(compoGroup)\">确认提交</button>\n  <button mat-button color=\"warn\" (click)=\"dialogRef.close()\">取消</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Work} from '../models/work';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\nimport {Salary} from '../models/salary';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalaryService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getSalaries(): Observable<Salary[]> {\n    return this.http.get<Salary[]>(`${environment.API_URL}/salary`)\n  }\n\n  getCheckedSalaries():  Observable<Salary[]> {\n    return this.http.get<Salary[]>(`${environment.API_URL}/salary/checked`)\n  }\n\n  getUncheckedSalaries():  Observable<Salary[]> {\n    return this.http.get<Salary[]>(`${environment.API_URL}/salary/unchecked`)\n  }\n\n  getSalaryNameById(id: number): Observable<any> {\n    return this.http.get<any>(`${environment.API_URL}/salary/only_name/${id}`)\n  }\n\n  getSalaryById(salary_id: number): Observable<Salary> {\n    return this.http.get<Salary>(`${environment.API_URL}/salary/${salary_id}`)\n  }\n\n  getSalariesByEmployeeId(employee_id: number): Observable<Salary[]> {\n    return this.http.get<Salary[]>(`${environment.API_URL}/salary/employee_id/${employee_id}`)\n  }\n\n  getSalariesInDateRange(after: Date, before: Date): Observable<Salary[]> {\n    return this.http.get<Salary[]>(`${environment.API_URL}/salary/salary_date/${after}/${before}`)\n  }\n\n  getSalariesByEmployeeIdAndSalaryDate(employee_id: number, after: Date, before: Date): Observable<Salary[]> {\n    return this.http.get<Salary[]>(`${environment.API_URL}/salary/employee_id_and_salary_date/${employee_id}/${after}/${before}`)\n  }\n\n  postSalary(salary: Salary): Observable<Salary> {\n    return this.http.post<Salary>(`${environment.API_URL}/salary`, salary)\n  }\n\n  putSalary(salary: Salary): Observable<Salary> {\n    return this.http.put<Salary>(`${environment.API_URL}/salary`, salary)\n  }\n\n  deleteSalary(salary_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/salary/${salary_id}`)\n  }\n\n  calculateTotalSalary(salary: Salary): number {\n    return Number(salary.hour_salary) + Number(salary.unit_salary) + Number(salary.bonus) - Number(salary.deduction)\n  }\n\n  salarySearchFilter(salaries: Salary[], changes: any): Salary[] {\n    changes.keyword = changes.keyword.toUpperCase();\n    return salaries\n      .filter(s => s.employee_name.toUpperCase().includes(changes.keyword))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport jwt_decode from 'jwt-decode';\nimport {JWTTokenService} from './jwt-token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user: any = null;\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  login(user: any): Observable<{ access_token: string, token_type: string }> {\n    const userFormData = new HttpParams()\n      .append('username', user.username)\n      .append('password', user.password);\n    return this.http.post<{ access_token: string, token_type: string }>(\n      `${environment.API_URL}/token`, userFormData,\n      {withCredentials: true});\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.user = null;\n  }\n\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Delivery} from '../shared/models/delivery';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {DeliveryService} from '../shared/services/delivery.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {environment} from '../../environments/environment';\nimport {CreateDeliveryDialogComponent} from './create-delivery-dialog/create-delivery-dialog.component';\nimport {ProductService} from '../shared/services/product.service';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.scss']\n})\nexport class DeliveryComponent implements OnInit {\n  displayedProperties: string[] = [\n    'product_name', 'buyer_company', 'amount',\n    'order_id', 'deliver_date',\n    'unit_price', 'total_price', 'notice',\n    'edit'\n  ];\n  displayedColumns = new Map([['product_name', '产品名称'], ['buyer_company','客户公司'], ['amount', '交付数量'],\n    ['order_id', '客户订单号'], ['deliver_date', '交付日期'], ['unit_price', '单价'], ['total_price', '总价'], ['notice', '备注'], ['edit', '编辑']]);\n  editableProperties: string[] = [\n    'amount', 'order_id', 'deliver_date', 'unit_price', 'notice'\n  ];\n\n  searchKeyword = new FormControl('')\n  deliveries: Delivery[] = [];\n  dataSource: any;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    public jwtTokenService: JWTTokenService,\n    private deliveryService: DeliveryService,\n    private productService: ProductService,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.deliveryService.getDeliveries().subscribe(\n      res => {\n        this.deliveries = res;\n        this.deliveries.forEach(d => {\n          this.productService.getProductNameById(d.product_id).subscribe(\n            res => d.product_name = res.name);\n          d.buyer_company = d.buyer?.company;\n        });\n        this.dataSource = new MatTableDataSource<Delivery>(this.deliveries);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    );\n    this.searchKeyword.valueChanges.subscribe(\n      kw => {\n        this.dataSource = new MatTableDataSource<Delivery>(this.deliverySearchFilter(kw));\n        this.dataSource.paginator = this.paginator;\n      })\n  }\n\n  openCreateDeliveryDialog(): void {\n    const dialogRef = this.dialog.open(CreateDeliveryDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n    });\n\n    dialogRef.afterClosed().subscribe(new_delivery => {\n      if (new_delivery) {\n        this.onSuccess('创建新交付记录');\n        this.deliveries.push(new_delivery);\n        this.dataSource = new MatTableDataSource<Delivery>(this.deliveries);\n      }\n    });\n  }\n\n  deliverySearchFilter(keyword: string): Delivery[] {\n    return keyword\n      ? this.deliveries.filter(\n        d => d.buyer?.name.includes(keyword) || d.buyer?.company.includes(keyword) || d.product_name?.includes(keyword))\n      : this.deliveries\n  }\n\n  onDeliverySubmit(delivery: Delivery): void {\n    this.deliveryService.putDelivery(delivery).subscribe(\n      res => this.onSuccess('修改交付记录'),\n      error => this.onFailure('修改交付记录')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <mat-form-field appearance=\"standard\" class=\"field-search\">\n      <mat-label>搜索</mat-label>\n      <input matInput type=\"text\" [formControl]=\"searchKeyword\">\n    </mat-form-field>\n    <button mat-stroked-button class=\"call\" (click)=\"openCreateDeliveryDialog()\" disabled>新增交付记录</button>\n  </div>\n\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\"\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef>{{displayedColumns.get(col)}}</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit || !editableProperties.includes(col)\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>edit</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              {{element[col]}}\n            </span>\n          </div>\n          <div *ngIf=\"element.isEdit && editableProperties.includes(col)\">\n            <div class=\"btn-edit\" *ngIf=\"col === 'edit'; else dataField\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit; onDeliverySubmit(element);\"><mat-icon>check</mat-icon></button>\n            </div>\n            <ng-template #dataField>\n              <mat-form-field>\n                <mat-label>{{displayedColumns.get(col)}}</mat-label>\n                <input matInput [(ngModel)]=\"element[col]\">\n              </mat-form-field>\n            </ng-template>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProperties;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Work} from '../../shared/models/work';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {Batch} from '../../shared/models/batch';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {WorkService} from '../../shared/services/work.service';\nimport {WorkSpecificationService} from '../../shared/services/work-specification.service';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {map} from 'rxjs/operators';\nimport {WorkSpecification} from '../../shared/models/work-specification';\nimport {Delivery} from '../../shared/models/delivery';\nimport {BatchService} from '../../shared/services/batch.service';\nimport {Product} from '../../shared/models/product';\nimport {ProductService} from '../../shared/services/product.service';\nimport {Buyer} from '../../shared/models/buyer';\nimport {DeliveryService} from '../../shared/services/delivery.service';\nimport {BuyerService} from '../../shared/services/buyer.service';\n\nclass DialogData {\n  product!: Product\n}\n\n@Component({\n  selector: 'app-create-delivery-dialog',\n  templateUrl: './create-delivery-dialog.component.html',\n  styleUrls: ['./create-delivery-dialog.component.scss']\n})\nexport class CreateDeliveryDialogComponent implements OnInit {\n  buyers: Buyer[] = [];\n  buyerOptions!: Observable<Buyer[]>;\n\n  products: Product[] = [];\n  productOptions!: Observable<Product[]>;\n\n  deliveryGroup = new FormGroup({});\n  total_price =  new FormControl(0, Validators.required);\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateDeliveryDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    private deliveryService: DeliveryService,\n    private buyerService: BuyerService,\n    public productService: ProductService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.deliveryGroup = this.formBuilder.group({\n      product_id: new FormControl(this.data ? this.data.product : null, Validators.required),\n      amount: new FormControl(0,\n        [Validators.required, Validators.min(0), Validators.max(this.deliveryGroup.controls['product_id'].value.inventory || 0)]),\n      order_id: new FormControl(''),\n      buyer_id: new FormControl('', Validators.required),\n      deliver_date: new FormControl(new Date(), Validators.required),\n      unit_price: new FormControl(0, [Validators.required, Validators.min(0)]),\n      notice: new FormControl('')\n    });\n    if (!this.data.product) {\n      this.productService.getProducts().subscribe(\n        res => this.products = res\n      )\n    };\n    this.buyerService.getBuyers().subscribe(\n      res => this.buyers = res,\n      error => console.log(error)\n    );\n    this.deliveryGroup.controls['product_id'].setValue(this.data.product.id);\n    // this.deliveryGroup.controls['product_id'].disable();\n    this.productOptions = this.deliveryGroup.controls['product_id'].valueChanges.pipe(\n      map(input => this.productService.productAutocompleteFilter(input, this.products)));\n    this.buyerOptions = this.deliveryGroup.controls['buyer_id'].valueChanges.pipe(\n      map(input => this.buyerAutocompleteFilter(input)));\n    this.deliveryGroup.valueChanges.subscribe(\n      changes => this.total_price.setValue(changes['unit_price'] * changes['amount'])\n    );\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  buyerAutocompleteFilter(value: string): Buyer[] {\n    return this.buyers.filter(b => b.company.includes(value) || b.name.includes(value));\n  }\n\n  buyerDisplayFn(b: Buyer): string {\n    return b && `${b.company} | ${b.name}`;\n  }\n\n  onDeliveryConfirm(form: FormGroup): void {\n    const new_delivery = {...form.value, buyer_id: form.value.buyer_id.id, total_price: this.total_price.value};\n    new_delivery.product_id = new_delivery.product_id.id;\n    this.deliveryService.postDelivery(new_delivery).subscribe(\n      res => {\n        this.productService.adjustProductInventory(res.product_id, (0-res.amount)).subscribe(\n          ret_prod => this.dialogRef.close(res),\n          ret_error => this.onFailure()\n        );\n      },\n      error => this.onFailure()\n    )\n  }\n\n  onSuccess(): void {\n    this._snackBar.open(`创建成功`, \"关闭\");\n  }\n\n  onFailure(): void {\n    this._snackBar.open(`创建失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">发起交付</p>\n  <p class=\"mat-h3 info\" *ngIf=\"data.product\">{{data.product.name}}</p>\n\n</div>\n\n<div mat-dialog-content class=\"fullfill\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\" >\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around start\" [formGroup]=\"deliveryGroup\">\n    <mat-form-field appearance=\"outline\" *ngIf=\"!data.product\">\n      <mat-label>客户</mat-label>\n      <input matInput formControlName=\"product_id\" [matAutocomplete]=\"prodAuto\">\n      <mat-autocomplete #prodAuto=\"matAutocomplete\" [displayWith]=\"productService.productDisplayFn\">\n        <mat-option *ngFor=\"let prod of this.productOptions | async\" [value]=\"prod\">\n          {{prod.name}} | {{prod.id}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>客户</mat-label>\n      <input matInput formControlName=\"buyer_id\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"buyerDisplayFn\">\n        <mat-option *ngFor=\"let buyer of this.buyerOptions | async\" [value]=\"buyer\">\n          {{buyer.company}} | {{buyer.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>交付日期</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"deliver_date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\">\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>交付数量</mat-label>\n      <input type=\"number\" matInput formControlName=\"amount\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>客户订单号</mat-label>\n      <input type=\"text\" matInput formControlName=\"order_id\">\n      <mat-hint>如无相关订单，请留空</mat-hint>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>交付单价</mat-label>\n      <input type=\"number\" matInput formControlName=\"unit_price\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>本次交付总价</mat-label>\n      <input type=\"number\" matInput formControlName=\"total_price\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n\n  </form>\n\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onDeliveryConfirm(deliveryGroup)\">确认提交</button>\n  <button mat-button (click)=\"onNoClick()\">结束</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-buyer-dialog',\n  templateUrl: './create-buyer-dialog.component.html',\n  styleUrls: ['./create-buyer-dialog.component.scss']\n})\nexport class CreateBuyerDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>create-buyer-dialog works!</p>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {Product} from '../shared/models/product';\nimport {Vendor} from '../shared/models/vendor';\nimport {VendorService} from '../shared/services/vendor.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateVendorDialogComponent} from './create-vendor-dialog/create-vendor-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n@Component({\n  selector: 'app-vendor-list',\n  templateUrl: './vendor-list.component.html',\n  styleUrls: ['./vendor-list.component.scss']\n})\nexport class VendorListComponent implements OnInit {\n  displayedProperties: string[] = [\n    'name', 'company', 'payment_period',\n    'contact', 'address', 'notice', 'edit'\n  ];\n\n  displayedColumns = new Map([['name','联络人姓名'], ['address', '地址'],\n    ['company', '公司'], ['payment_period', '账期'], ['contact', '联系方式'], ['notice', '备注'],\n    ['edit', '操作']]);\n\n  searchKeyword = new FormControl('')\n  vendors: Vendor[] = [];\n  dataSource: any;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    public jwtTokenService: JWTTokenService,\n    private vendorService: VendorService,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.vendorService.getVendors().subscribe(\n      res => {\n        this.vendors = res;\n        this.dataSource = new MatTableDataSource<Vendor>(this.vendors);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    );\n    this.searchKeyword.valueChanges.subscribe(\n      kw => {\n        this.dataSource = new MatTableDataSource<Vendor>(this.vendorService.vendorSearchFilter(this.vendors, kw));\n        this.dataSource.paginator = this.paginator;\n      })\n  }\n\n  openCreateVendorDialog(): void {\n    const dialogRef = this.dialog.open(CreateVendorDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH\n    });\n\n    dialogRef.afterClosed().subscribe(new_vendor => {\n      if (new_vendor) {\n        this.vendors.push(new_vendor);\n        this.dataSource = new MatTableDataSource<Vendor>(this.vendors);\n      }\n    });\n  }\n\n  onVendorSubmit(vendor: Vendor): void {\n    this.vendorService.putVendor(vendor).subscribe(\n      res => this.onSuccess('修改供应商'),\n      error => this.onFailure('修改供应商')\n    )\n  }\n\n  onVendorDelete(vendor: Vendor): void {\n    this.vendorService.deleteVendor(Number(vendor.id)).subscribe(\n      res => {\n        const target = this.vendors.findIndex(v => v.id === vendor.id);\n        if (target > -1) {\n          this.vendors.splice(target, 1);\n          this.dataSource = new MatTableDataSource<Vendor>(this.vendors);\n        }\n        this.onSuccess('删除供应商');\n      },\n      error => this.onFailure('删除供应商')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <mat-form-field appearance=\"standard\" class=\"field-search\">\n      <mat-label>搜索</mat-label>\n      <input matInput type=\"text\" [formControl]=\"searchKeyword\">\n    </mat-form-field>\n    <button mat-button class=\"call\" (click)=\"openCreateVendorDialog()\" [disabled]=\"jwtTokenService.getRole()==='employee'\"> 添加新供应商 </button>\n  </div>\n\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\"\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef>{{displayedColumns.get(col)}}</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>edit</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              {{element[col]}}\n            </span>\n          </div>\n          <div *ngIf=\"element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col === 'edit'; else dataField\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit; onVendorSubmit(element);\"><mat-icon>done</mat-icon></button>\n            </div>\n            <ng-template #dataField>\n              <mat-form-field>\n                <mat-label>{{col}}</mat-label>\n                <input [type]=\"'text'\" matInput [(ngModel)]=\"element[col]\">\n              </mat-form-field>\n            </ng-template>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProperties;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    FlexLayoutModule,\n    MatGridListModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatButtonToggleModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    FlexLayoutModule,\n    MatGridListModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatButtonToggleModule\n  ]\n})\n\nexport class CustomStyleModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Vendor} from '../models/vendor';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VendorService {\n\n  constructor(private http: HttpClient) { }\n\n  getVendors(): Observable<Vendor[]> {\n    return this.http.get<Vendor[]>(`${environment.API_URL}/vendors`)\n  }\n\n  getVendorById(vendor_id: number): Observable<Vendor> {\n    return this.http.get<Vendor>(`${environment.API_URL}/vendors/${vendor_id}`)\n  }\n\n  postVendor(vendor: Vendor): Observable<Vendor> {\n    return this.http.post<Vendor>(`${environment.API_URL}/vendors`, vendor)\n  }\n\n  putVendor(vendor: Vendor): Observable<Vendor> {\n    return this.http.put<Vendor>(`${environment.API_URL}/vendors/${String(vendor.id)}`, vendor)\n  }\n\n  deleteVendor(vendor_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/vendors/${String(vendor_id)}`)\n  }\n\n  vendorSearchFilter(vendors: Vendor[], keyword: string): Vendor[] {\n    keyword = keyword.toUpperCase();\n    return vendors.filter(\n        vendor => vendor.company?.toUpperCase().includes(keyword)\n          || vendor.name?.toUpperCase().includes(keyword)\n          || vendor.address?.toUpperCase().includes(keyword)\n          || vendor.notice?.toUpperCase().includes(keyword));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Employee} from '../models/employee';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  public employees: Employee[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${environment.API_URL}/employee`)\n  }\n\n  getEmployeesByStatus(status: string): Observable<Employee[]> {\n  return this.http.get<Employee[]>(`${environment.API_URL}/employee/status/${status}`)\n}\n\n  getEmployee(id: number): Observable<Employee> {\n    return this.http.get<Employee>(`${environment.API_URL}/employee/${String(id)}`)\n  }\n\n  getEmployeesByName(name: string): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${environment.API_URL}/employee/name/${name}`)\n  }\n\n  postEmployee(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(`${environment.API_URL}/employee`, employee)\n  }\n\n  putEmployee(employee: Employee): Observable<Employee> {\n    return this.http.put<Employee>(`${environment.API_URL}/employee`, employee)\n  }\n\n  employeeDisplayFn(emp: Employee): string {\n    return emp && emp.name ? `${emp.name} | ${emp.id}` : '';\n  }\n\n  employeeAutocompleteFilter(value: string, employees: Employee[] = this.employees): Employee[] {\n    return employees.filter(e => e.name.includes(value) || String(e.id) === value);\n  }\n\n  updateLastPayCheck(employee_id: number, last_pay_check: Date) {\n    return this.http.put<Employee>(`${environment.API_URL}/employee/last_check_date`, {employee_id: employee_id, last_pay_check: last_pay_check})\n  }\n\n  employeeSearchFilter(employees: Employee[], keyword: string): Employee[] {\n    keyword = keyword.toUpperCase();\n    return this.employees.filter(\n        employee => employee.name.toUpperCase().includes(keyword) || (employee.notice && employee.notice.toUpperCase().includes(keyword)));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Process} from '../models/process';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessService {\n\n  constructor(private http: HttpClient) { }\n\n  getProcessesByProductId(product_id: string): Observable<Process[]> {\n    return this.http.get<Process[]>(`${environment.API_URL}/process/product_id/${product_id}`)\n  }\n\n  getProcessById(id: string): Observable<Process> {\n    return this.http.get<Process>(`${environment.API_URL}/process/${id}`)\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'yfmms';\n}\n","<app-header></app-header>\n<mat-divider></mat-divider>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {WarehouseRecord} from '../models/warehouse-record';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseRecordService {\n  target_url = `${environment.API_URL}/warehouse_record`\n\n  constructor(private http: HttpClient) { }\n\n  getWarehouseRecordsByBatchProcessId(bp_id: number): Observable<WarehouseRecord[]> {\n    return this.http.get<WarehouseRecord[]>(`${this.target_url}/batch_process_id/${bp_id}`)\n  }\n\n  postWarehouseRecord(wr: WarehouseRecord): Observable<WarehouseRecord> {\n    return this.http.post<WarehouseRecord>(`${this.target_url}`, wr)\n  }\n\n  putWarehouseRecord(wr: WarehouseRecord): Observable<WarehouseRecord> {\n    return this.http.put<WarehouseRecord>(`${this.target_url}`, wr)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Batch} from '../../shared/models/batch';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Employee} from '../../shared/models/employee';\nimport {BatchService} from '../../shared/services/batch.service';\nimport {EmployeeService} from '../../shared/services/employee.service';\nimport {ProductService} from '../../shared/services/product.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {WorkService} from '../../shared/services/work.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {BatchProcessService} from '../../shared/services/batch-process.service';\nimport {WarehouseRecordService} from '../../shared/services/warehouse-record.service';\nimport {CompoService} from '../../shared/services/compo.service';\nimport {UtilService} from '../../shared/util.service';\nimport {MatListOption} from '@angular/material/list';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent implements OnInit {\n\n  displayedBatches: Batch[] = []\n  selectedBatch!: Batch;\n  selectedBatchProcess!: BatchProcess;\n\n  step = 1;\n\n  specChoiceGroup!: FormGroup;\n\n  constructor(\n    private batchService: BatchService,\n    private formBuilder: FormBuilder,\n    private employeeService: EmployeeService,\n    private productService: ProductService,\n  ) { }\n\n\n  ngOnInit(): void {\n    this.batchService.getCollectedBatches().subscribe(\n      res => {\n        this.displayedBatches = res;\n        this.displayedBatches.forEach(b => {\n          this.productService.getProductNameById(b.product_id).subscribe(\n            res => b.product_name = res.name,\n            error => console.log(error)\n          );\n        })\n      },\n      error => console.log(error)\n    );\n    this.specChoiceGroup = this.formBuilder.group({});\n  }\n\n  onBatchChange(options: MatListOption[]) {\n    // map these MatListOptions to their values\n    this.selectedBatch = options[0].value;\n    this.step = this.selectedBatch.batch_process.find(bp => bp.status === 'ongoing')?.process?.process_order || 1;\n    this.specChoiceGroup = new FormGroup({});\n  }\n\n  updateSpecChoiceGroup(bp: BatchProcess): void {\n    // this.selectedBatchProcess = bp;\n    this.specChoiceGroup = this.formBuilder.group({});\n    bp.process?.process_component.forEach(\n      pc => {\n        this.specChoiceGroup.addControl(pc.component_id, this.formBuilder.control('', Validators.required));\n      }\n    );\n    if (bp.warehouse_record && bp.warehouse_record.length > 0) {\n      bp.warehouse_record.forEach(wr => {\n        const compo_id = wr.component_id;\n        const spec_id = wr.specification_id;\n        const selectedSpec = bp.process?.process_component.find(pc => pc.component_id === compo_id)?.component?.specification?.find(spec => spec.id === spec_id)\n        this.specChoiceGroup.controls[compo_id].setValue(selectedSpec);\n      });\n      this.specChoiceGroup.disable();\n    } else {\n      this.specChoiceGroup.enable();\n    }\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  sortedBatchProcesses(bp_array: BatchProcess[]): BatchProcess[] {\n    return bp_array.sort((a, b) => (Number(a.process?.process_order) - Number(b.process?.process_order)))\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"fullfill\">\n    <mat-card fxFlex=\"40\">\n      <mat-card-header>\n        <mat-card-title> 生产批次列表 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-selection-list #unfinished [multiple]=\"false\" (selectionChange)=\"onBatchChange(unfinished.selectedOptions.selected)\">\n          <mat-list-option *ngFor=\"let batch of displayedBatches\" [value]=\"batch\">\n            {{batch.product_name}} | {{batch.plan_amount}}件 | 排产：{{batch.start | date:\"YYYY/MM/dd\" }}\n          </mat-list-option>\n        </mat-selection-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card *ngIf=\"selectedBatch && selectedBatch.id\" fxFlex=\"60\">\n      <mat-card-header>\n        <p class=\"mat-title highlight\">批次：{{selectedBatch.id}}</p>\n      </mat-card-header>\n      <mat-card-content>\n        <button mat-button class=\"view\" [routerLink]=\"['/batch-summary/', selectedBatch.id]\">查看批次小结</button>\n        <mat-accordion class=\"example-headers-align\">\n          <mat-expansion-panel\n            [expanded]=\"step === (bp.process?.process_order || 1)\"\n            (opened)=\"setStep(bp.process?.process_order || 1);updateSpecChoiceGroup(bp)\"\n            hideToggle\n            *ngFor=\"let bp of sortedBatchProcesses(selectedBatch.batch_process)\">\n            <mat-expansion-panel-header *ngIf=\"bp.process\">\n              <mat-panel-title>\n                工艺{{bp.process.process_order}} - {{bp.process.process_name}}\n              </mat-panel-title>\n              <mat-panel-description>\n                状态：{{bp.status}}\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"meta-info\" *ngIf=\"bp.process && bp.process.process_order === step\">\n              <p class=\"info\"> 预计数量：{{bp.start_amount || '尚未开始'}} | 完成数量：{{bp.end_amount || '尚未完成'}}</p>\n              <p class=\"subtitle\"> 采用配件： </p>\n              <div class=\"greyborder distance\">\n                <p *ngIf=\"!bp.process.process_component || bp.process.process_component.length === 0\"> 无需配件 </p>\n                <div *ngFor=\"let pc of bp.process.process_component\">\n                  <form [formGroup]=\"specChoiceGroup\"\n                        class=\"flex-container\">\n                    <div *ngIf=\"pc.component\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"fullfill\">\n                      <p> {{pc.component.name}} * {{pc.consumption}} </p>\n                      <mat-form-field>\n                        <mat-select [formControlName]=\"pc.component.id || ''\">\n                          <mat-option *ngFor=\"let spec of pc.component.specification\" [value]=\"spec\">\n                            {{spec.id}} | {{spec.vendor?.company}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <div class=\"work-info\">\n              <p class=\"subtitle\"> 领料记录： </p>\n              <div class=\"greyborder distance work\" *ngIf=\"!bp.work || bp.work.length === 0\"> <p>无领料记录</p> </div>\n              <div *ngIf=\"!!bp.work\">\n                <div *ngFor=\"let work of bp.work\" class=\"greyborder distance work\">\n                  <p> {{work.employee_name}} ({{work.employee_id}}) | {{work.work_date | date:\"YYYY/MM/dd\"}}</p>\n                  <p *ngFor=\"let ws of work.work_specification\">\n                    {{ws.specification_id}} 实领 {{ws.actual_amount}} (应领：{{ws.plan_amount}})\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <mat-action-row *ngIf=\"selectedBatch.batch_process\">\n              <button mat-button color=\"warn\" (click)=\"prevStep()\" *ngIf=\"step > 1\">前一步</button>\n              <button mat-button color=\"primary\" (click)=\"nextStep()\" *ngIf=\"step <= selectedBatch.batch_process.length\">后一步</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n        </mat-accordion>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n</div>\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {Employee} from '../../shared/models/employee';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Salary} from '../../shared/models/salary';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {CreateWorkDialogComponent} from '../../manufacture/create-work-dialog/create-work-dialog.component';\nimport {EmployeeService} from '../../shared/services/employee.service';\nimport {SalaryService} from '../../shared/services/salary.service';\nimport {WorkService} from '../../shared/services/work.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {map} from 'rxjs/operators';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Compo} from '../../shared/models/compo';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\n\nclass DialogData {\n  employees!: Employee[]\n}\n\n@Component({\n  selector: 'app-create-salary-for-all',\n  templateUrl: './create-salary-for-all.component.html',\n  styleUrls: ['./create-salary-for-all.component.scss']\n})\nexport class CreateSalaryForAllComponent implements OnInit {\n  employees: Employee[] = [];\n  coveredEmployees: Employee[] = [];\n  employeeOptions!: Observable<Employee[]>;\n  employeeCtrl = new FormControl(null);\n\n  salaryGroup!: FormGroup;\n  total!: number;\n\n  previewSalary!: Salary;\n\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @ViewChild('empInput') empInput!: ElementRef<HTMLInputElement>;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateSalaryForAllComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public employeeService: EmployeeService,\n    private salaryService: SalaryService,\n    private workService: WorkService,\n    private formBuilder: FormBuilder,\n    private _snackBar: MatSnackBar\n  ) { }\n\n\n  ngOnInit(): void {\n    this.employees = this.data.employees;\n    this.salaryGroup = this.formBuilder.group({\n      employee: new FormControl(null),\n      start_date: new FormControl(null),\n      end_date: new FormControl(null),\n      deduction: new FormControl(0, Validators.min(0)),\n      bonus: new FormControl(0, Validators.min(0))\n    });\n    this.employeeOptions = this.salaryGroup.controls['employee'].valueChanges.pipe(\n      map(name => this.employeeService.employeeAutocompleteFilter(name, this.employees)));\n    // this.calculationGroup = this.formBuilder.group({\n    //   deduction: new FormControl(0, Validators.min(0)),\n    //   bonus: new FormControl(0, Validators.min(0))\n    // });\n  }\n\n  onPreviewConfirm() {\n    this.previewSalary = {\n      bonus: 0, deduction: 0, hour_salary: 0, unit_salary: 0, status: 'unpaid',\n      employee_name: this.salaryGroup.controls['employee'].value.name,\n      employee_id: this.salaryGroup.controls['employee'].value.id,\n      start_date: this.salaryGroup.controls['start_date'].value,\n      end_date: this.salaryGroup.controls['end_date'].value\n    }\n    this.workService.getUncheckedWorksByEmployeeIdAndWorkDate(\n      this.salaryGroup.controls['employee'].value.id,\n      this.salaryGroup.controls['start_date'].value,\n      this.salaryGroup.controls['end_date'].value).subscribe(\n      ret_works => {\n        this.previewSalary.work = this.workService.sortWorkByDate(ret_works);\n        this.previewSalary.hour_salary = Number(this.previewSalary.work?.reduce(\n          (prev, curr) => prev + (curr.hour_pay * curr.complete_hour), 0));\n        this.previewSalary.unit_salary = Number(this.previewSalary.work?.reduce(\n          (prev, curr) => prev + (curr.unit_pay * curr.complete_unit), 0));\n        this.total = this.previewSalary.hour_salary + this.previewSalary.unit_salary;\n      }\n    );\n    this.salaryGroup.valueChanges.subscribe(changes => {\n      this.total = (this.previewSalary.hour_salary + this.previewSalary.unit_salary + changes.bonus - changes.deduction)\n    })\n  }\n\n  onSalaryConfirm() {\n    const hour_pay_subtotal = this.previewSalary.work?.reduce((prev, curr) => prev + (curr.hour_pay * curr.complete_hour), 0);\n    const unit_pay_subtotal = this.previewSalary.work?.reduce((prev, curr) => prev + (curr.unit_pay * curr.complete_unit), 0);\n    const new_salary: Salary = {\n      ...this.previewSalary,\n      hour_salary: Number(hour_pay_subtotal),\n      unit_salary: Number(unit_pay_subtotal)};\n    console.log(new_salary);\n    this.salaryService.postSalary(new_salary).subscribe(\n      ret_salary => {\n        new_salary.work?.forEach(work => {\n          if (work.complete_unit || work.complete_hour) {\n            work.check = true;\n            work.salary_id = ret_salary.id;\n            this.workService.putWork(work).subscribe();\n          }\n        });\n        this.dialogRef.close(ret_salary);\n      },\n      error => {\n        console.log(error);\n        this._snackBar.open(`薪水结算失败`, \"关闭\");\n      }\n    )\n  }\n\n  updateSalaryData() {\n    this.previewSalary.hour_salary = Number(this.previewSalary.work?.reduce(\n      (prev, curr) => prev + (curr.hour_pay * curr.complete_hour), 0));\n    this.previewSalary.unit_salary = Number(this.previewSalary.work?.reduce(\n      (prev, curr) => prev + (curr.unit_pay * curr.complete_unit), 0));\n    this.total = (this.previewSalary.hour_salary + this.previewSalary.unit_salary + Number(this.salaryGroup.controls['bonus'].value) - Number(this.salaryGroup.controls['deduction'].value))\n  }\n\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n    // Add our fruit\n    if (value) {\n      // @ts-ignore\n      this.coveredEmployees.push(value);\n    }\n\n    this.employeeCtrl.setValue(null);\n  }\n\n  remove(emp: Employee): void {\n    const index = this.coveredEmployees.indexOf(emp);\n    if (index >= 0) {\n      this.coveredEmployees.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.coveredEmployees.push(event.option.value);\n    this.empInput.nativeElement.value = '';\n    this.employeeCtrl.setValue(null);\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">全员结算</p>\n</div>\n\n\n<div mat-dialog-content class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n  <div class=\"ety-percent-fill\" fxFlex=\"50\">\n    <p class=\"subtitle mat-h3\">【结算范围】</p>\n    <form [formGroup]=\"salaryGroup\" fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>员工</mat-label>\n        <mat-chip-list #chipList aria-label=\"Fruit selection\">\n          <mat-chip\n            *ngFor=\"let emp of coveredEmployees\"\n            [selectable]=\"selectable\"\n            [removable]=\"removable\"\n            (removed)=\"remove(emp)\">\n            {{emp.name}} | {{emp.id}}\n            <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n          </mat-chip>\n          <input\n            matInput\n            placeholder=\"需要结算的员工...\"\n            #empInput\n            [formControl]=\"employeeCtrl\"\n            [matAutocomplete]=\"auto\"\n            [matChipInputFor]=\"chipList\"\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n            (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"employeeService.employeeDisplayFn\" (optionSelected)=\"selected($event)\">\n          <mat-option *ngFor=\"let emp of this.employeeOptions | async\" [value]=\"emp\">\n            {{emp.name}} | {{emp.id}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>结算日期范围</mat-label>\n        <mat-date-range-input [rangePicker]=\"picker\">\n          <input matStartDate formControlName=\"start_date\" placeholder=\"开始日期\">\n          <input matEndDate formControlName=\"end_date\" placeholder=\"结束日期\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n      </mat-form-field>\n    </form>\n    <div *ngIf=\"previewSalary\">\n      <p class=\"subtitle mat-h3\">【工资计算】</p>\n      <div class=\"salary-summary-container\">\n        <p class=\"subtitle\">\n          计件工资：{{previewSalary.unit_salary | currency : 'CNY'}} ｜ 计时工资：{{previewSalary.hour_salary | currency : 'CNY'}}\n        </p>\n        <form [formGroup]=\"salaryGroup\"  fxLayout=\"column\" fxLayoutAlign=\"space-between start\" >\n          <mat-form-field appearance=\"outline\">\n            <mat-label> 扣除额 </mat-label>\n            <input type=\"number\" matInput formControlName=\"deduction\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label> 增补额 </mat-label>\n            <input type=\"number\" matInput formControlName=\"bonus\">\n          </mat-form-field>\n        </form>\n\n        <p class=\"mat-h2 info\">总计：{{total | currency : 'CNY'}}</p>\n      </div>\n    </div>\n  </div>\n  <div fxFlex=\"50\">\n    <p class=\"subtitle mat-h3\"> 【工单信息】</p>\n    <div *ngIf=\"previewSalary\" >\n      <div *ngFor=\"let w of previewSalary.work\" class=\"salary-work-container\" fxLayout=\"column\">\n        <div mat-line> 产品：{{w.product_name}} | 工艺：{{w.process_name}} | {{w.work_date | date : 'yyyy/MM/dd'}}</div>\n        <div fxLayout=\"row\">\n          <div mat-line *ngIf=\"w.complete_unit\">\n            <mat-form-field>\n              <mat-label>单件酬劳</mat-label>\n              <input type=\"number\" matInput [(ngModel)]=\"w.unit_pay\">\n            </mat-form-field> * {{w.complete_unit}}件\n            <p class=\"record\">计件小计：{{((w.unit_pay || 0) * w.complete_unit) | currency : 'CNY'}}</p>\n          </div>\n          <div mat-line *ngIf=\"w.complete_hour\">\n            <mat-form-field>\n              <mat-label>小时酬劳</mat-label>\n              <input type=\"number\" matInput [(ngModel)]=\"w.hour_pay\">\n            </mat-form-field> * {{w.complete_hour}}小时\n            <p class=\"record\">计时小计：{{((w.hour_pay || 0) * w.complete_hour) | currency : 'CNY'}}</p>\n          </div>\n        </div>\n        <p class=\"highlight\" mat-line *ngIf=\"!w.complete_hour && !w.complete_unit\"> 该工单尚未完成，将不会被结算 </p>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button class=\"action\" (click)=\"onPreviewConfirm()\"> 预览工单 </button>\n  <button mat-raised-button color=\"accent\" (click)=\"updateSalaryData()\"> 确认工单信息 </button>\n  <button mat-raised-button color=\"primary\" (click)=\"onSalaryConfirm()\"> 确认提交新工资记录 </button>\n  <button mat-button (click)=\"this.dialogRef.close()\">结束</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Work} from '../models/work';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\nimport {BatchProcess} from '../models/batch-process';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getWorks(): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work`)\n  }\n\n  getCheckedWorks():  Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/checked`)\n  }\n\n  getUncheckedWorks():  Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/unchecked`)\n  }\n\n  getWorkById(work_id: number): Observable<Work> {\n    return this.http.get<Work>(`${environment.API_URL}/work/${work_id}`)\n  }\n\n  getWorksByEmployeeId(employee_id: number): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/employee_id/${employee_id}`)\n  }\n\n  getWorksInDateRange(after: Date, before: Date): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/work_date/${after.toISOString()}/${before.toISOString()}`)\n  }\n\n  getWorksByEmployeeIdAndWorkDate(employee_id: number, after: Date, before: Date): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/employee_id_and_work_date/${employee_id}/${after.toISOString()}/${before.toISOString()}`)\n  }\n\n  getUncheckedWorksByEmployeeIdAndWorkDate(employee_id: number, after: Date, before: Date): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/unchecked/employee_id_and_work_date/${employee_id}/${after.toISOString()}/${before.toISOString()}`)\n  }\n\n  postWork(work: Work): Observable<Work> {\n    return this.http.post<Work>(`${environment.API_URL}/work`, work)\n  }\n\n  putWork(work: Work): Observable<Work> {\n    return this.http.put<Work>(`${environment.API_URL}/work`, work)\n  }\n\n  deleteWork(work_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/work/${work_id}`)\n  }\n\n  sortWorkByDate(works: Work[]): Work[] {\n    return works.sort((a, b) => (Number(a.work_date) - Number(b.work_date)))\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Product} from '../../shared/models/product';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {JWTTokenService} from '../../shared/services/jwt-token.service';\nimport {ProductService} from '../../shared/services/product.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CreateDeliveryDialogComponent} from '../../delivery/create-delivery-dialog/create-delivery-dialog.component';\nimport {environment} from '../../../environments/environment';\nimport {EditProductDialogComponent} from '../edit-product-dialog/edit-product-dialog.component';\nimport {CopyProductDialogComponent} from '../copy-product-dialog/copy-product-dialog.component';\nimport {ConfirmDeprecateDialogComponent} from '../confirm-deprecate-dialog/confirm-deprecate-dialog.component';\n\n@Component({\n  selector: 'app-deprecated',\n  templateUrl: './deprecated.component.html',\n  styleUrls: ['./deprecated.component.scss']\n})\nexport class DeprecatedComponent implements OnInit {\n\n  displayedProperties: string[] = [\n    'id', 'name', 'category', 'description',\n    'inventory', 'custom', 'notice', 'deprecated_date',\n    'edit'\n  ];\n\n  displayedColumns = new Map([['id', '产品编码'], ['name','产品名称'],\n    ['category', '分类'], ['description', '描述'], ['inventory', '库存'], ['custom', '定制客户'], ['notice', '备注'],\n    ['edit', '操作']]);\n\n  products: Product[] = []\n  displayProducts: Product[] = []\n  dataSource: any\n\n  filterGroup!: FormGroup;\n  categories: string[] = [];\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    public jwtTokenService: JWTTokenService,\n    private productService: ProductService,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.productService.getInvalidProducts().subscribe(\n      res => {\n        this.products = res;\n        this.displayProducts = this.products;\n        this.categories = res.map(prod => prod.category).filter((v, idx, arr) => !!v && arr.indexOf(v) === idx);\n        this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    )\n    this.filterGroup = this.formBuilder.group({\n      keyword: new FormControl(''),\n      material: new FormControl(null),\n      category: new FormControl(null)\n    })\n    this.filterGroup.valueChanges.subscribe(\n      changes => {\n        this.displayProducts = this.productService.productSearchFilter(this.products, changes)\n        this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n      }\n    )\n  }\n\n  emptyFilter(): void {\n    this.filterGroup.reset()\n    this.displayProducts = this.products;\n    this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n\n  openCopyProductDialog(product: Product) {\n    const dialogRef = this.dialog.open(CopyProductDialogComponent, {\n      width: '30%',\n      height: '30%',\n      data: {product: product}\n    });\n    dialogRef.afterClosed().subscribe(\n      res => {\n        if (res) {\n          this.products.push(res);\n          this.displayProducts.push(res)\n          this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n          this.onSuccess('复制')\n        }})}\n\n\n  resumeProduct(product: Product) {\n    this.productService.resumeProduct(product.id || '').subscribe(\n      res => {\n        const target_idx1 = this.displayProducts.findIndex(p => p.id === product.id);\n        this.displayProducts = this.displayProducts.splice(target_idx1, 1);\n        const target_idx2 = this.products.findIndex(p => p.id === product.id);\n        this.products = this.products.splice(target_idx2, 1);\n        this.dataSource = new MatTableDataSource<Product>(this.displayProducts);\n        this.onSuccess('重新启用');\n      },\n      error => {\n        console.log(error);\n        this.onFailure('重新启用');\n      }\n    )\n  }\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <form [formGroup]=\"filterGroup\" fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>搜索</mat-label>\n        <input matInput type=\"text\" formControlName=\"keyword\">\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>种类</mat-label>\n        <mat-select formControlName=\"category\">\n          <mat-option>**不限**</mat-option>\n          <mat-option *ngFor=\"let c of categories\" [value]=\"c\">\n            {{c}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <button mat-flat-button (click)=\"emptyFilter()\">清空筛选</button>\n    </form>\n    <button mat-button class=\"view\" [routerLink]=\"['/inventory']\" [disabled]=\"jwtTokenService.getRole()==='employee'\"> 查看在用产品 </button>\n  </div>\n\n  <div class=\"mat-elevation-z8 data-table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef> {{displayedColumns.get(col)}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"resumeProduct(element)\" title=\"重新启用\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>restart_alt</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              <p *ngIf=\"col.includes('date')\">{{element[col].slice(0, 10)}}</p>\n              <p *ngIf=\"!col.includes('date')\">{{element[col]}}</p>\n            </span>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProperties;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of products\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n\n  </div>\n\n\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {Salary} from '../shared/models/salary';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {SalaryService} from '../shared/services/salary.service';\nimport {ProductService} from '../shared/services/product.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {environment} from '../../environments/environment';\nimport {EmployeeService} from '../shared/services/employee.service';\nimport {Employee} from '../shared/models/employee';\nimport {map} from 'rxjs/operators';\nimport {Product} from '../shared/models/product';\nimport {Compo} from '../shared/models/compo';\nimport {CreateSalaryForOneDialogComponent} from './create-salary-for-one-dialog/create-salary-for-one-dialog.component';\nimport {EditWorkDialogComponent} from '../manufacture/edit-work-dialog/edit-work-dialog.component';\nimport {CreateSalaryForAllComponent} from './create-salary-for-all/create-salary-for-all.component';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-salary',\n  templateUrl: './salary.component.html',\n  styleUrls: ['./salary.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class SalaryComponent implements OnInit {\n  displayedProperties: string[] = [\n    'employee_id', 'employee_name', 'start_date',\n    'end_date', 'unit_salary',\n    'hour_salary', 'deduction', 'bonus',\n    'total', 'status', 'check_date',\n    'edit'\n  ];\n\n  displayedColumns = new Map([['employee_id', '员工工号'], ['employee_name','员工姓名'],\n    ['start_date', '结算开始'], ['end_date', '结算结束'], ['unit_salary', '计件工资'], ['hour_salary', '计时工资'],\n    ['deduction', '扣除额'], ['bonus', '增补额'], ['total', '总额'], ['status', '发放状态'], ['check_date', '发放日期'],\n    ['edit', '操作']]);\n\n  editableProperties: string[] = [\n    'deduction', 'bonus', 'edit'\n  ];\n\n  displayedSalaries: Salary[] = []\n  salaries: Salary[] = [];\n  dataSource: any;\n\n  employees: Employee[] = []\n\n  filterGroup!: FormGroup;\n\n  expandedElement!: Salary | null;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    public salaryService: SalaryService,\n    private employeeService: EmployeeService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.employeeService.employees.length) {\n      this.employeeService.getEmployees().subscribe(\n        res => this.employees = res\n      );\n    } else {\n      this.employees = this.employeeService.employees;\n    };\n    this.filterGroup = this.formBuilder.group({\n      keyword: new FormControl(''),\n      start_date: new FormControl(''),\n      end_date: new FormControl('')\n    });\n    this.salaryService.getSalaries().subscribe(\n      res => {\n        this.salaries = res;\n        this.displayedSalaries = this.salaries;\n        this.dataSource = new MatTableDataSource<Salary>(this.displayedSalaries);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    );\n    this.filterGroup.valueChanges.subscribe(changes => {\n      this.displayedSalaries = this.salaryService.salarySearchFilter(this.displayedSalaries, changes)\n      this.dataSource = new MatTableDataSource<Salary>(this.displayedSalaries);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  openCreateSalaryDialog(): void {\n  }\n\n  payConfirm(salary: Salary) {\n    const eventString = `确认支付${salary.employee_name}工资`;\n    const updated_salary = salary;\n    delete updated_salary.work;\n    this.salaryService.putSalary({...updated_salary, status: 'paid', check_date: new Date()}).subscribe(\n      ret_salary => {\n        this.employeeService.updateLastPayCheck(ret_salary.employee_id, ret_salary.check_date || new Date()).subscribe(\n          res => {\n            const targetIdx1 = this.salaries.findIndex(s => s.id === ret_salary.id);\n            this.salaries = this.salaries.splice(targetIdx1, 1);\n            const targetIdx2 = this.displayedSalaries.findIndex(s => s.id === ret_salary.id);\n            this.displayedSalaries = this.displayedSalaries.splice(targetIdx2, 1);\n            this.dataSource = new MatTableDataSource<Salary>(this.displayedSalaries);\n            this.onSuccess(eventString);\n          },\n          error => this.onFailure(eventString)\n        )\n      },\n      error => this.onFailure(eventString)\n    )\n  }\n\n  deleteConfirm(salary: Salary) {\n    const eventString = `删除${salary.employee_name}结算记录`;\n    this.salaryService.deleteSalary(salary.id!).subscribe(\n      res => {\n        const targetIdx1 = this.salaries.findIndex(s => s.id === salary.id);\n        this.salaries = this.salaries.splice(targetIdx1, 1);\n        const targetIdx2 = this.displayedSalaries.findIndex(s => s.id === salary.id);\n        this.displayedSalaries = this.displayedSalaries.splice(targetIdx2, 1);\n        this.dataSource = new MatTableDataSource<Salary>(this.displayedSalaries);\n        this.onSuccess(eventString);\n      },\n      error => this.onFailure(eventString)\n    )\n  }\n\n  emptyFilter(): void {\n    this.filterGroup.reset()\n    this.displayedSalaries = this.salaries;\n    this.dataSource = new MatTableDataSource<Salary>(this.displayedSalaries);\n  }\n\n  onSalarySubmit(salary: Salary): void {\n    this.salaryService.putSalary(salary).subscribe(\n      res => this.onSuccess('修改金额'),\n      error => this.onFailure('修改金额')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n  openCreateSalaryForOne() {\n    const dialogRef = this.dialog.open(CreateSalaryForOneDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {employees: this.employees}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      ret_salary => {\n        if (ret_salary) {\n          this.salaries.push(ret_salary);\n          this.displayedSalaries = this.salaries;\n          this.dataSource = new MatTableDataSource<Salary>(this.displayedSalaries);\n          this.onSuccess('薪水结算');\n        }\n      }\n    );\n  }\n\n  openCreateSalaryForAll() {\n    const dialogRef = this.dialog.open(CreateSalaryForAllComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {employees: this.employees}\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  readableDate(d: Date) {\n    return d.toISOString();\n  }\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <form [formGroup]=\"filterGroup\">\n      <mat-form-field appearance=\"standard\" class=\"field-search\">\n        <mat-label>按员工姓名筛选</mat-label>\n        <input matInput type=\"text\" formControlName=\"keyword\">\n      </mat-form-field>\n<!--      <mat-form-field appearance=\"standard\">-->\n<!--        <mat-label>按覆盖日期范围筛选</mat-label>-->\n<!--        <mat-date-range-input [rangePicker]=\"picker\">-->\n<!--          <input matStartDate formControlName=\"start_date\" placeholder=\"开始日期\">-->\n<!--          <input matEndDate formControlName=\"end_date\" placeholder=\"结束日期\">-->\n<!--        </mat-date-range-input>-->\n<!--        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>-->\n<!--        <mat-date-range-picker #picker></mat-date-range-picker>-->\n<!--      </mat-form-field>-->\n      <button mat-flat-button (click)=\"emptyFilter()\">清空筛选</button>\n    </form>\n    <button mat-raised-button class=\"info\" (click)=\"openCreateSalaryForOne()\">新增个人结算</button>\n    <button mat-raised-button class=\"export\">导出为Excel</button>\n  </div>\n\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\" multiTemplateDataRows\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef>{{displayedColumns.get(col)}}</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit || !editableProperties.includes(col)\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !(element.isEdit)\"><mat-icon>edit</mat-icon></button>\n              <button mat-icon-button (click)=\"payConfirm(element)\"><mat-icon>price_check</mat-icon></button>\n              <button mat-icon-button (click)=\"deleteConfirm(element)\"><mat-icon>delete</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              <p *ngIf=\"col === 'total'\">\n                {{salaryService.calculateTotalSalary(element) | currency : 'CNY': 'symbol-narrow'}}\n              </p>\n              <p class=\"info\" *ngIf=\"col === 'status'\">{{element[col] === 'paid' ? '已结' : '未付'}}</p>\n              <p *ngIf=\"col.includes('date')\">{{element[col].slice(0, 10)}}</p>\n              <p *ngIf=\"col !== 'status' && !col.includes('date')\" #formula >{{element[col]}}</p>\n            </span>\n          </div>\n          <div *ngIf=\"element.isEdit && editableProperties.includes(col)\">\n            <div class=\"btn-edit\" *ngIf=\"col === 'edit'; else dataField\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit; onSalarySubmit(element);\"><mat-icon>check</mat-icon></button>\n            </div>\n            <ng-template #dataField>\n              <mat-form-field>\n                <mat-label>{{displayedColumns.get(col)}}</mat-label>\n                <input matInput [(ngModel)]=\"element[col]\">\n              </mat-form-field>\n            </ng-template>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedProperties.length\">\n          <div class=\"example-element-detail\"\n               [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <div class=\"example-element-description\" fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n              <mat-list-item *ngFor=\"let w of element.work\" fxLayout=\"row\">\n                <div mat-line fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n                  <mat-icon mat-list-icon>task_alt</mat-icon>\n                  <p class=\"piece\">{{w.work_date | date : 'yyyy/MM/dd'}} ｜ 产品：{{w.product_name}} | 工艺：{{w.process_name}} </p>\n                  <p *ngIf=\"w.unit_pay\" class=\"record piece\"> 小计：{{(w.unit_pay * w.complete_unit) | currency : 'CNY'}} （单件酬劳 {{w.unit_pay | currency : 'CNY'}} * {{w.complete_unit}}件） </p>\n                  <p *ngIf=\"w.hour_pay\" class=\"record piece\"> 小计：{{(w.hour_pay * w.complete_hour) | currency : 'CNY'}} （小时酬劳 {{w.hour_pay | currency : 'CNY'}} * {{w.complete_hour}}小时）</p>\n                </div>\n              </mat-list-item>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedProperties;\"\n          class=\"example-element-row\"\n          [class.example-expanded-row]=\"expandedElement === element\"\n          (click)=\"expandedElement = expandedElement === element ? null : element\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { OverviewComponent } from './overview/overview.component';\nimport { TransmissionComponent } from './transmission/transmission.component';\nimport { ManufactureComponent } from './manufacture/manufacture.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { ProcessCompleteDialogComponent } from './manufacture/process-complete-dialog/process-complete-dialog.component';\nimport { BatchCompleteDialogComponent } from './manufacture/batch-complete-dialog/batch-complete-dialog.component';\nimport { CreateSpecComponent } from './create-spec/create-spec.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { StockComponent } from './stock/stock.component';\nimport { PullInDialogComponent } from './stock/pull-in-dialog/pull-in-dialog.component';\nimport { LoginComponent } from './login/login.component';\nimport { AccountComponent } from './account/account.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CustomStyleModule} from './shared/custom-style.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport { OperationComponent } from './operation/operation.component';\nimport { VendorListComponent } from './vendor-list/vendor-list.component';\nimport { CreateVendorDialogComponent } from './vendor-list/create-vendor-dialog/create-vendor-dialog.component';\nimport { CreateWorkDialogComponent } from './manufacture/create-work-dialog/create-work-dialog.component';\nimport { EditWorkDialogComponent } from './manufacture/edit-work-dialog/edit-work-dialog.component';\nimport { CompleteWorkDialogComponent } from './manufacture/complete-work-dialog/complete-work-dialog.component';\nimport { CreateBatchDialogComponent } from './manufacture/create-batch-dialog/create-batch-dialog.component';\nimport { HistoryComponent } from './manufacture/history/history.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EditComponentDialogComponent } from './stock/edit-component-dialog/edit-component-dialog.component';\nimport { DeleteComponentDialogComponent } from './stock/delete-component-dialog/delete-component-dialog.component';\nimport { EditSpecDialogComponent } from './stock/edit-spec-dialog/edit-spec-dialog.component';\nimport { CreateEmployeeDialogComponent } from './employee/create-employee-dialog/create-employee-dialog.component';\nimport { DeliveryComponent } from './delivery/delivery.component';\nimport { CreateDeliveryDialogComponent } from './delivery/create-delivery-dialog/create-delivery-dialog.component';\nimport { BuyerListComponent } from './buyer-list/buyer-list.component';\nimport { CreateBuyerDialogComponent } from './buyer-list/create-buyer-dialog/create-buyer-dialog.component';\nimport { EditProductDialogComponent } from './inventory/edit-product-dialog/edit-product-dialog.component';\nimport { SalaryComponent } from './salary/salary.component';\nimport { CreateSalaryForOneDialogComponent } from './salary/create-salary-for-one-dialog/create-salary-for-one-dialog.component';\nimport { CreateSalaryForAllComponent } from './salary/create-salary-for-all/create-salary-for-all.component';\nimport { AddDayInvoiceDialogComponent } from './manufacture/add-day-invoice-dialog/add-day-invoice-dialog.component';\nimport { CopyProductDialogComponent } from './inventory/copy-product-dialog/copy-product-dialog.component';\nimport { ConfirmDeprecateDialogComponent } from './inventory/confirm-deprecate-dialog/confirm-deprecate-dialog.component';\nimport { DeprecatedComponent } from './inventory/deprecated/deprecated.component';\nimport { BatchSummaryComponent } from './manufacture/batch-summary/batch-summary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    OverviewComponent,\n    TransmissionComponent,\n    ManufactureComponent,\n    InventoryComponent,\n    ProcessCompleteDialogComponent,\n    BatchCompleteDialogComponent,\n    CreateSpecComponent,\n    CreateProductComponent,\n    CreateEmployeeComponent,\n    StockComponent,\n    PullInDialogComponent,\n    LoginComponent,\n    AccountComponent,\n    OperationComponent,\n    VendorListComponent,\n    CreateVendorDialogComponent,\n    CreateWorkDialogComponent,\n    EditWorkDialogComponent,\n    CompleteWorkDialogComponent,\n    CreateBatchDialogComponent,\n    HistoryComponent,\n    EmployeeComponent,\n    EditComponentDialogComponent,\n    DeleteComponentDialogComponent,\n    EditSpecDialogComponent,\n    CreateEmployeeDialogComponent,\n    DeliveryComponent,\n    CreateDeliveryDialogComponent,\n    BuyerListComponent,\n    CreateBuyerDialogComponent,\n    EditProductDialogComponent,\n    SalaryComponent,\n    CreateSalaryForOneDialogComponent,\n    CreateSalaryForAllComponent,\n    AddDayInvoiceDialogComponent,\n    CopyProductDialogComponent,\n    ConfirmDeprecateDialogComponent,\n    DeprecatedComponent,\n    BatchSummaryComponent\n  ],\n    imports: [\n      HttpClientModule,\n      BrowserModule,\n      AppRoutingModule,\n      BrowserAnimationsModule,\n      MatDividerModule,\n      ReactiveFormsModule,\n      CustomStyleModule,\n      FormsModule,\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-transmission',\n  templateUrl: './transmission.component.html',\n  styleUrls: ['./transmission.component.scss']\n})\nexport class TransmissionComponent implements OnInit {\n  public error: string = ''\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.error = params['error'];\n    });\n  }\n\n}\n","<div class=\"center-container\">\n  <h1> 您没有访问该页面的授权 </h1>\n</div>\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n  <div class=\"vertical-isolated\" fxLayout=\"row wrap\" fxLayoutAlign=\"start stretch\">\n    <mat-card fxFlex=\"30\">\n      <mat-card-header>\n        <mat-card-title><p class=\"highlight\">批次 {{batch.id}} 生产小结</p></mat-card-title>\n        <mat-card-subtitle>产品：{{batch.product_name}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div  fxLayout=\"row\" fxLayoutAlign=\"space-between none\">\n          <div class=\"side-super-distance\">\n            <p>起始排产/最终达产：</p>\n            <p class=\"info\">实际付产率：</p>\n            <p>开始/完成日期：</p>\n            <p>备注：</p>\n          </div>\n          <div *ngIf=\"batch.actual_amount\" class=\"side-super-distance\">\n            <p>{{batch.plan_amount}}/{{batch.actual_amount}}</p>\n            <p class=\"info\">{{batch.actual_amount/batch.plan_amount | percent : '1.0-2'}}</p>\n            <p>{{batch.start | date : 'YYYY/MM/dd'}} ~ {{batch.end | date : 'YYYY/MM/dd'}}</p>\n            <p>{{batch.notice}}</p>\n          </div>\n        </div>\n        <mat-divider></mat-divider>\n        <br>\n        <div  fxLayout=\"row\" fxLayoutAlign=\"space-between none\">\n          <div class=\"side-super-distance\">\n            <p class=\"success\">批次总配料成本</p>\n            <p class=\"success\">批次总人力成本</p>\n            <p>标准/实际单位配料成本：</p>\n            <p>配料成本损耗率：</p>\n            <p>实际单位人力成本：</p>\n            <p class=\"info\">实际单位总成本（配料+人工）：</p>\n          </div>\n          <div *ngIf=\"batch.actual_amount\" class=\"side-super-distance\">\n            <p class=\"success\">{{batch.actual_total_spec_cost! | currency : 'CNY' : 'symbol-narrow'}}</p>\n            <p class=\"success\">{{batch.actual_total_work_cost! | currency : 'CNY' : 'symbol-narrow'}}</p>\n            <p>{{batch.ideal_unit_spec_cost! | currency : 'CNY' : 'symbol-narrow'}}/{{batch.actual_unit_spec_cost! | currency : 'CNY' : 'symbol-narrow'}}</p>\n            <p>{{((batch.actual_unit_spec_cost!-batch.ideal_unit_spec_cost!)/batch.ideal_unit_spec_cost!) | percent : '2.0-2'}}</p>\n            <p>{{(batch.actual_total_work_cost!/batch.actual_amount!) | currency : 'CNY' : 'symbol-narrow'}}</p>\n            <p class=\"info\">{{batch.actual_unit_overall_cost! | currency : 'CNY' : 'symbol-narrow'}}</p>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <mat-card *ngFor=\"let bp of bpService.sortedBatchProcesses(batch.batch_process)\" fxFlex=\"30\">\n      <mat-card-header>\n        <mat-card-title>  工艺{{bp.process?.process_order}} - {{bp.process?.process_name}} </mat-card-title>\n        <mat-card-subtitle> 参与员工人数： {{bp.work?.length}} </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"bp-overview-container side-super-distance\"  fxLayout=\"row\" fxLayoutAlign=\"space-between none\">\n          <div class=\"overview-title-container\">\n            <p>起始排产/最终达产：</p>\n            <p class=\"info\">实际付产率：</p>\n            <p>标准单位配料成本（无耗损）：</p>\n            <p>实际单位配料成本（计损耗）：</p>\n            <p class=\"info\">实际单位总成本（配料+人工）：</p>\n          </div>\n          <div class=\"overview-data-container\" *ngIf=\"bp.end_amount && bp.start_amount\">\n            <p>{{bp.start_amount}} / {{bp.end_amount!}}</p>\n            <p class=\"info\">{{(bp.end_amount!/bp.start_amount) | percent : '1.0-2'}}</p>\n            <p>{{bp.ideal_unit_spec_cost! | currency : 'CNY' : 'symbol-narrow'}}</p>\n            <p>{{bp.actual_unit_spec_cost! | currency : 'CNY' : 'symbol-narrow'}}</p>\n            <p class=\"info\">{{(bp.actual_overall_cost!/bp.end_amount!) | currency : 'CNY' : 'symbol-narrow'}}</p>\n          </div>\n        </div>\n        <div class=\"bp-work-container greyborder distance isolated\" *ngFor=\"let w of bp.work\" >\n          <div class=\"flex-container\">\n            <p class=\"piece\">{{w.employee_name}}（{{w.employee_id}}）</p>\n            <p class=\"piece\">领料日期：{{w.work_date | date : \"YYYY/MM/dd\"}}</p>\n          </div>\n          <div class=\"flex-container\">\n            <p class=\"piece\">工单人力成本</p>\n            <p class=\"piece\">{{(w.unit_pay * w.complete_unit + w.hour_pay * w.complete_hour) | currency : 'CNY' : 'symbol-narrow'}}</p>\n          </div>\n          <div class=\"flex-container\">\n            <p class=\"piece\">工单配件成本</p>\n            <p class=\"piece\">{{w.actual_total_spec_cost | currency : 'CNY' : 'symbol-narrow'}}</p>\n            <p class=\"piece\">({{w.actual_unit_spec_cost}} * {{w.complete_unit}})</p>\n          </div>\n          <div class=\"flex-container\">\n            <p class=\"piece info\">核算后单位成本</p>\n            <p class=\"piece info\">{{w.actual_unit_overall_cost | currency : 'CNY' : 'symbol-narrow'}}</p>\n          </div>\n          <div class=\"flex-container\">\n            <p class=\"piece\">生产达成率</p>\n            <p class=\"piece\">{{(w.complete_unit/w.plan_unit) | percent : '1.0-2'}}</p>\n            <p class=\"piece\">({{w.complete_unit}}/{{w.plan_unit}})</p>\n          </div>\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                配料综合损耗率 {{calculateWorkAttribution(w) | percent}}\n              </mat-panel-title>\n              <mat-panel-description>\n                <p class=\"warn\">耗损{{(w.actual_unit_spec_cost! - bp.ideal_unit_spec_cost!) | currency : 'CNY' : 'symbol-narrow'}}</p>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <mat-list>\n              <mat-list-item class=\"flex-container\" *ngFor=\"let ws of w.work_specification\">\n                <p class=\"detail record piece\">{{ws.component_name}}</p>\n                <p class=\"detail record piece\" *ngIf=\"ws.actual_amount\">耗损率：{{((ws.actual_amount-ws.plan_amount)/ws.plan_amount) | percent}}</p>\n                <p class=\"detail record piece\">({{ws.actual_amount}}/{{ws.plan_amount}})</p>\n              </mat-list-item>\n            </mat-list>\n          </mat-expansion-panel>\n\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {BatchService} from '../../shared/services/batch.service';\nimport {Batch} from '../../shared/models/batch';\nimport {ProductService} from '../../shared/services/product.service';\nimport {BatchProcessService} from '../../shared/services/batch-process.service';\nimport {WorkService} from '../../shared/services/work.service';\nimport {WorkSpecification} from '../../shared/models/work-specification';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {Work} from '../../shared/models/work';\nimport {BatchProcess} from '../../shared/models/batch-process';\n\n\n@Component({\n  selector: 'app-batch-summary',\n  templateUrl: './batch-summary.component.html',\n  styleUrls: ['./batch-summary.component.scss']\n})\nexport class BatchSummaryComponent implements OnInit {\n  batch_id!: number;\n  batch!: Batch;\n\n  constructor(\n    private route: ActivatedRoute,\n    private batchService: BatchService,\n    private productService: ProductService,\n    public bpService: BatchProcessService,\n    private specService: SpecService\n  ) { }\n\n  ngOnInit(): void {\n    this.batch_id = Number(this.route.snapshot.paramMap.get('bid')) || 0;\n    this.batchService.getBatch(this.batch_id).subscribe(\n      res => {\n        this.batch = res;\n        this.productService.getProductNameById(this.batch.product_id).subscribe(\n          prod => this.batch.product_name = prod.name\n        );\n        this.batch.batch_process.forEach(bp => {\n          bp.work?.forEach(w => {\n            w.actual_total_spec_cost = this.calculateWorkGrossCost(w);\n            w.actual_unit_spec_cost = w.actual_total_spec_cost/w.complete_unit;\n            w.actual_unit_overall_cost = w.actual_unit_spec_cost + w.unit_pay;\n          });\n          bp.ideal_unit_spec_cost = bp.warehouse_record?.reduce((prev, wr) => prev + wr.specification_gross_price! * wr.consumption, 0) || 0;\n          bp.actual_total_spec_cost = bp.work?.reduce((prev, w) => prev + (w.actual_total_spec_cost || 0), 0) || 0;\n          bp.actual_unit_spec_cost = bp.actual_total_spec_cost/bp.end_amount!;\n          bp.actual_total_work_cost = bp.work?.reduce((prev, w) => prev + w.unit_pay * w.complete_unit, 0) || 0;\n          bp.actual_overall_cost = bp.actual_total_spec_cost + bp.actual_total_work_cost;\n        });\n        this.batch.ideal_unit_spec_cost = this.batch.batch_process.reduce(\n          (prev, bp) => prev + bp.ideal_unit_spec_cost!, 0);\n        this.batch.actual_total_spec_cost = this.batch.batch_process.reduce(\n          (prev, bp) => prev + bp.actual_total_spec_cost!, 0);\n        this.batch.actual_total_work_cost = this.batch.batch_process.reduce(\n          (prev, bp) => prev + bp.actual_total_work_cost!, 0);\n        this.batch.actual_unit_spec_cost = this.batch.actual_total_spec_cost/this.batch.actual_amount!;\n        this.batch.actual_unit_overall_cost = (this.batch.actual_total_spec_cost + this.batch.actual_total_work_cost)/this.batch.actual_amount!;\n      }\n    )\n  }\n\n  checkGrossPriceExist(work: Work): boolean {\n    return !!work.work_specification?.every(ws => !!ws.specification_gross_price);\n  }\n\n  calculateWorkAttribution(work: Work): number {\n    const sum = {act: 0, plan: 0}\n    work.work_specification?.forEach(ws => {\n      sum.act += (ws.actual_amount || 0);\n      sum.plan += ws.plan_amount;\n    })\n    return (sum.act-sum.plan)/sum.plan\n  }\n\n  calculateWorkGrossCost(work: Work): number {\n    if (this.checkGrossPriceExist(work)) {\n      return work.work_specification?.reduce((prev, curr) => prev + (curr.specification_gross_price! * curr.actual_amount!), 0) || 0\n    } else {\n      return 0;\n    }\n  }\n\n  calculateWorkPlanCost(work: Work): number {\n    if (work.work_specification?.every(ws => !!ws.specification_gross_price)) {\n      return work.work_specification?.reduce((prev, curr) => prev + (curr.specification_gross_price! * curr.plan_amount!), 0) || 0\n    } else {\n      return 0;\n    }\n  }\n\n  calculateExtraExpense(work: Work): number {\n    return this.calculateWorkGrossCost(work) - this.calculateWorkPlanCost(work)\n  }\n\n  calculateBatchProcessPlanCost(bp: BatchProcess): number {\n    if (bp.work?.every(w => this.checkGrossPriceExist(w))) {\n      return bp.work?.reduce((prev, w) => prev + this.calculateWorkPlanCost(w), 0) || 0\n    } else {\n      return 0\n    }\n  }\n\n  calculateBatchProcessActualCost(bp: BatchProcess): number {\n    if (bp.work?.every(w => this.checkGrossPriceExist(w))) {\n      return bp.work?.reduce((prev, w) => prev + this.calculateWorkGrossCost(w), 0) || 0\n    } else {\n      return 0\n    }\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Vendor} from '../../shared/models/vendor';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {Spec} from '../../shared/models/spec';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {JWTTokenService} from '../../shared/services/jwt-token.service';\n\nclass DialogData {\n  spec!: Spec;\n  compo_name!: string;\n}\n\n@Component({\n  selector: 'app-edit-spec-dialog',\n  templateUrl: './edit-spec-dialog.component.html',\n  styleUrls: ['./edit-spec-dialog.component.scss']\n})\nexport class EditSpecDialogComponent implements OnInit {\n  specGroup!: FormGroup;\n\n  vendors: Vendor[] = [];\n  vendorOptions!: Observable<Vendor[]>;\n  selectedVendor = new FormControl('', Validators.required);\n\n\n  constructor(\n    public dialogRef: MatDialogRef<EditSpecDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private specService: SpecService,\n    private formBuilder: FormBuilder,\n    private _snackBar: MatSnackBar,\n    public jwtTokenService: JWTTokenService\n  ) { }\n\n  ngOnInit(): void {\n    this.specGroup = this.formBuilder.group({\n      id: new FormControl('', Validators.required),\n      gross_price: new FormControl(''),\n      net_price: new FormControl(''),\n      stock: new FormControl(0, Validators.required),\n      notice: new FormControl(''),\n    });\n    this.specGroup.setValue(this.data.spec);\n  }\n\n  onSpecInfoConfirm(form: FormGroup): void {\n    const updated_spec = {...this.data.spec, ...form.value};\n    this.specService.putSpec(updated_spec).subscribe(\n      res => {\n        this.dialogRef.close(res);\n      },\n      error => {\n        this.onFailure('规格信息修改');\n        console.log(error);\n      }\n    );\n  }\n\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">编辑配件规格</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"specGroup\">\n    <label>对应配件</label>\n    <p class=\"mat-h3 info\">{{data.compo_name}} | {{data.spec.component_id}}</p>\n\n    <label>来自供应商</label>\n    <p class=\"mat-h3 info\">{{data.spec.vendor?.company}}</p>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>规格编码</mat-label>\n      <input matInput type=\"text\" formControlName=\"id\">\n      <mat-hint align=\"end\">请遵循既定编码规则</mat-hint>\n    </mat-form-field>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between none\" *ngIf=\"jwtTokenService.getRole()==='omni'\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>税前价格</mat-label>\n        <input matInput type=\"number\" formControlName=\"net_price\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\">\n        <mat-label>含税价格</mat-label>\n        <input matInput type=\"number\" formControlName=\"gross_price\">\n      </mat-form-field>\n    </div>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>初始库存</mat-label>\n      <input matInput type=\"number\" formControlName=\"stock\">\n      <mat-hint align=\"end\">默认值为0</mat-hint>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n\n    <div class=\"button-container\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!specGroup.valid\">确认添加</button>\n    </div>\n  </form>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!specGroup.valid\" (click)=\"onSpecInfoConfirm(specGroup)\">确认提交</button>\n  <button mat-button color=\"warn\" (click)=\"dialogRef.close()\">取消</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Batch} from '../../shared/models/batch';\nimport {ProductService} from '../../shared/services/product.service';\nimport {Product} from '../../shared/models/product';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {BatchService} from '../../shared/services/batch.service';\nimport {BatchProcessService} from '../../shared/services/batch-process.service';\nimport {ProcessService} from '../../shared/services/process.service';\nimport {Process} from '../../shared/models/process';\nimport {BatchProcess} from '../../shared/models/batch-process';\n\nclass DialogData {\n}\n\n@Component({\n  selector: 'app-create-batch-dialog',\n  templateUrl: './create-batch-dialog.component.html',\n  styleUrls: ['./create-batch-dialog.component.scss']\n})\nexport class CreateBatchDialogComponent implements OnInit {\n  batchGroup!: FormGroup;\n  products: Product[] = [];\n  productOptions!: Observable<Product[]>;\n  returnBatch: Batch | null = null;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateBatchDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private batchService: BatchService,\n    private bpService: BatchProcessService,\n    private processService: ProcessService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.productService.getValidProducts().subscribe(\n      res => this.products = res,\n      error => console.log(error))\n    this.batchGroup = this.formBuilder.group({\n      product_id: new FormControl(null, Validators.required),\n      plan_amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n      start: new FormControl('', Validators.required),\n      notice: new FormControl('')\n    })\n    this.productOptions = this.batchGroup.controls['product_id'].valueChanges.pipe(\n      map(input => this.productAutocompleteFilter(input)));\n  }\n\n  productAutocompleteFilter(input: string): Product[] {\n    return this.products.filter(p => p.name.includes(input) || String(p.id).startsWith(input))\n  }\n\n  productDisplayFn(product: Product): string {\n    return product ? `${product.name} | ${product.id}` : ''\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onBatchSubmit(form: FormGroup): void {\n    const now = new Date();\n    const product_name = form.value.product_id.name;\n    const new_batch: Batch = {...form.value, product_id: form.value.product_id.id};\n    new_batch.create = now;\n    new_batch.status = new_batch.start > now ? 'unstarted' : 'ongoing'\n    this.batchService.postBatch(new_batch).subscribe(\n      returnBatch => {\n        this.returnBatch = {...returnBatch, batch_process: this.bpService.postBatchProcessesByBatch(returnBatch), product_name: product_name};\n        this.dialogRef.close(this.returnBatch);\n      },\n      error => {\n        console.log(error);\n        this.onFailure('创建生产批次');\n      }\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">创建新生产批次</p>\n</div>\n\n<div mat-dialog-content fxLayout=\"row\" fxLayoutAlign=\"center none\">\n  <form [formGroup]=\"batchGroup\" fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>生产产品</mat-label>\n      <input matInput formControlName=\"product_id\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"productDisplayFn\">\n        <mat-option *ngFor=\"let p of this.productOptions | async\" [value]=\"p\">\n          {{p.name}} | {{p.id}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>计划生产数量</mat-label>\n      <input matInput type=\"number\" formControlName=\"plan_amount\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>开工日期</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"start\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\">\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>备注</mat-label>\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n  </form>\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onBatchSubmit(batchGroup)\">确认提交</button>\n  <button mat-button (click)=\"onNoClick()\">结束</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../shared/models/product';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ProductService} from '../../shared/services/product.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nclass DialogData {\n  product!: Product\n}\n\n@Component({\n  selector: 'app-confirm-deprecate-dialog',\n  templateUrl: './confirm-deprecate-dialog.component.html',\n  styleUrls: ['./confirm-deprecate-dialog.component.scss']\n})\nexport class ConfirmDeprecateDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDeprecateDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private productService: ProductService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onDeprecateConfirm() {\n    this.productService.deprecateProduct(this.data.product.id || '').subscribe(\n      res => {\n        res.success && this.dialogRef.close('success')\n      },\n      error => {\n        console.log(error)\n        this.onFailure('停用')\n      }\n    );\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n}\n","<h2 mat-dialog-title> 确认停用 </h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p class=\"warn\">你确定要停用产品 {{data.product.name}}（{{data.product.id}}）吗？</p>\n</mat-dialog-content>\n<mat-dialog-content>\n  <button mat-raised-button color=\"warn\" (click)=\"onDeprecateConfirm()\"> 确认停用 </button>\n</mat-dialog-content>\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from './shared/services/auth.service';\nimport {LocalStorageService} from './shared/services/local-storage.service';\nimport {JWTTokenService} from './shared/services/jwt-token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService,\n              private authStorageService: LocalStorageService,\n              private jwtService: JWTTokenService,\n              private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.jwtService.getRole() === 'omni') {\n      return true;\n    }\n    this.router.navigateByUrl('/transmission/no-permission');\n    return false\n  }\n\n}\n","<nav class=\"topnav\">\n  <a routerLink=\"/overview\">雍傅数字化生产管理系统</a>\n  <a class=\"nav-link\" routerLink=\"/overview\" routerLinkActive=\"active\">总览</a>\n  <a class=\"nav-link\" routerLink=\"/manufacture\" routerLinkActive=\"active\">生产</a>\n\n  <a class=\"nav-link\" routerLink=\"/inventory\" routerLinkActive=\"active\">产品</a>\n\n  <a class=\"nav-link\" routerLink=\"/stock\" routerLinkActive=\"active\">配件</a>\n\n  <a class=\"nav-link\" routerLink=\"/employee\" routerLinkActive=\"active\">人员</a>\n\n  <a class=\"nav-link\" routerLink=\"/salary\" routerLinkActive=\"active\">工资</a>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" >\n    <div class=\"welcome-info-container\">\n      <p class=\"whiteout vertical-middle\" *ngIf=\"auth.user\">欢迎，{{auth.user.username}}</p>\n    </div>\n    <button mat-raised-button color=\"primary\" class=\"navbar-login nav-link\" *ngIf=\"!auth.user; else logoutTemplate\" routerLink=\"/login\" routerLinkActive=\"active\"> 登陆 </button>\n    <ng-template #logoutTemplate>\n      <button mat-stroked-button class=\"action pointer navbar-login nav-link\" (click)=\"onLogout()\"> 退出 </button>\n    </ng-template>\n  </div>\n\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../shared/services/auth.service';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    public auth: AuthService,\n    public jwtTokenService: JWTTokenService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogout() {\n    this.auth.logout();\n    this.jwtTokenService.clearAll();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Product} from '../models/product';\nimport {environment} from '../../../environments/environment';\nimport {Compo} from '../models/compo';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompoService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCompos(): Observable<Compo[]> {\n    return this.http.get<Compo[]>(`${environment.API_URL}/components`)\n  }\n\n  getCompo(id: string): Observable<Compo> {\n    return this.http.get<Compo>(`${environment.API_URL}/components/${id}`)\n  }\n\n  postCompo(compo: Compo): Observable<Compo> {\n    return this.http.post<Compo>(`${environment.API_URL}/components`, compo)\n  }\n\n  putCompo(compo: Compo): Observable<Compo> {\n    return this.http.put<Compo>(`${environment.API_URL}/components`, compo)\n  }\n\n  deleteCompo(compo_id: string): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/components/${compo_id}`)\n  }\n\n  compoSearchFilter(compos: Compo[], changes: any): Compo[] {\n    changes.category && (changes.category = changes.categories.toUpperCase());\n    changes.material && (changes.material = changes.material.toUpperCase());\n    changes.keyword && (changes.keyword = changes.keyword.toUpperCase());\n    return compos\n      .filter(compo => !changes.category || (compo.category.toUpperCase() === changes.category))\n      .filter(compo => !changes.material || (compo.material?.toUpperCase() === changes.material))\n      .filter(compo => compo.id?.includes(changes.keyword)\n        || compo.name.toUpperCase().includes(changes.keyword)\n        || compo.description?.toUpperCase().includes(changes.keyword)\n        || (compo.notice && compo.notice.toUpperCase().includes(changes.keyword)))\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>account works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-batch-complete-dialog',\n  templateUrl: './batch-complete-dialog.component.html',\n  styleUrls: ['./batch-complete-dialog.component.scss']\n})\nexport class BatchCompleteDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>batch-complete-dialog works!</p>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {Spec} from '../models/spec';\nimport {PostResponse} from '../models/post-response'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpecService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getSpecs(): Observable<Spec[]> {\n    return this.http.get<Spec[]>(`${environment.API_URL}/specifications`)\n  }\n\n  getSpecById(specification_id: string): Observable<Spec> {\n    return this.http.get<Spec>(`${environment.API_URL}/specifications/${specification_id}`)\n  }\n\n  getSpecsByCompoId(compo_id: string): Observable<Spec[]> {\n    return this.http.get<Spec[]>(`${environment.API_URL}/specifications/component_id/${compo_id}`)\n  }\n\n  adjustSpecStock(spec_id: string, adjust_number: number): Observable<Spec> {\n    return this.http.put<Spec>(`${environment.API_URL}/specifications/adjust_stock/${spec_id}/${adjust_number}`, null)\n  }\n\n  postSpec(spec: Spec): Observable<Spec> {\n    return this.http.post<Spec>(`${environment.API_URL}/specifications/`, spec)\n  }\n\n  putSpec(spec: Spec): Observable<Spec> {\n    return this.http.put<Spec>(`${environment.API_URL}/specifications/`, spec)\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pull-in-dialog',\n  templateUrl: './pull-in-dialog.component.html',\n  styleUrls: ['./pull-in-dialog.component.scss']\n})\nexport class PullInDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pull-in-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CompoService} from '../shared/services/compo.service';\nimport {SpecService} from '../shared/services/spec.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Vendor} from '../shared/models/vendor';\nimport {Compo} from '../shared/models/compo';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {VendorService} from '../shared/services/vendor.service';\nimport {CreateVendorDialogComponent} from '../vendor-list/create-vendor-dialog/create-vendor-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-create-spec',\n  templateUrl: './create-spec.component.html',\n  styleUrls: ['./create-spec.component.scss']\n})\nexport class CreateSpecComponent implements OnInit {\n  showCreateSpec: Boolean = false;\n\n  compoGroup!: FormGroup;\n  specGroup!: FormGroup;\n\n  compos: Compo[] = [];\n  compoOptions!: Observable<Compo[]>;\n  selectedCompo = new FormControl('', Validators.required);\n\n  vendors: Vendor[] = [];\n  vendorOptions!: Observable<Vendor[]>;\n  selectedVendor = new FormControl('', Validators.required);\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private compoService: CompoService,\n    private specService: SpecService,\n    private vendorService: VendorService,\n    private _snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.compoGroup = this.formBuilder.group({\n      id: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      material: new FormControl(''),\n      description: new FormControl(''),\n      expiration: new FormControl(''),\n      unit_weight: new FormControl(''),\n      warn_stock: new FormControl(1000, Validators.min(0)),\n      notice: new FormControl(''),\n      picture: new FormControl('')\n    });\n\n    this.specGroup = this.formBuilder.group({\n      id: new FormControl('', Validators.required),\n      gross_price: new FormControl('', [Validators.required, Validators.min(0)]),\n      net_price: new FormControl('', [Validators.required, Validators.min(0)]),\n      stock: new FormControl(0, Validators.min(0)),\n      blueprint: new FormControl(''),\n      notice: new FormControl('')\n    });\n\n    this.compoService.getCompos().subscribe(\n      res => this.compos = res,\n      error => console.log(error)\n    );\n    this.vendorService.getVendors().subscribe(\n      res => this.vendors = res,\n      error => console.log(error)\n    );\n\n    this.compoOptions = this.selectedCompo.valueChanges\n      .pipe(\n        map(c => this.compoAutocompleteFilter(c))\n      );\n    this.vendorOptions = this.selectedVendor.valueChanges\n      .pipe(\n        map(v => this.vendorAutocompleteFilter(v))\n      );\n  }\n\n  compoAutocompleteFilter(value: string): Compo[] {\n    return this.compos.filter(c => c.name.includes(value));\n  }\n\n  vendorAutocompleteFilter(value: string): Vendor[] {\n    return this.vendors.filter(v => (v.name.includes(value) || v.company.includes(value)));\n  }\n\n  compoDisplayFn(compo: Compo): string {\n    return compo && compo.name ? `${compo.name} | ${compo.id}` : '';\n  }\n\n  vendorDisplayFn(vendor: Vendor): string {\n    return vendor && vendor.name ? `${vendor.name} | ${vendor.company}` : '';\n  }\n\n  onCompoSubmit(form: FormGroup): void {\n    console.log(\"Sending out the new product...\")\n    this.compoService.postCompo(form.value).subscribe(\n      res => {\n        this.onSuccess('新配件');\n        form.reset();\n        },\n      error => {\n        this.onFailure('新配件');\n        console.log(error);\n      }\n    )\n  }\n\n  onSpecSubmit(form: FormGroup): void {\n    const spec = form.value;\n    spec['component_id'] = this.selectedCompo.value.id;\n    spec['vendor_id'] = this.selectedVendor.value.id;\n    console.log(spec);\n    this.specService.postSpec(form.value).subscribe(\n      res => {\n        this.onSuccess('新供应商规格');\n        form.reset();\n        },\n      error => {\n        this.onFailure('新供应商规格')\n        console.log(error);\n      }\n    );\n  }\n\n  openCreateVendorDialog(): void {\n    const dialogRef = this.dialog.open(CreateVendorDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.vendors.push(result);\n      }\n    });\n  }\n\n  onSuccess(obj: string): void {\n    this._snackBar.open(`创建${obj}成功`, \"关闭\");\n  }\n\n  onFailure(obj: string): void {\n    this._snackBar.open(`创建${obj}失败`, \"关闭\");\n  }\n\n}\n","<div>\n  <div class=\"sub-header\">\n    <p class=\"mat-title\">创建配件</p>\n  </div>\n  <div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title> 新配件 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"button-container clearfix\" fxLayout=\"row\" fxLayoutAlign=\"center center\" >\n          <button mat-raised-button class=\"chip\"> 查看编码规则 </button>\n          <button mat-raised-button class=\"call\" (click)=\"showCreateSpec=true\"> 为已存在配件添加供应商规格<mat-icon>open_in_new</mat-icon> </button>\n        </div>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"compoGroup\" (ngSubmit)=\"onCompoSubmit(compoGroup)\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>配件名称</mat-label>\n            <input matInput formControlName=\"name\">\n            <mat-hint align=\"end\">可以与其他产品重复</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>配件编码</mat-label>\n            <input type=\"text\" matInput formControlName=\"id\">\n            <mat-hint align=\"end\">请遵循既定编码规则</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>分类</mat-label>\n            <input matInput formControlName=\"category\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>材质</mat-label>\n            <input matInput type=\"text\" formControlName=\"material\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>配件描述</mat-label>\n            <!--          <input matInput formControlName=\"description\">-->\n            <textarea matInput formControlName=\"description\"></textarea>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>保存期限</mat-label>\n            <input matInput type=\"text\" formControlName=\"expiration\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>单位重量</mat-label>\n            <input matInput type=\"text\" formControlName=\"unit_weight\">\n            <mat-hint align=\"end\">默认值为零</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>警示库存</mat-label>\n            <input matInput type=\"number\" formControlName=\"warn_stock\">\n            <mat-hint align=\"end\">默认值为1000</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <!--          <input matInput formControlName=\"notice\">-->\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n          <div class=\"button-container\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!compoGroup.valid\">确认添加</button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card *ngIf=\"showCreateSpec\">\n      <mat-card-header>\n        <mat-card-title> 添加新供应商规格 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"button-container clearfix\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <button mat-raised-button class=\"chip\" [routerLink]=\"'/vendors'\"> 查看供应商<mat-icon>store</mat-icon> </button>\n          <button mat-raised-button color=\"primary\" (click)=\"openCreateVendorDialog()\"> 添加新供应商<mat-icon>store</mat-icon> </button>\n        </div>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"specGroup\" (ngSubmit)=\"onSpecSubmit(specGroup)\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>对应配件</mat-label>\n            <input type=\"text\" matInput [formControl]=\"selectedCompo\" [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"compoDisplayFn\">\n              <mat-option *ngFor=\"let compo of this.compoOptions | async\" [value]=\"compo\">\n                {{compo.name}} | {{compo.id}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>供应商</mat-label>\n            <input type=\"text\" matInput [formControl]=\"selectedVendor\" [matAutocomplete]=\"autoBeta\">\n            <mat-autocomplete #autoBeta=\"matAutocomplete\" [displayWith]=\"vendorDisplayFn\">\n              <mat-option *ngFor=\"let vendor of this.vendorOptions | async\" [value]=\"vendor\">\n                {{vendor.name}} | {{vendor.company}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>规格编码</mat-label>\n            <input matInput type=\"text\" formControlName=\"id\">\n            <mat-hint align=\"end\">请遵循既定编码规则</mat-hint>\n          </mat-form-field>\n\n          <div class=\"nty-percent-fill\" fxLayout=\"row\" fxLayoutAlign=\"space-between none\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>税前价格</mat-label>\n              <input matInput type=\"number\" formControlName=\"net_price\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n              <mat-label>含税价格</mat-label>\n              <input matInput type=\"number\" formControlName=\"gross_price\">\n            </mat-form-field>\n          </div>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>初始库存</mat-label>\n            <input matInput type=\"number\" formControlName=\"stock\">\n            <mat-hint align=\"end\">默认值为0</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n\n          <div class=\"button-container\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!specGroup.valid\">确认添加</button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n</div>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {APIDataSource} from '../shared/models/api-data-source';\nimport {CompoService} from '../shared/services/compo.service';\nimport {DataSource} from '@angular/cdk/collections';\nimport {Product} from '../shared/models/product';\nimport {ProductService} from '../shared/services/product.service';\nimport {Observable} from 'rxjs';\nimport {Compo} from '../shared/models/compo';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {SpecService} from '../shared/services/spec.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {CreateVendorDialogComponent} from '../vendor-list/create-vendor-dialog/create-vendor-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {Vendor} from '../shared/models/vendor';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar, MatSnackBarModule} from '@angular/material/snack-bar';\nimport {EditComponentDialogComponent} from './edit-component-dialog/edit-component-dialog.component';\nimport {DeleteComponentDialogComponent} from './delete-component-dialog/delete-component-dialog.component';\nimport {Spec} from '../shared/models/spec';\nimport {EditSpecDialogComponent} from './edit-spec-dialog/edit-spec-dialog.component';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class StockComponent implements OnInit, AfterViewInit {\n  displayedProperties: string[] = [\n    'id', 'name', 'category', 'material', 'description', 'warn_stock', 'edit'\n  ];\n\n  displayedColumns = new Map([['id', '配件编码'], ['name','配件名称'],\n    ['category', '分类'], ['description', '描述'], ['material', '材料'], ['warn_stock', '警示库存'],\n    ['edit', '操作']]);\n\n  compos: Compo[] = [];\n  displayCompos: Compo[] = [];\n  dataSource: any;\n  expandedElement!: Compo | null;\n\n  dangerousCompos: Compo[] = [];\n\n  filterGroup!: FormGroup;\n\n  materials: (string | undefined)[] = [];\n  categories: string[] = [];\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    private compoService: CompoService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar,\n    public jwtTokenService: JWTTokenService\n  ) { }\n\n  ngOnInit(): void {\n    this.compoService.getCompos().subscribe(\n      res => {\n        this.compos = res;\n        this.displayCompos = this.compos;\n        this.dangerousCompos = this.compos.filter(compo => Number(compo.specification?.reduce((acc, spec) => acc + spec.stock, 0)) < compo.warn_stock);\n        this.materials = res.map(compo => compo.material).filter((v, idx, arr) => !!v && arr.indexOf(v) === idx);\n        this.categories = res.map(compo => compo.category).filter((v, idx, arr) => !!v && arr.indexOf(v) === idx);\n        this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n        this.dataSource.paginator = this.paginator;\n      }\n    );\n    this.filterGroup = this.formBuilder.group({\n      keyword: new FormControl(''),\n      material: new FormControl(null),\n      category: new FormControl(null)\n    });\n    this.filterGroup.valueChanges.subscribe(\n      changes => {\n        this.displayCompos = this.compoService.compoSearchFilter(this.compos, changes);\n        this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n  }\n\n  emptyFilter(): void {\n    this.filterGroup.reset()\n    this.displayCompos = this.compos;\n    this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n  }\n\n  checkWarns(): void {\n    this.displayCompos = this.compos.filter(compo => Number(compo.specification?.reduce((acc, spec) => acc + spec.stock, 0)) < compo.warn_stock);\n    this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n  }\n\n  openEditCompoDialog(compo: Compo): void {\n    const dialogRef = this.dialog.open(EditComponentDialogComponent, {\n      width: environment.LARGE_DIALOG_WIDTH,\n      data: {compo: compo}\n    });\n\n    dialogRef.afterClosed().subscribe(updated_compo => {\n      if (!!updated_compo) {\n        const idx = this.displayCompos.findIndex(c => c.id === updated_compo.id);\n        this.displayCompos[idx] = {...this.displayCompos[idx], ...updated_compo};\n        this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n        this.dataSource.paginator = this.paginator;\n        this._snackBar.open(\"修改成功\", \"关闭\")\n      }\n    });\n  }\n\n  openDeleteCompoDialog(compo: Compo): void {\n    const dialogRef = this.dialog.open(DeleteComponentDialogComponent, {\n      width: environment.LARGE_DIALOG_WIDTH,\n      data: {compo: compo}\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (!!res) {\n        const idx = this.displayCompos.findIndex(c => c.id === compo.id);\n        if (idx > -1) {\n          this.displayCompos.slice(idx, 1);\n          this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n          this.dataSource.paginator = this.paginator;\n          this._snackBar.open(\"删除成功\", \"关闭\")\n        }\n      }\n    });\n  }\n\n  openEditSpecDialog(spec: Spec, compo_name: string): void {\n    const dialogRef = this.dialog.open(EditSpecDialogComponent, {\n      width: environment.SMALL_DIALOG_WIDTH,\n      data: {spec: spec, compo_name: compo_name}\n    });\n\n    dialogRef.afterClosed().subscribe(updated_spec => {\n      if (!!updated_spec) {\n        const idx = this.displayCompos.findIndex(c => c.id === updated_spec.id);\n        this.displayCompos[idx] = {...this.displayCompos[idx], ...updated_spec};\n        this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n        this.dataSource.paginator = this.paginator;\n        this._snackBar.open(\"修改成功\", \"关闭\")\n      }\n    });\n  }\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <form [formGroup]=\"filterGroup\">\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>搜索</mat-label>\n        <input matInput type=\"text\" formControlName=\"keyword\">\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>材料</mat-label>\n        <mat-select formControlName=\"material\">\n          <mat-option>**不限**</mat-option>\n          <mat-option *ngFor=\"let m of materials\" [value]=\"m\">\n            {{m}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>种类</mat-label>\n        <mat-select formControlName=\"category\">\n          <mat-option>**不限**</mat-option>\n          <mat-option *ngFor=\"let c of categories\" [value]=\"c\">\n            {{c}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <button mat-stroked-button color=\"warn\" (click)=\"checkWarns()\">查看危险库存</button>\n      <button mat-flat-button (click)=\"emptyFilter()\">清空筛选</button>\n    </form>\n    <button mat-button class=\"call\" [routerLink]=\"['/create-spec']\" [disabled]=\"jwtTokenService.getRole()==='employee'\"> 创建新配件/规格 </button>\n    <button mat-button class=\"view\" [routerLink]=\"['/vendors']\"> 供应商列表 </button>\n  </div>\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\" multiTemplateDataRows\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedProperties\">\n        <th mat-header-cell *matHeaderCellDef> {{displayedColumns.get(col)}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div>\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"openEditCompoDialog(element)\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>edit</mat-icon></button>\n            </div>\n            <div class=\"btn-delete\" *ngIf=\"col ==='delete' ; spanHeader\">\n              <button mat-icon-button (click)=\"openDeleteCompoDialog(element)\" [disabled]=\"jwtTokenService.getRole()==='employee'\"><mat-icon>delete</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              <p [attr.class]=\"dangerousCompos.includes(element) && col==='warn_stock' ? 'mat-h3 warn' : ''\">{{element[col]}}</p>\n            </span>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedProperties.length\">\n          <div class=\"example-element-detail\"\n               [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <div class=\"example-element-description\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n              <mat-card *ngFor=\"let spec of element.specification\">\n                <mat-card-header>\n                  <mat-card-title>{{spec.vendor.company}}</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                  <p>规格号：{{spec.id}}</p>\n                  <p *ngIf=\"jwtTokenService.getRole() === 'omni'\">价格（税前|税后）：{{spec.net_price || '无记录'}} | {{spec.gross_price || '无记录'}}</p>\n                  <p class=\"mat-h3 info\">库存：{{spec.stock}}</p>\n                </mat-card-content>\n                <mat-card-actions>\n                  <button mat-stroked-button color=\"primary\"\n                          (click)=\"openEditSpecDialog(spec, element.name)\"\n                          [disabled]=\"jwtTokenService.getRole()==='employee'\">修改</button>\n                  <button mat-stroked-button color=\"warn\"\n                          [disabled]=\"jwtTokenService.getRole()==='employee'\">删除</button>\n                </mat-card-actions>\n              </mat-card>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProperties\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedProperties;\"\n          class=\"example-element-row\"\n          [class.example-expanded-row]=\"expandedElement === element\"\n          (click)=\"expandedElement = expandedElement === element ? null : element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of products\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Product} from '../models/product';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products`)\n  }\n\n  getValidProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/valid`)\n  }\n\n  getInvalidProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/invalid`)\n  }\n\n  getProductNameById(id: string): Observable<any> {\n    return this.http.get<any>(`${environment.API_URL}/products/only_name/${id}`)\n  }\n\n  getProductById(product_id: string): Observable<Product> {\n    return this.http.get<Product>(`${environment.API_URL}/products/${product_id}`)\n  }\n\n  getProductsByName(name: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/name/${name}`)\n  }\n\n  getProductsByCategory(category: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/category/${category}`)\n  }\n\n  getProductsUnderInventory(inventory: number): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/inventory_under/${inventory}`)\n  }\n\n  postProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(`${environment.API_URL}/products`, product)\n  }\n\n  putProduct(product: Product): Observable<Product> {\n    return this.http.put<Product>(`${environment.API_URL}/products`, product)\n  }\n\n  adjustProductInventory(product_id: string, adjust: number): Observable<Product> {\n    return this.http.put<Product>(`${environment.API_URL}/products/adjust_inventory/${product_id}/${adjust}`, null)\n  }\n\n  deleteProduct(product_id: string): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/products/${product_id}`)\n  }\n\n  productDisplayFn(prod: Product) {\n    return prod && `${prod.name} | ${prod.id}`\n  }\n\n  productAutocompleteFilter(input: string, products: Product[]) {\n    return products.filter(p => p.name.includes(input) || String(p.id).includes(input));\n  }\n\n  productSearchFilter(products: Product[], changes: any): Product[] {\n    changes.category && (changes.category = changes.category.toUpperCase());\n    changes.keyword && (changes.keyword = changes.keyword.toUpperCase());\n    return products\n      .filter(prod => !changes.category || (prod.category === changes.category))\n      .filter(prod => String(prod.id).toUpperCase().includes(changes.keyword)\n        || prod.name.toUpperCase().includes(changes.keyword)\n        || prod.description?.toUpperCase().includes(changes.keyword)\n        || (prod.notice && prod.notice.toUpperCase().includes(changes.keyword)))\n  }\n\n  deprecateProduct(product_id: string): Observable<PostResponse> {\n    const now = (new Date()).toISOString();\n    return this.http.put<PostResponse>(`${environment.API_URL}/products/deprecate/${product_id}/${now}`, null);\n  }\n\n  resumeProduct(product_id: string): Observable<PostResponse> {\n    return this.http.put<PostResponse>(`${environment.API_URL}/products/resume/${product_id}`, null);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  set(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n\n  get(key: string): any {\n    return localStorage.getItem(key);\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {Employee} from '../../shared/models/employee';\nimport {Work} from '../../shared/models/work';\nimport {WarehouseRecord} from '../../shared/models/warehouse-record';\nimport {UtilService} from '../../shared/util.service';\n\nclass DialogData {\n  work!: Work;\n  warehouse_record!: WarehouseRecord[];\n  max_amount!: number\n}\n\n@Component({\n  selector: 'app-edit-work-dialog',\n  templateUrl: './edit-work-dialog.component.html',\n  styleUrls: ['./edit-work-dialog.component.scss']\n})\nexport class EditWorkDialogComponent implements OnInit {\n  workSpecGroup = new FormGroup({});\n  work_date = new FormControl(\n    null,\n    Validators.required);\n  plan_unit = new FormControl(\n    '',\n    [Validators.required, Validators.max(this.data.max_amount), Validators.min(1)]\n  )\n\n\n  constructor(\n    public dialogRef: MatDialogRef<EditWorkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    public util: UtilService\n  ) { }\n\n  ngOnInit(): void {\n    this.work_date.setValue(this.data.work.work_date);\n    this.plan_unit.setValue(this.data.work.plan_unit);\n    this.data.work.work_specification?.forEach(\n      ws => this.workSpecGroup.addControl(\n        ws.specification_id,\n        this.formBuilder.control(\n          ws.actual_amount,\n          [Validators.required, Validators.min(0)]))\n    );\n    this.plan_unit.valueChanges.subscribe(value => this.data.warehouse_record?.forEach(\n      wr => this.workSpecGroup.controls[wr.specification_id].setValidators(\n        [Validators.required, Validators.min(0), Validators.max(value * wr.consumption * 1.1)])\n    ));\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirmClick(): void {\n    this.data.work.plan_unit = this.plan_unit.value;\n    this.data.work.work_date = this.work_date.value;\n    this.data.work.work_specification?.forEach(ws =>{\n      ws.plan_amount = this.plan_unit.value;\n      ws.actual_amount = this.workSpecGroup.controls[ws.specification_id].value;\n    });\n    this.dialogRef.close(this.data.work);\n  }\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">编辑领料记录</p>\n</div>\n\n<div mat-dialog-content fxLayout=\"column\" fxLayoutAlign=\" start\" >\n  <p>{{data.work.employee_name}}</p>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>领料日期</mat-label>\n      <input matInput [matDatepicker]=\"picker\" [formControl]=\"work_date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\">\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>应完成数量</mat-label>\n      <input type=\"number\" matInput [formControl]=\"plan_unit\">\n    </mat-form-field>\n\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <ul [formGroup]=\"workSpecGroup\">\n      <li *ngFor=\"let wr of data.warehouse_record\" fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n        <p class=\"piece record\">配件：{{wr.component_name}} | {{wr.specification_id}}</p>\n        <p class=\"piece\">应领：{{plan_unit.value * wr.consumption}}</p>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>实领</mat-label>\n          <input matInput [formControlName]=\"wr.specification_id\">\n        </mat-form-field>\n      </li>\n    </ul>\n\n  </form>\n\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\">确认修改</button>\n  <button mat-button (click)=\"onNoClick()\">取消</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTTokenService {\n\n  jwtToken: string = '';\n  decodedToken: { [key: string]: string } = {};\n\n  constructor(\n    public auth: AuthService\n  ) {\n    this.jwtToken = localStorage.getItem('token') || '';\n    this.decodeToken();\n  }\n\n  setToken(token: string): void {\n    if (token) {\n      this.jwtToken = token;\n    }\n  }\n\n  decodeToken(): void {\n    if (this.jwtToken) {\n      this.decodedToken = jwt_decode(this.jwtToken);\n      this.auth.user = {\n        username: this.decodedToken.sub,\n        role: this.decodedToken.role\n      }\n    }\n  }\n\n  getDecodeToken(): any {\n    return jwt_decode(this.jwtToken);\n  }\n\n  getUser(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.sub : null;\n  }\n\n  getRole(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.role : null;\n  }\n\n  getExpiryTime(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.exp : null;\n  }\n\n  isTokenExpired(): boolean {\n    const expiryTime: number = this.getExpiryTime();\n    if (expiryTime) {\n      return ((1000 * expiryTime) - (new Date()).getTime()) < 5000;\n    } else {\n      return false;\n    }\n  }\n\n  clearAll() {\n    this.jwtToken = '';\n    this.decodedToken = {};\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Product} from '../../shared/models/product';\nimport {ProductService} from '../../shared/services/product.service';\n\nclass DialogData {\n  product!: Product\n}\n\n@Component({\n  selector: 'app-edit-product-dialog',\n  templateUrl: './edit-product-dialog.component.html',\n  styleUrls: ['./edit-product-dialog.component.scss']\n})\nexport class EditProductDialogComponent implements OnInit {\n  productGroup!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private productService: ProductService,\n    private formBuilder: FormBuilder,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.productGroup = this.formBuilder.group({\n      id: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      inventory: new FormControl(0, Validators.min(0)),\n      custom: new FormControl(''),\n      notice: new FormControl(''),\n      picture: new FormControl('')\n    });\n    this.productGroup.setValue(this.data.product);\n  }\n\n  onProductInfoConfirm(form: FormGroup) {\n    const updated_prod: Product = {...this.data.product, ...form.value};\n    this.productService.putProduct(updated_prod).subscribe(\n      ret_prod => this.dialogRef.close(ret_prod),\n      error => this.onFailure('更新产品信息')\n    );\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">编辑产品信息</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"productGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>产品序列号</mat-label>\n      <input matInput formControlName=\"id\" [attr.disabled]=\"true\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>产品名称</mat-label>\n      <input matInput formControlName=\"name\">\n      <mat-hint align=\"end\">可以与其他产品重复</mat-hint>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>分类</mat-label>\n      <input matInput formControlName=\"category\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>产品描述</mat-label>\n      <textarea matInput formControlName=\"description\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>库存</mat-label>\n      <input matInput type=\"number\" formControlName=\"inventory\">\n      <mat-hint align=\"end\">默认值为零</mat-hint>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>定制客户</mat-label>\n      <input matInput type=\"text\" formControlName=\"custom\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n  </form>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!productGroup.valid\" (click)=\"onProductInfoConfirm(productGroup)\">确认提交</button>\n  <button mat-button color=\"warn\" (click)=\"dialogRef.close()\">取消</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>create-employee works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-process-complete-dialog',\n  templateUrl: './process-complete-dialog.component.html',\n  styleUrls: ['./process-complete-dialog.component.scss']\n})\nexport class ProcessCompleteDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>process-complete-dialog works!</p>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Buyer} from '../models/buyer';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuyerService {\n\n  constructor(private http: HttpClient) { }\n\n  getBuyers(): Observable<Buyer[]> {\n    return this.http.get<Buyer[]>(`${environment.API_URL}/buyers`)\n  }\n\n  getBuyer(id: number): Observable<Buyer> {\n    return this.http.get<Buyer>(`${environment.API_URL}/buyers/${id}`)\n  }\n\n  getBuyerByCompany(company: string): Observable<Buyer> {\n    return this.http.get<Buyer>(`${environment.API_URL}/buyers/company/${company}`)\n  }\n\n  getBuyerByName(name: string): Observable<Buyer> {\n    return this.http.get<Buyer>(`${environment.API_URL}/buyers/name/${name}`)\n  }\n\n  postBuyer(buyer: Buyer): Observable<Buyer> {\n    return this.http.post<Buyer>(`${environment.API_URL}/buyers`, buyer)\n  }\n\n  putBuyer(buyer: Buyer): Observable<Buyer> {\n    return this.http.put<Buyer>(`${environment.API_URL}/buyers`, buyer)\n  }\n\n  deleteBuyer(buyer_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/buyers/${buyer_id}`)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {VendorService} from '../../shared/services/vendor.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Vendor} from '../../shared/models/vendor';\n\n@Component({\n  selector: 'app-create-vendor-dialog',\n  templateUrl: './create-vendor-dialog.component.html',\n  styleUrls: ['./create-vendor-dialog.component.scss']\n})\nexport class CreateVendorDialogComponent implements OnInit {\n\n  vendorGroup!: FormGroup;\n  newVendor!: Vendor\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateVendorDialogComponent>,\n    private formBuilder: FormBuilder,\n    private vendorService: VendorService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.vendorGroup = this.formBuilder.group({\n      name: new FormControl('', Validators.required),\n      company: new FormControl('', Validators.required),\n      contact: new FormControl(''),\n      payment_period: new FormControl(''),\n      address: new FormControl(''),\n      notice: new FormControl('')\n    })\n  }\n\n  onSubmit(form: FormGroup): void {\n    const newVendor = form.value\n    this.vendorService.postVendor(newVendor).subscribe(\n      res => {\n        this.dialogRef.close(res)\n      },\n      error => {\n        console.log(error);\n        this.onFailure();\n      }\n    )\n  }\n\n  onFailure(): void {\n    this._snackBar.open(`创建失败`, \"关闭\");\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加新供应商</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"vendorGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>联系人名称</mat-label>\n      <input matInput formControlName=\"name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>公司名称</mat-label>\n      <input matInput formControlName=\"company\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>联系电话</mat-label>\n      <input matInput formControlName=\"contact\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>付款周期</mat-label>\n      <input matInput formControlName=\"payment_period\">\n      <mat-hint align=\"end\">仅记录作参考</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>地址</mat-label>\n      <input matInput formControlName=\"address\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <input matInput formControlName=\"notice\">\n    </mat-form-field>\n  </form>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onSubmit(vendorGroup)\" cdkFocusInitial>确认提交</button>\n  <button mat-stroked-button color=\"warn\" (click)=\"onNoClick()\">取消</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JWTTokenService } from './shared/services/jwt-token.service';\nimport { LocalStorageService } from './shared/services/local-storage.service';\nimport {AuthService} from './shared/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizeGuard implements CanActivate {\n  constructor(private authService: AuthService,\n              private authStorageService: LocalStorageService,\n              private jwtService: JWTTokenService,\n              private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.jwtService.getUser() && !this.jwtService.isTokenExpired()) {\n        return true;\n    }\n    this.router.navigateByUrl('/login');\n    return false\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {OverviewComponent} from './overview/overview.component';\nimport {InventoryComponent} from './inventory/inventory.component';\nimport {StockComponent} from './stock/stock.component';\nimport {ManufactureComponent} from './manufacture/manufacture.component';\nimport {AuthorizeGuard} from './auth.guard';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {CreateProductComponent} from './create-product/create-product.component';\nimport {CreateEmployeeComponent} from './create-employee/create-employee.component';\nimport {CreateSpecComponent} from './create-spec/create-spec.component';\nimport {TransmissionComponent} from './transmission/transmission.component';\nimport {VendorListComponent} from './vendor-list/vendor-list.component';\nimport {HistoryComponent} from './manufacture/history/history.component';\nimport {EmployeeComponent} from './employee/employee.component';\nimport {DeliveryComponent} from './delivery/delivery.component';\nimport {BuyerListComponent} from './buyer-list/buyer-list.component';\nimport {SalaryComponent} from './salary/salary.component';\nimport {AdminGuard} from './admin.guard';\nimport {DeprecatedComponent} from './inventory/deprecated/deprecated.component';\nimport {BatchSummaryComponent} from './manufacture/batch-summary/batch-summary.component';\n\nconst routes: Routes = [\n  {\n    path: 'app',\n    component: AppComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  { path: 'overview', component: OverviewComponent, canActivate: [AuthorizeGuard] },\n  { path: 'inventory', component: InventoryComponent, canActivate: [AuthorizeGuard] },\n  { path: 'stock', component: StockComponent, canActivate: [AuthorizeGuard] },\n  { path: 'manufacture', component: ManufactureComponent, canActivate: [AuthorizeGuard] },\n  { path: 'manufacture/:batch_id', component: ManufactureComponent, canActivate: [AuthorizeGuard] },\n  { path: 'batch-summary/:bid', component: BatchSummaryComponent, canActivate: [AuthorizeGuard] },\n  {\n    path: 'history',\n    component: HistoryComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  { path: 'employee', component: EmployeeComponent, canActivate: [AuthorizeGuard, AdminGuard] },\n  { path: 'salary', component: SalaryComponent, canActivate: [AuthorizeGuard, AdminGuard]},\n  {\n    path: 'delivery',\n    component: DeliveryComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  {\n    path: 'buyer',\n    component: BuyerListComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  {\n    path: 'vendors',\n    component: VendorListComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  { path: 'create-product', component: CreateProductComponent, canActivate: [AuthorizeGuard] },\n  { path: 'edit-product/:pid', component: CreateProductComponent, canActivate: [AuthorizeGuard] },\n  { path: 'copy-product/:origin_id/:new_id', component: CreateProductComponent, canActivate: [AuthorizeGuard] },\n  { path: 'deprecated', component: DeprecatedComponent, canActivate: [AuthorizeGuard] },\n  {\n    path: 'create-employee',\n    component: CreateEmployeeComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  {\n    path: 'create-spec',\n    component: CreateSpecComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  {path: 'transmission/:error', component: TransmissionComponent},\n  { path: '',   redirectTo: '/overview', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../shared/services/auth.service';\nimport {Location} from '@angular/common';\nimport {Router} from '@angular/router';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    public auth: AuthService,\n    private location: Location,\n    private fb: FormBuilder,\n    private router: Router,\n    private jwtToken: JWTTokenService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: FormGroup | any): void {\n    console.log(\"sending out login request...\")\n    this.auth.login(form.value || form).subscribe({\n      next: res => {\n        if (res.access_token) {\n          this.jwtToken.setToken(res.access_token);\n          localStorage.setItem ('token', res.access_token);\n          this.jwtToken.decodeToken();\n          console.log(`Login succeed!`);\n          console.log(this.auth.user);\n          this.router.navigateByUrl('/overview');\n          }\n        },\n      error: err => console.log(err)\n    });\n  }\n}\n","<div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"center start\" >\n  <mat-card fxFlex=\"45%\">\n    <mat-card-title>\n      <p class=\"mat-title\">登陆</p>\n    </mat-card-title>\n    <form fxLayout=\"column\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm)\">\n      <mat-form-field appearance=\"outline\">\n        <!--  ngModel + name will let Angular take the form control  -->\n        <mat-label>用户名</mat-label>\n        <input matInput type=\"text\" formControlName=\"username\" required>\n        <!--        <mat-error> Username is required</mat-error>-->\n      </mat-form-field>\n      <p *ngIf=\"loginForm.controls.username.touched && loginForm.controls.username.status !== 'VALID'\"\n         class=\"text-danger\"> Username is required </p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>密码</mat-label>\n        <input matInput type=\"password\" formControlName=\"password\" required>\n        <!--        <mat-error> Password has to be at least 6 characters long </mat-error>-->\n      </mat-form-field>\n      <p *ngIf=\"loginForm.controls.password.touched && loginForm.controls.password.status !== 'VALID'\"\n         class=\"text-danger\"> Password has to be at least 6 characters long </p>\n      <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button [disabled]=\"loginForm.invalid\" mat-raised-button color=\"primary\" type=\"submit\"> 确认 </button>\n      </div>\n    </form>\n  </mat-card>\n\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Work} from '../../shared/models/work';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {Employee} from '../../shared/models/employee';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {map} from 'rxjs/operators';\nimport {Compo} from '../../shared/models/compo';\nimport {WorkSpecification} from '../../shared/models/work-specification';\nimport {WorkService} from '../../shared/services/work.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {WorkSpecificationService} from '../../shared/services/work-specification.service';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {EmployeeService} from '../../shared/services/employee.service';\n\nclass DialogData {\n  bp!: BatchProcess;\n  batch_plan_unit!: number;\n  employees!: Employee[];\n  product_name!: string;\n}\n\n@Component({\n  selector: 'app-create-work-dialog',\n  templateUrl: './create-work-dialog.component.html',\n  styleUrls: ['./create-work-dialog.component.scss']\n})\nexport class CreateWorkDialogComponent implements OnInit {\n  new_work!: Work;\n  batchProcess!: BatchProcess;\n\n  employees: Employee[] = [];\n  employeeOptions!: Observable<Employee[]>;\n  selectedEmployee = new FormControl('');\n\n  workSpecGroup = new FormGroup({});\n  work_date = new FormControl(new Date(), Validators.required);\n  plan_unit = new FormControl(\n    '',\n    [Validators.required, Validators.max(this.data.bp.start_amount ?? this.data.batch_plan_unit), Validators.min(1)]\n  )\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateWorkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    private workService: WorkService,\n    public employeeService: EmployeeService,\n    private wsService: WorkSpecificationService,\n    private specService: SpecService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.batchProcess = this.data.bp;\n    this.employees = this.data.employees;\n    this.employeeOptions = this.selectedEmployee.valueChanges.pipe(\n      map(name => this.employeeAutocompleteFilter(name)));\n    this.batchProcess.warehouse_record?.forEach(\n      wr => this.workSpecGroup.addControl(\n        wr.specification_id,\n        this.formBuilder.control(\n          '',\n          [Validators.required, Validators.min(0)]\n        )\n      )\n    );\n    this.plan_unit.valueChanges.subscribe(value => this.batchProcess.warehouse_record?.forEach(\n      wr => this.workSpecGroup.controls[wr.specification_id].setValidators(\n        [Validators.required, Validators.min(0), Validators.max(value * wr.consumption * 1.1)])\n    ));\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  employeeAutocompleteFilter(value: string): Employee[] {\n    return this.employees.filter(e => e.name.includes(value));\n  }\n\n  onWorkConfirm(): void {\n    const work_specification_array: WorkSpecification[] = [];\n    this.new_work = {\n      complete_hour: 0, complete_unit: 0, hour_pay: 0, unit_pay: 0,\n      batch_process_id: this.batchProcess.id || 0,\n      employee_id: this.selectedEmployee.value.id,\n      employee_name: this.selectedEmployee.value.name,\n      product_name: this.data.product_name,\n      process_name: this.batchProcess.process?.process_name || '',\n      work_date: this.work_date.value,\n      plan_unit: this.plan_unit.value,\n      check: false\n    }\n    this.workService.postWork(this.new_work).subscribe(\n      res_work => {\n        this.batchProcess.warehouse_record?.forEach(\n          wr => {\n            const ws: WorkSpecification = {\n              work_id: res_work.id,\n              specification_id: wr.specification_id,\n              plan_amount: this.plan_unit.value * wr.consumption,\n              actual_amount: this.workSpecGroup.controls[wr.specification_id].value,\n              component_name: wr.component_name,\n              specification_gross_price: wr.specification_gross_price,\n              specification_net_price: wr.specification_net_price\n            }\n            this.wsService.postWorkSpecification(ws).subscribe(\n              res_ws => {\n                work_specification_array.push(res_ws);\n                this.specService.adjustSpecStock(res_ws.specification_id, 0-Number(res_ws.actual_amount)).subscribe();\n              }\n            )\n          }\n        );\n        this.dialogRef.close({...this.new_work, work_specification: work_specification_array});\n      },\n      error => {\n        console.log(error);\n        this.onFailure();\n      }\n    )\n  }\n\n  onSuccess(): void {\n    this._snackBar.open(`创建成功`, \"关闭\");\n  }\n\n  onFailure(): void {\n    this._snackBar.open(`创建失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加参与员工</p>\n</div>\n\n<div mat-dialog-content class=\"nty-percent-fill\">\n  <p>{{batchProcess.process?.process_name}}</p>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>工人</mat-label>\n      <input type=\"text\" matInput [formControl]=\"selectedEmployee\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"this.employeeService.employeeDisplayFn\">\n        <mat-option *ngFor=\"let emp of this.employeeOptions | async\" [value]=\"emp\">\n          {{emp.name}} | {{emp.id}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>领料日期</mat-label>\n      <input matInput [matDatepicker]=\"picker\" [formControl]=\"work_date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\">\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>应完成数量</mat-label>\n      <input type=\"number\" matInput [formControl]=\"plan_unit\">\n    </mat-form-field>\n\n    <mat-divider></mat-divider>\n    <div [formGroup]=\"workSpecGroup\" class=\"fullfill\">\n      <div *ngFor=\"let record of batchProcess.warehouse_record\" class=\"fullfill\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <p fxFlex=\"45\">{{record.component_name}} | 应领：{{plan_unit.value * record.consumption}}</p>\n        <mat-form-field appearance=\"outline\" fxFlex=\"45\">\n          <mat-label>实领</mat-label>\n          <input matInput [formControlName]=\"record.specification_id\">\n          <mat-hint>随后可修改</mat-hint>\n        </mat-form-field>\n      </div>\n    </div>\n\n  </form>\n\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onWorkConfirm()\">确认提交</button>\n  <button mat-button (click)=\"onNoClick()\">结束</button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}