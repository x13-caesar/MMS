{"version":3,"sources":["./src/app/stock/delete-component-dialog/delete-component-dialog.component.ts","./src/app/stock/delete-component-dialog/delete-component-dialog.component.html","./src/app/manufacture/manufacture.component.ts","./src/app/manufacture/manufacture.component.html","./src/app/shared/services/batch-process.service.ts","./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/app/shared/services/work-specification.service.ts","./src/environments/environment.ts","./src/app/overview/overview.component.html","./src/app/overview/overview.component.ts","./src/app/manufacture/complete-work-dialog/complete-work-dialog.component.ts","./src/app/manufacture/complete-work-dialog/complete-work-dialog.component.html","./src/app/operation/operation.component.ts","./src/app/operation/operation.component.html","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/app/shared/util.service.ts","./src/app/shared/services/batch.service.ts","./src/app/create-product/create-product.component.ts","./src/app/create-product/create-product.component.html","./src/app/employee/create-employee-dialog/create-employee-dialog.component.ts","./src/app/employee/create-employee-dialog/create-employee-dialog.component.html","./src/app/stock/edit-component-dialog/edit-component-dialog.component.ts","./src/app/stock/edit-component-dialog/edit-component-dialog.component.html","./src/app/shared/services/auth.service.ts","./src/app/vendor-list/vendor-list.component.ts","./src/app/vendor-list/vendor-list.component.html","./src/app/shared/custom-style.module.ts","./src/app/shared/services/vendor.service.ts","./src/app/shared/services/employee.service.ts","./src/app/shared/services/process.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/warehouse-record.service.ts","./src/app/manufacture/history/history.component.ts","./src/app/manufacture/history/history.component.html","./src/app/shared/services/work.service.ts","./src/app/hr/work-record-dialog/work-record-dialog.component.ts","./src/app/hr/work-record-dialog/work-record-dialog.component.html","./src/app/app.module.ts","./src/app/transmission/transmission.component.ts","./src/app/transmission/transmission.component.html","./src/app/stock/edit-spec-dialog/edit-spec-dialog.component.ts","./src/app/stock/edit-spec-dialog/edit-spec-dialog.component.html","./src/app/manufacture/create-batch-dialog/create-batch-dialog.component.ts","./src/app/manufacture/create-batch-dialog/create-batch-dialog.component.html","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/shared/services/compo.service.ts","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/manufacture/batch-complete-dialog/batch-complete-dialog.component.ts","./src/app/manufacture/batch-complete-dialog/batch-complete-dialog.component.html","./src/app/shared/services/spec.service.ts","./src/app/shared/services/operation.service.ts","./src/app/stock/pull-in-dialog/pull-in-dialog.component.ts","./src/app/stock/pull-in-dialog/pull-in-dialog.component.html","./src/app/create-spec/create-spec.component.ts","./src/app/create-spec/create-spec.component.html","./src/app/stock/stock.component.ts","./src/app/stock/stock.component.html","./src/app/shared/services/product.service.ts","./src/app/shared/services/local-storage.service.ts","./src/app/manufacture/edit-work-dialog/edit-work-dialog.component.ts","./src/app/manufacture/edit-work-dialog/edit-work-dialog.component.html","./src/app/shared/services/jwt-token.service.ts","./src/app/create-employee/create-employee.component.ts","./src/app/create-employee/create-employee.component.html","./src/app/hr/hr.component.ts","./src/app/hr/hr.component.html","./src/app/manufacture/process-complete-dialog/process-complete-dialog.component.ts","./src/app/manufacture/process-complete-dialog/process-complete-dialog.component.html","./src/app/vendor-list/create-vendor-dialog/create-vendor-dialog.component.ts","./src/app/vendor-list/create-vendor-dialog/create-vendor-dialog.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/manufacture/create-work-dialog/create-work-dialog.component.ts","./src/app/manufacture/create-work-dialog/create-work-dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {CompoService} from '../../shared/services/compo.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Compo} from '../../shared/models/compo';\n\nclass DialogData {\n  compo!: Compo\n}\n\n@Component({\n  selector: 'app-delete-component-dialog',\n  templateUrl: './delete-component-dialog.component.html',\n  styleUrls: ['./delete-component-dialog.component.scss']\n})\nexport class DeleteComponentDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteComponentDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private compoService: CompoService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onConfirmDelete(): void {\n    this.compoService.deleteCompo(String(this.data.compo.id)).subscribe(\n      res => this.dialogRef.close(res),\n      error => this._snackBar.open(`删除失败`, \"关闭\")\n    )\n  }\n\n}\n","<h1 mat-dialog-title>删除确认</h1>\n<div mat-dialog-content>\n  <p>确定要删除以下配件信息吗？所有相关规格也将一并删除。</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\" (click)=\"onConfirmDelete()\">确认删除</button>\n  <button mat-button mat-dialog-close>取消</button>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Batch} from '../shared/models/batch';\nimport {BatchService} from '../shared/services/batch.service';\nimport {MatListOption} from '@angular/material/list';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {BatchProcess} from '../shared/models/batch-process';\nimport {Employee} from '../shared/models/employee';\nimport {EmployeeService} from '../shared/services/employee.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateWorkDialogComponent} from './create-work-dialog/create-work-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {ProductService} from '../shared/services/product.service';\nimport {WorkService} from '../shared/services/work.service';\nimport {Work} from '../shared/models/work';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {CompleteWorkDialogComponent} from './complete-work-dialog/complete-work-dialog.component';\nimport {EditWorkDialogComponent} from './edit-work-dialog/edit-work-dialog.component';\nimport {WarehouseRecord} from '../shared/models/warehouse-record';\nimport {BatchProcessService} from '../shared/services/batch-process.service';\nimport {CreateBatchDialogComponent} from './create-batch-dialog/create-batch-dialog.component';\nimport {WarehouseRecordService} from '../shared/services/warehouse-record.service';\nimport {CompoService} from '../shared/services/compo.service';\nimport {UtilService} from '../shared/util.service';\nimport {SpecService} from '../shared/services/spec.service';\n\n@Component({\n  selector: 'app-manufacture',\n  templateUrl: './manufacture.component.html',\n  styleUrls: ['./manufacture.component.scss']\n})\nexport class ManufactureComponent implements OnInit {\n\n  displayedBatches: Batch[] = []\n  selectedBatch!: Batch;\n  selectedBatchProcess!: BatchProcess;\n\n  step = 1;\n\n  specChoiceGroup!: FormGroup;\n  workingEmployees: Employee[] = [];\n\n  constructor(\n    private batchService: BatchService,\n    private formBuilder: FormBuilder,\n    private employeeService: EmployeeService,\n    private productService: ProductService,\n    public dialog: MatDialog,\n    private workService: WorkService,\n    private _snackBar: MatSnackBar,\n    private specService: SpecService,\n    private bpService: BatchProcessService,\n    private wrService: WarehouseRecordService,\n    private compoService: CompoService,\n    private util: UtilService\n  ) { }\n\n  ngOnInit(): void {\n    this.batchService.getUnfinishedBatches().subscribe(\n      res => {\n        this.displayedBatches = res;\n        this.displayedBatches.forEach(b => {\n          this.productService.getProductNameById(b.product_id).subscribe(\n            res => b.product_name = res.name,\n            error => console.log(error)\n          );\n        })\n      },\n      error => console.log(error)\n    );\n    this.employeeService.getEmployeesByStatus('working').subscribe(\n      res => this.workingEmployees = res,\n      error => console.log(error)\n    );\n    this.specChoiceGroup = this.formBuilder.group({});\n  }\n\n  onBatchChange(options: MatListOption[]) {\n    // map these MatListOptions to their values\n    this.selectedBatch = options[0].value;\n    this.step = this.selectedBatch.batch_process.find(bp => bp.status === 'ongoing')?.process?.process_order || 1;\n    this.specChoiceGroup = new FormGroup({});\n  }\n\n  updateSpecChoiceGroup(bp: BatchProcess): void {\n    // this.selectedBatchProcess = bp;\n    this.specChoiceGroup = this.formBuilder.group({});\n    bp.process?.process_component.forEach(\n      pc => {\n        this.specChoiceGroup.addControl(pc.component_id, this.formBuilder.control('', Validators.required));\n      }\n    );\n    if (bp.warehouse_record && bp.warehouse_record.length > 0) {\n      bp.warehouse_record.forEach(wr => {\n        const compo_id = wr.component_id;\n        const spec_id = wr.specification_id;\n        const selectedSpec = bp.process?.process_component.find(pc => pc.component_id === compo_id)?.component?.specification?.find(spec => spec.id === spec_id)\n        this.specChoiceGroup.controls[compo_id].setValue(selectedSpec);\n      });\n      this.specChoiceGroup.disable();\n    } else {\n      this.specChoiceGroup.enable();\n    }\n  }\n\n  onConfirmSpecs(bp: BatchProcess): void {\n    bp.process?.process_component.forEach(pc => {\n      const wr: WarehouseRecord = {\n        batch_process_id: Number(bp.id),\n        component_id: pc.component_id,\n        component_name: pc.component?.name || '',\n        consumption: pc.consumption || 1,\n        specification_id: this.specChoiceGroup.controls[pc.component_id].value.id\n      };\n      this.wrService.postWarehouseRecord(wr).subscribe(\n        res => bp.warehouse_record?.push(res),\n        error => {\n          console.log(error);\n          this.onFailure('确认领料规格')\n        }\n      )\n    });\n    this.onSuccess('确认领料规格');\n    this.specChoiceGroup.disable();\n  }\n\n  onEditSpecs(bp: BatchProcess): void {\n    const new_wr_array: WarehouseRecord[] = [];\n    bp.warehouse_record?.forEach(wr => {\n      wr.specification_id = this.specChoiceGroup.controls[wr.component_id].value.id;\n      this.wrService.putWarehouseRecord(wr).subscribe(\n        res => new_wr_array.push(res),\n        error => {\n          console.log(error);\n          this.onFailure('修改领料规格')\n        }\n      )\n    });\n    bp.warehouse_record = new_wr_array;\n    this.rerenderBatch(bp.batch_id);\n    this.onSuccess('修改领料规格');\n    this.specChoiceGroup.disable();\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  openCreateWorkDialog(bp: BatchProcess): void {\n    const dialogRef = this.dialog.open(CreateWorkDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {bp: bp, employees: this.workingEmployees}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      new_work => {\n        this.rerenderBatch(bp.batch_id);\n      }\n    );\n  }\n\n  openEditWorkDialog(work: Work, wr_array: WarehouseRecord[], unit_limit: number): void {\n    const specWithdrawsBefore = new Map();\n    work.work_specification?.forEach(\n      ws => specWithdrawsBefore.set(ws.specification_id, ws.actual_amount))\n    const dialogRef = this.dialog.open(EditWorkDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {work: work, warehouse_record: wr_array, max_amount: unit_limit}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      updated_work => updated_work && this.workService.putWork(updated_work).subscribe(\n        res => {\n          res.work_specification?.forEach(nws => {\n            const adjust_number = specWithdrawsBefore.get(nws.specification_id) - Number(nws.actual_amount);\n            this.specService.adjustSpecStock(nws.specification_id, adjust_number).subscribe();\n          });\n          this.rerenderBatch(Number(this.selectedBatch.id));\n          this.onSuccess('修改工人领料');\n        },\n        error => {\n          this.onFailure('修改工人领料');\n          console.log(error);\n        }));\n  }\n\n  openCompleteWorkDialog(work: Work): void {\n    const dialogRef = this.dialog.open(CompleteWorkDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH,\n      data: {work: work}\n    });\n\n    dialogRef.afterClosed().subscribe(\n      updated_work => this.workService.putWork(updated_work).subscribe(\n        res => {\n          this.rerenderBatch(Number(this.selectedBatch.id));\n          this.onSuccess('确认完成');\n        },\n        error => {\n          console.log(error);\n          this.onFailure('确认完成');\n          return work;\n        }) && updated_work\n    );\n  }\n\n  openCreateBatchDialog(): void {\n    const dialogRef = this.dialog.open(CreateBatchDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH\n    });\n    dialogRef.afterClosed().subscribe(\n      new_batch => {\n        this.displayedBatches.push(new_batch);\n        this.onSuccess('创建生产批次');\n      }\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n  checkAllWorkDone(works: Work[]): boolean {\n    return !!works.length && works.every(w => w.complete_unit && w.complete_unit > 0)\n  }\n\n  checkAllBatchProcessDone(bps: BatchProcess[]): boolean {\n    return bps.every(bp => bp.status === 'finished');\n  }\n\n  completeBatchProcess(bp: BatchProcess): void {\n    const complete_bp = {...bp}\n    // @ts-ignore\n    complete_bp.end_amount = complete_bp.work?.reduce((acc, w) => {\n      return acc + Number(w.complete_unit);\n    }, 0);\n    complete_bp.status = 'finished';\n    this.bpService.putBatchProcess(complete_bp).subscribe(\n      res => {\n        this.rerenderBatch(complete_bp.batch_id);\n        this.onSuccess('修改工艺状态');\n      },\n      error => {\n        this.onFailure('修改工艺状态');\n        console.log(error)\n      }\n    )\n  }\n\n  completeBatch(batch: Batch): void {\n    const updated_batch = {...batch}\n    updated_batch.actual_amount = batch.batch_process[batch.batch_process.length - 1].end_amount\n    updated_batch.status = 'finished';\n    updated_batch.end = this.util.mysqlDatetimeTransformer(new Date());\n    this.batchService.putBatch(updated_batch).subscribe(\n      res => {\n        this.productService.adjustProductInventory(batch.product_id, Number(batch.actual_amount)).subscribe()\n        this.onSuccess(`批次${res.id}完工确认`);\n      },\n      error => {\n        this.onFailure(`批次${batch.id}完工确认`);\n        console.log(error)\n      }\n    )\n  }\n\n  startBatchProcess(bp: BatchProcess, batch: Batch): void {\n    const updated_bp = {...bp}\n    updated_bp.status = 'ongoing';\n    const current_order = updated_bp.process?.process_order;\n    if (current_order === 1) {\n      updated_bp.start_amount = batch.plan_amount;\n    } else {\n      updated_bp.start_amount = batch.batch_process.find(bp => bp.process?.process_order === (Number(current_order) - 1))?.end_amount;\n    }\n    this.bpService.putBatchProcess(updated_bp).subscribe(\n      res => {\n        this.rerenderBatch(Number(this.selectedBatch.id));\n        this.onSuccess('修改工艺状态');\n      },\n      error => {\n        this.onFailure('修改工艺状态');\n        console.log(error)\n      }\n    )\n  }\n\n  rerenderBatch(batch_id: number): void {\n    this.batchService.getBatch(Number(batch_id)).subscribe(\n      updated_batch => {\n        const target_idx = this.displayedBatches.findIndex(b => b.id === batch_id);\n        this.displayedBatches[target_idx] = {...this.displayedBatches[target_idx], ...updated_batch};\n        this.selectedBatch = this.displayedBatches[target_idx];\n      }\n    )\n  }\n\n  sortedBatchProcesses(bp_array: BatchProcess[]): BatchProcess[] {\n    return bp_array.sort((a, b) => (Number(a.process?.process_order) - Number(b.process?.process_order)))\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container\">\n    <button mat-button class=\"call\" (click)=\"openCreateBatchDialog()\"> 创建新生产批次 </button>\n    <button mat-button class=\"call\" routerLink=\"/history\"> 历史生产批次 </button>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"fullfill\">\n    <mat-card fxFlex=\"40\">\n      <mat-card-header>\n        <mat-card-title> 生产批次列表 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-selection-list #unfinished [multiple]=\"false\" (selectionChange)=\"onBatchChange(unfinished.selectedOptions.selected)\">\n          <mat-list-option *ngFor=\"let batch of displayedBatches\" [value]=\"batch\">\n            {{batch.product_name}} | {{batch.plan_amount}}件 | 排产：{{batch.start | date:\"YYYY/MM/dd\" }}\n          </mat-list-option>\n        </mat-selection-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card *ngIf=\"selectedBatch && selectedBatch.id\" fxFlex=\"60\">\n      <mat-card-header>\n        <p class=\"mat-title highlight\">批次：{{selectedBatch.id}}</p>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-accordion class=\"example-headers-align\">\n          <mat-expansion-panel\n            [expanded]=\"step === (bp.process?.process_order || 1)\"\n            (opened)=\"setStep(bp.process?.process_order || 1);updateSpecChoiceGroup(bp)\"\n            hideToggle\n            *ngFor=\"let bp of sortedBatchProcesses(selectedBatch.batch_process)\">\n            <mat-expansion-panel-header *ngIf=\"bp.process\">\n              <mat-panel-title>\n                工艺{{bp.process.process_order}} - {{bp.process.process_name}}\n              </mat-panel-title>\n              <mat-panel-description>\n                状态：{{bp.status}}\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"meta-info\" *ngIf=\"bp.process && bp.process.process_order === step\">\n              <p class=\"info\"> 预计数量：{{bp.start_amount || '尚未开始'}} | 完成数量：{{bp.end_amount || '尚未完成'}}</p>\n              <p class=\"subtitle\"> 采用配件： </p>\n              <div class=\"greyborder distance\">\n                <p *ngIf=\"!bp.process.process_component || bp.process.process_component.length === 0\"> 无需配件 </p>\n                <div *ngFor=\"let pc of bp.process.process_component\">\n                  <form [formGroup]=\"specChoiceGroup\"\n                      class=\"flex-container\">\n                    <div *ngIf=\"pc.component\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"fullfill\">\n                      <p> {{pc.component.name}} * {{pc.consumption}} </p>\n                      <mat-form-field>\n                        <mat-label> 选择具体使用规格 </mat-label>\n                        <mat-select [formControlName]=\"pc.component.id || ''\">\n                          <mat-option *ngFor=\"let spec of pc.component.specification\" [value]=\"spec\">\n                            {{spec.id}} | {{spec.vendor?.company}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                  </form>\n                </div>\n                <button mat-button class=\"call\"\n                        *ngIf=\"bp.process.process_component && bp.process.process_component.length > 0 && !(bp.warehouse_record && bp.warehouse_record.length > 0)\"\n                        [disabled]=\"specChoiceGroup.invalid\"\n                        (click)=\"onConfirmSpecs(bp)\">确认领料规格</button>\n                <button mat-button class=\"action\"\n                        *ngIf=\"bp.process.process_component && bp.process.process_component.length > 0 && !!(bp.warehouse_record && bp.warehouse_record.length > 0) && (specChoiceGroup.status === 'DISABLED')\"\n                        (click)=\"specChoiceGroup.enable()\">修改领料规格</button>\n                <button mat-button class=\"call\"\n                        *ngIf=\"!!(bp.warehouse_record && bp.warehouse_record.length > 0) && !(specChoiceGroup.status === 'DISABLED')\"\n                        [disabled]=\"specChoiceGroup.invalid\"\n                        (click)=\"onEditSpecs(bp)\">确认修改</button>\n              </div>\n            </div>\n\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <div class=\"work-info\">\n              <p class=\"subtitle\"> 领料记录： </p>\n              <div class=\"greyborder distance work\" *ngIf=\"!bp.work || bp.work.length === 0\"> <p>无领料记录</p> </div>\n              <div *ngIf=\"!!bp.work\">\n                <div *ngFor=\"let work of bp.work\" class=\"greyborder distance work\">\n                  <p> {{work.employee_name}} ({{work.employee_id}}) | {{work.work_date | date:\"YYYY/MM/dd\"}}</p>\n                  <p *ngFor=\"let ws of work.work_specification\">\n                    {{ws.specification_id}} 实领 {{ws.actual_amount}} (应领：{{ws.plan_amount}})\n                  </p>\n                  <div class=\"flex-container\">\n                    <button mat-raised-button color=\"accent\"\n                            [disabled]=\"!bp.warehouse_record\"\n                            (click)=\"openEditWorkDialog(work, bp.warehouse_record || [], bp.start_amount || 0);rerenderBatch(selectedBatch.id)\" *ngIf=\"!work.complete_unit\">\n                      编辑该工人领料</button>\n                    <button mat-raised-button color=\"primary\"\n                            (click)=\"openCompleteWorkDialog(work)\"\n                            *ngIf=\"!work.complete_unit\">\n                      标记完成</button>\n                    <button mat-button color=\"primary\" *ngIf=\"!!work.complete_unit\" disabled>已完成</button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"flex-container\">\n                <button mat-raised-button\n                        color=\"accent\"\n                        (click)=\"openCreateWorkDialog(bp)\"\n                        [disabled]=\"!(!bp.process?.process_component || !!bp.warehouse_record)\">添加参与工人</button>\n                <button mat-raised-button\n                        color=\"primary\"\n                        (click)=\"completeBatchProcess(bp)\"\n                        [disabled]=\"!checkAllWorkDone(bp.work || [])\"\n                        *ngIf=\"bp.status === 'ongoing'\">确认工艺完成</button>\n                <button mat-raised-button\n                        color=\"primary\"\n                        *ngIf=\"bp.status === 'finished'\" disabled>工艺已完成</button>\n                <button mat-raised-button\n                        color=\"primary\"\n                        (click)=\"startBatchProcess(bp, selectedBatch);rerenderBatch(selectedBatch.id)\"\n                        *ngIf=\"bp.status === 'unstarted'\">开始该工艺</button>\n              </div>\n            </div>\n\n            <mat-action-row *ngIf=\"selectedBatch.batch_process\">\n              <button mat-button color=\"warn\" (click)=\"prevStep()\" *ngIf=\"step > 1\">前一步</button>\n              <button mat-button color=\"primary\" (click)=\"nextStep()\" *ngIf=\"step <= selectedBatch.batch_process.length\">后一步</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n        </mat-accordion>\n\n        <div class=\"button-container\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n          <button mat-raised-button [disabled]=\"checkAllBatchProcessDone(selectedBatch.batch_process)\" (click)=\"completeBatch(selectedBatch)\">确认批次完工</button>\n        </div>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {BatchProcess} from '../models/batch-process';\nimport {environment} from '../../../environments/environment';\nimport {Batch} from '../models/batch';\nimport {ProcessService} from './process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatchProcessService {\n\n  constructor(\n    private http: HttpClient,\n    private processService: ProcessService,\n    ) { }\n\n  getBatchProcessById(id: number): Observable<BatchProcess> {\n    return this.http.get<BatchProcess>(`${environment.API_URL}/batch_process/${id}`)\n  }\n\n  postBatchProcess(bp: BatchProcess): Observable<BatchProcess> {\n    return this.http.post<BatchProcess>(`${environment.API_URL}/batch_process`, bp)\n  }\n\n  postBatchProcessesByBatch(batch: Batch): BatchProcess[] {\n    const bp_array: BatchProcess[] = []\n    this.processService.getProcessesByProductId(batch.product_id).subscribe(\n      processes => {\n        processes.forEach(p => {\n          const bp: BatchProcess = {batch_id: Number(batch.id), process_id: Number(p.id), status: 'unstarted'};\n          this.postBatchProcess(bp).subscribe(\n            bp => bp_array.push(bp)\n          )})\n      }\n    )\n    return bp_array;\n  }\n\n  putBatchProcess(bp: BatchProcess): Observable<BatchProcess> {\n    return this.http.put<BatchProcess>(`${environment.API_URL}/batch_process`, bp)\n  }\n}\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Employee} from '../shared/models/employee';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {EmployeeService} from '../shared/services/employee.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {environment} from '../../environments/environment';\nimport {CreateEmployeeDialogComponent} from './create-employee-dialog/create-employee-dialog.component';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss']\n})\nexport class EmployeeComponent implements OnInit, AfterViewInit{\n  displayedColumns: string[] = [\n    'id', 'name', 'gender', 'phone',\n    'ssn', 'department', 'notice', 'edit'\n  ];\n\n  searchKeyword = new FormControl('')\n  employees: Employee[] = [];\n  dataSource: any;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  constructor(\n    private employeeService: EmployeeService,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.employeeService.getEmployees().subscribe(\n      res => {\n        this.employees = res;\n        this.dataSource = new MatTableDataSource<Employee>(this.employees);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    );\n    this.searchKeyword.valueChanges.subscribe(\n      kw => {\n        this.dataSource = new MatTableDataSource<Employee>(this.employeeSearchFilter(kw));\n        this.dataSource.paginator = this.paginator;\n      })\n  }\n\n  openCreateEmployeeDialog(): void {\n    const dialogRef = this.dialog.open(CreateEmployeeDialogComponent, {\n      width: environment.SMALL_DIALOG_WIDTH\n    });\n\n    dialogRef.afterClosed().subscribe(new_employee => {\n      this.employees.push(new_employee);\n      this.dataSource = new MatTableDataSource<Employee>(this.employees);\n    });\n  }\n\n  employeeSearchFilter(keyword: string): Employee[] {\n    return keyword\n      ? this.employees.filter(\n        employee => employee.name.includes(keyword) || (employee.notice && employee.notice.includes(keyword)))\n      : this.employees\n  }\n\n  onEmployeeSubmit(employee: Employee): void {\n    this.employeeService.putEmployee(employee).subscribe(\n      res => this.onSuccess('修改员工信息'),\n      error => this.onFailure('修改员工信息')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <mat-form-field appearance=\"standard\" class=\"field-search\">\n      <mat-label>搜索</mat-label>\n      <input matInput type=\"text\" [formControl]=\"searchKeyword\">\n    </mat-form-field>\n    <button mat-button class=\"call\" (click)=\"openCreateEmployeeDialog()\"> 添加新员工 </button>\n  </div>\n\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\"\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedColumns\">\n        <th mat-header-cell *matHeaderCellDef>{{col.toUpperCase()}}</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit\"><mat-icon>edit</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              {{element[col]}}\n            </span>\n          </div>\n          <div *ngIf=\"element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col === 'edit'; else dataField\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit; onEmployeeSubmit(element);\"><mat-icon>done</mat-icon></button>\n            </div>\n            <ng-template #dataField>\n              <mat-form-field>\n                <mat-label>{{col}}</mat-label>\n                <input [type]=\"'text'\" matInput [(ngModel)]=\"element[col]\">\n              </mat-form-field>\n            </ng-template>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {WorkSpecification} from '../models/work-specification';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkSpecificationService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getWorkSpecifications(): Observable<WorkSpecification[]> {\n    return this.http.get<WorkSpecification[]>(`${environment.API_URL}/work_specification`)\n  }\n\n  getWorkSpecificationById(work_specification_id: number): Observable<WorkSpecification> {\n    return this.http.get<WorkSpecification>(`${environment.API_URL}/work_specification/${work_specification_id}`)\n  }\n\n  getWorkSpecificationsByWorkId(work_id: number): Observable<WorkSpecification[]> {\n    return this.http.get<WorkSpecification[]>(`${environment.API_URL}/work_specification/employee_id/${work_id}`)\n  }\n\n  postWorkSpecification(work_specification: WorkSpecification): Observable<WorkSpecification> {\n    return this.http.post<WorkSpecification>(`${environment.API_URL}/work_specification`, work_specification)\n  }\n\n  putWorkSpecification(work_specification: WorkSpecification): Observable<WorkSpecification> {\n    return this.http.put<WorkSpecification>(`${environment.API_URL}/work_specification`, work_specification)\n  }\n\n  deleteWorkSpecification(work_specification_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/work_specification/${work_specification_id}`)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://47.96.104.221:81',\n  SMALL_DIALOG_WIDTH: '40%',\n  MEDIAN_DIALOG_WIDTH: '60%',\n  LARGE_DIALOG_WIDTH: '80%'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div>\n  <div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div class=\"row-container\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n      <button mat-button class=\"call\" [routerLink]=\"['/create-batch']\"> 创建生产批次 </button>\n      <button mat-button class=\"call\" > 交付产品 </button>\n      <button mat-button class=\"action\" [routerLink]=\"'/create-product'\"> 创建新产品 </button>\n      <button mat-button class=\"action\"> 更新工资 </button>\n    </div>\n  </div>\n  <div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div class=\"row-container\" fxLayout=\"column\" fxLayoutAlign=\"start\">\n      <mat-card class=\"column\">\n        <mat-card-title>\n          <p>未完成批次</p>\n        </mat-card-title>\n        <mat-card-content>\n          <p class=\"info mat-title\" *ngIf=\"!ongoing_batches && !plan_batches\"> 没有未完成的生产批次 </p>\n          <mat-list>\n            <div mat-subheader>生产中</div>\n            <mat-list-item *ngFor=\"let batch of ongoing_batches\">\n              <mat-icon mat-list-icon>folder</mat-icon>\n              <div mat-line>{{batch.product_name}} * {{batch.plan_amount}}</div>\n              <div mat-line> {{batch.start | date}} </div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <div mat-subheader>未开始</div>\n            <mat-list-item *ngFor=\"let batch of plan_batches\">\n              <mat-icon mat-list-icon>note</mat-icon>\n              <div mat-line>{{batch.product_name}} * {{batch.plan_amount}}</div>\n              <div mat-line> {{batch.start | date}} </div>\n            </mat-list-item>\n          </mat-list>\n        </mat-card-content>\n\n      </mat-card>\n    </div>\n    <div class=\"row-container\" fxLayout=\"column\" fxLayoutAlign=\"start\">\n      <mat-card class=\"column\">\n        <mat-card-title> 库存预警 </mat-card-title>\n        <mat-card-content>\n          <h5>Starting from 04/01</h5>\n          <p> Total Earning: $<b>420.00</b></p>\n          <p> Avg Review Score: <b>4.8/5.0</b></p>\n        </mat-card-content>\n      </mat-card>\n      <mat-card class=\"column\">\n        <mat-card-title> 近期操作 </mat-card-title>\n        <mat-card-content>\n          <h5>Starting from 04/01</h5>\n          <p> Total Earning: $<b>420.00</b></p>\n          <p> Avg Review Score: <b>4.8/5.0</b></p>\n        </mat-card-content>\n      </mat-card>\n\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {BatchService} from '../shared/services/batch.service';\nimport {OperationService} from '../shared/services/operation.service';\nimport {Batch} from '../shared/models/batch';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n  ongoing_batches!: Batch[]\n  plan_batches!: Batch[]\n\n  constructor(\n    private batchService: BatchService,\n    private operationService: OperationService\n  ) { }\n\n  ngOnInit(): void {\n    this.batchService.getBatchesByStatus('ongoing').subscribe(\n      batches => {\n        this.ongoing_batches = batches\n      },\n      error => {console.log(error)}\n    );\n    this.batchService.getBatchesByStatus('unstarted').subscribe(\n      batches => {\n        this.plan_batches = batches\n      },\n      error => {console.log(error)}\n    )\n  }\n\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Work} from '../../shared/models/work';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {map} from 'rxjs/operators';\n\nclass DialogData {\n  work!: Work;\n}\n\nclass method {\n  method!: string;\n  display!: string\n}\n\n@Component({\n  selector: 'app-complete-work-dialog',\n  templateUrl: './complete-work-dialog.component.html',\n  styleUrls: ['./complete-work-dialog.component.scss']\n})\nexport class CompleteWorkDialogComponent implements OnInit {\n  workCompleteGroup!: FormGroup;\n  methodCtrl = new FormControl('', Validators.required);\n  methods: method[] = [{method: 'complete_unit', display: '计件'}, {method: 'complete_hour', display: '计时'}]\n\n  constructor(\n    public dialogRef: MatDialogRef<CompleteWorkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.workCompleteGroup = this.formBuilder.group({\n      complete_unit: new FormControl('', Validators.required),\n      complete_hour: new FormControl(null)\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirm(): void {\n    const return_work: Work = {...this.data.work, ...this.workCompleteGroup.value};\n    this.dialogRef.close(return_work)\n  }\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">确认完成</p>\n</div>\n\n<div mat-dialog-content>\n  <label id=\"example-radio-group-label\">酬劳计算方式</label>\n  <mat-radio-group [formControl]=\"methodCtrl\">\n    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let m of methods\" [value]=\"m.method\">\n      {{m.display}}\n    </mat-radio-button>\n  </mat-radio-group>\n\n  <form [formGroup]=\"workCompleteGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>实际完成件数</mat-label>\n      <input type=\"number\" matInput formControlName=\"complete_unit\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" *ngIf=\"methodCtrl.value === 'complete_hour'\">\n      <mat-label>工作小时</mat-label>\n      <input type=\"number\" matInput formControlName=\"complete_hour\" [disabled]=\"methodCtrl.value === 'complete_unit'\">\n      <mat-hint>只有按小时计酬时需要填写</mat-hint>\n    </mat-form-field>\n  </form>\n\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">取消</button>\n  <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">确认完成</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operation',\n  templateUrl: './operation.component.html',\n  styleUrls: ['./operation.component.scss']\n})\nexport class OperationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>operation works!</p>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {Product} from '../shared/models/product';\nimport {ProductService} from '../shared/services/product.service';\nimport {Observable} from 'rxjs';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnInit, AfterViewInit {\n\n  displayedColumns: string[] = [\n    'id', 'name', 'category', 'description',\n    'last_produce', 'inventory', 'picture', 'notice'\n  ];\n\n  products: Product[] = []\n  dataSource: any\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    private productService: ProductService\n  ) { }\n\n  ngOnInit(): void {\n    this.productService.getProducts().subscribe(\n      res => {\n        this.products = res;\n        this.dataSource = new MatTableDataSource<Product>(res);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    )\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n  // dataSource = new productDataSource(this.productService);\n\n}\n\nexport class productDataSource extends DataSource<Product> {\n\n  constructor(\n    private productService: ProductService\n  ) {\n    super();\n  }\n\n  connect(): Observable<Product[]> {\n    return this.productService.getProducts();\n  }\n\n  disconnect() {}\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container\">\n    <button mat-button class=\"call\" [routerLink]=\"['/create-product']\"> 创建新产品 </button>\n    <button mat-button class=\"action\"> 查看交付记录 </button>\n  </div>\n\n  <div class=\"mat-elevation-z8 data-table\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedColumns\">\n        <th mat-header-cell *matHeaderCellDef>\n          <span *ngIf=\"col !== 'edit' && col !== 'delete'\">\n            {{col.toUpperCase()}}\n          </span>\n        </th>\n        <td mat-cell *matCellDef=\"let element\">{{element[col]}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of products\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n\n  </div>\n\n\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor() { }\n\n  mysqlDatetimeParser(dateString: string): Date {\n    return new Date(dateString.replace(' ', 'T'))\n  }\n\n  mysqlDatetimeTransformer(date: Date): string {\n    return date.toISOString().slice(0, 19).replace('T', ' ')\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Batch} from '../models/batch';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatchService {\n\n  constructor(private http: HttpClient) { }\n\n  getBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch`)\n  }\n\n  getBatch(id: number): Observable<Batch> {\n    return this.http.get<Batch>(`${environment.API_URL}/batch/${id}`)\n  }\n\n  getBatchesByStatus(status: string): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/status/${status}`)\n  }\n\n  getUnfinishedBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/unfinished`)\n  }\n\n  getCollectedBatches(): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${environment.API_URL}/batch/collected`)\n  }\n\n  postBatch(batch: Batch): Observable<Batch> {\n    return this.http.post<Batch>(`${environment.API_URL}/batch`, batch)\n  }\n\n  putBatch(batch: Batch): Observable<Batch> {\n    return this.http.put<Batch>(`${environment.API_URL}/batch`, batch)\n  }\n\n\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ProductService} from '../shared/services/product.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Product} from '../shared/models/product';\nimport {Compo} from '../shared/models/compo';\nimport {Observable} from 'rxjs';\nimport {CompoService} from '../shared/services/compo.service';\nimport {map} from 'rxjs/operators';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {Process} from '../shared/models/process';\nimport {ProcessComponent} from '../shared/models/process-component';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.scss']\n})\nexport class CreateProductComponent implements OnInit {\n  productGroup!: FormGroup\n  newProduct!: Product;\n\n  processGroup!: FormGroup\n  processOfProduct: Process[] = []\n\n  processCompoGroup!: FormGroup\n  composOfProcess: Compo[] = []\n\n  compos: Compo[] = [];\n  compoOptions!: Observable<Compo[]>;\n  selectedCompo = new FormControl();\n\n  // MAT chip list params\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @ViewChild('compoInput') compoInput!: ElementRef<HTMLInputElement>;\n\n  constructor(\n    private productService: ProductService,\n    private compoService: CompoService,\n    private _snackBar: MatSnackBar,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.productGroup = this.formBuilder.group({\n      id: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      inventory: new FormControl(0, Validators.min(0)),\n      notice: new FormControl(''),\n      picture: new FormControl('')\n    });\n    this.processGroup = this.formBuilder.group({\n      process_name: new FormControl('', Validators.required),\n      process_order: new FormControl('', Validators.required),\n      notice: new FormControl('')\n    });\n    this.processCompoGroup = this.formBuilder.group({\n      component_id: new FormControl('', Validators.required),\n      attrition_rate: new FormControl(0.001)\n    });\n    this.productGroup.valueChanges.subscribe(product => this.newProduct = product);\n    this.compoService.getCompos().subscribe(\n      res => this.compos = res,\n      error => console.log(error)\n    );\n    this.compoOptions = this.selectedCompo.valueChanges\n      .pipe(\n        map((c : string | null) => c ? this.compoAutocompleteFilter(c) : this.compos.slice())\n      );\n  }\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      // @ts-ignore\n      this.composOfProcess.push(value);\n    }\n\n    this.selectedCompo.setValue(null);\n  }\n\n  remove(compo: Compo): void {\n    const index = this.composOfProcess.indexOf(compo);\n\n    if (index >= 0) {\n      this.composOfProcess.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.composOfProcess.push(event.option.value);\n    this.compoInput.nativeElement.value = '';\n    this.selectedCompo.setValue(null);\n  }\n\n  removeProcess(process: Process): void {\n    const index = this.processOfProduct.indexOf(process);\n\n    if (index >= 0) {\n      this.processOfProduct.splice(index, 1);\n    }\n  }\n\n  onProductSubmit(form: FormGroup): void {\n    this.newProduct = {...this.newProduct, ...form.value}\n  }\n\n  onProcessSubmit(form: FormGroup): void {\n    const newProcess: Process = form.value;\n    newProcess.process_component = this.composOfProcess.map(\n      compo => {\n        const pc: ProcessComponent = {\n          component_id: compo.id || 'placeholder',\n          attrition_rate: 0.001,\n          component_name: compo.name\n        }\n        return pc;\n      })\n    this.processOfProduct.push(newProcess);\n    this.processGroup.reset();\n    this.selectedCompo.reset();\n    this.composOfProcess = [];\n  }\n\n  onFinalSubmit(): void {\n    console.log(\"Sending out the new product...\")\n    this.newProduct.process = this.processOfProduct;\n    console.log(this.newProduct)\n    this.productService.postProduct(this.newProduct).subscribe(\n        res => { res.success ? this.onSuccess() : this.onFailure(); },\n        error => this.onFailure()\n      )\n  }\n\n  onSuccess(): void {\n    this._snackBar.open(\"创建成功\", \"关闭\");\n  }\n\n  onFailure(): void {\n    this._snackBar.open(\"创建失败\", \"关闭\");\n  }\n\n  compoAutocompleteFilter(value: string): Compo[] {\n    return this.compos.filter(c => c.name.includes(value));\n  }\n\n  compoDisplayFn(compo: Compo): string {\n    return compo && compo.name ? `${compo.name} | ${compo.id}` : '';\n  }\n}\n","<div>\n  <div class=\"sub-header\">\n    <p class=\"mat-title\">创建产品</p>\n  </div>\n  <div  class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n    <mat-card class=\"new-product\">\n      <mat-card-header>\n        <mat-card-title> 新产品 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"productGroup\" (ngSubmit)=\"onProductSubmit(productGroup)\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>产品序列号</mat-label>\n            <input matInput formControlName=\"id\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>产品名称</mat-label>\n            <input matInput formControlName=\"name\">\n            <mat-hint align=\"end\">可以与其他产品重复</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>分类</mat-label>\n            <input matInput formControlName=\"category\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>产品描述</mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>初始库存</mat-label>\n            <input matInput type=\"number\" formControlName=\"inventory\">\n            <mat-hint align=\"end\">默认值为零</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n\n          <div class=\"button-container\">\n            <button mat-raised-button color=\"accent\" type=\"submit\" [disabled]=\"!productGroup.valid\">确认/更新产品信息</button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"process\">\n      <mat-card-header>\n        <mat-card-title> 产品工艺 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"processGroup\" (ngSubmit)=\"onProcessSubmit(processGroup)\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>工艺名称</mat-label>\n            <input matInput formControlName=\"process_name\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>工艺顺序</mat-label>\n            <input type=\"number\" matInput formControlName=\"process_order\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>所需配件</mat-label>\n            <mat-chip-list #chipList aria-label=\"Fruit selection\">\n              <mat-chip\n                *ngFor=\"let compo of composOfProcess\"\n                [selectable]=\"selectable\"\n                [removable]=\"removable\"\n                (removed)=\"remove(compo)\">\n                {{compo.name}} | {{compo.id}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n              </mat-chip>\n              <input\n                matInput\n                placeholder=\"所需配件...\"\n                #compoInput\n                [formControl]=\"selectedCompo\"\n                [matAutocomplete]=\"auto\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                (matChipInputTokenEnd)=\"add($event)\">\n            </mat-chip-list>\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"compoDisplayFn\" (optionSelected)=\"selected($event)\">\n              <mat-option *ngFor=\"let compo of this.compoOptions | async\" [value]=\"compo\">\n                {{compo.name}} | {{compo.id}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n\n          <div class=\"button-container\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!productGroup.valid\">确认添加该工艺</button>\n          </div>\n          </form>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"submit-info\">\n      <mat-card-header>\n        <mat-card-title> 提交信息预览</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div *ngIf=\"this.newProduct\" fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n          <div fxLayout=\"column\" fxLayoutAlign=\"start start\" >\n            <p class=\"info\"> 产品序列号： {{this.newProduct.id}}</p>\n            <p class=\"info\"> 产品名称：{{this.newProduct.name}} </p>\n            <p class=\"info\"> 产品分类：{{this.newProduct.category}} </p>\n            <p class=\"info\"> 工艺：</p>\n          </div>\n          <mat-accordion class=\"process-list-display\">\n            <mat-expansion-panel hideToggle *ngFor=\"let process of processOfProduct\">\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  {{process.process_name}}\n                </mat-panel-title>\n                <mat-panel-description>\n                  顺序：{{process.process_order}}\n                </mat-panel-description>\n              </mat-expansion-panel-header>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n                <mat-chip-list aria-label=\"Fish selection\">\n                  <mat-chip color=\"accent\" *ngFor=\"let pc of process.process_component\">{{pc.component_name}} | {{pc.component_id}}</mat-chip>\n                </mat-chip-list>\n                <button mat-icon-button (click)=\"removeProcess(process)\">\n                  删除该工艺\n                  <mat-icon>delete</mat-icon>\n                </button>\n              </div>\n            </mat-expansion-panel>\n          </mat-accordion>\n          <div class=\"button-container\">\n            <button mat-raised-button class=\"action\" (click)=\"onFinalSubmit()\" [disabled]=\"!productGroup.valid\">确认提交新产品</button>\n          </div>\n        </div>\n      </mat-card-content>\n\n    </mat-card>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Employee} from '../../shared/models/employee';\nimport {EmployeeService} from '../../shared/services/employee.service';\n\n@Component({\n  selector: 'app-create-employee-dialog',\n  templateUrl: './create-employee-dialog.component.html',\n  styleUrls: ['./create-employee-dialog.component.scss']\n})\nexport class CreateEmployeeDialogComponent implements OnInit {\n\n  employeeGroup!: FormGroup;\n  newEmployee!: Employee\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateEmployeeDialogComponent>,\n    private formBuilder: FormBuilder,\n    private employeeService: EmployeeService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.employeeGroup = this.formBuilder.group({\n      name: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      birth: new FormControl(''),\n      phone: new FormControl('', Validators.required),\n      ssn: new FormControl(''),\n      department: new FormControl(''),\n      notice: new FormControl('')\n    })\n  }\n\n  onSubmit(form: FormGroup): void {\n    const newEmployee = {...form.value, status: 'working', onboard: new Date()};\n    console.log(newEmployee);\n    this.employeeService.postEmployee(newEmployee).subscribe(\n      res => {\n        this.dialogRef.close(res)\n      },\n      error => {\n        console.log(error);\n        this.onFailure();\n      }\n    )\n  }\n\n  onFailure(): void {\n    this._snackBar.open(`创建失败`, \"关闭\");\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加新员工</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"employeeGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>姓名</mat-label>\n      <input matInput type=\"text\" formControlName=\"name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>性别</mat-label>\n      <mat-select formControlName=\"gender\">\n        <mat-option value=\"女\">女</mat-option>\n        <mat-option value=\"男\">男</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>出生年月</mat-label>\n      <input matInput [matDatepicker]=\"picker1\" formControlName=\"birth\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>联系方式</mat-label>\n      <input matInput type=\"text\" formControlName=\"phone\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>身份证号</mat-label>\n      <input matInput  type=\"text\" formControlName=\"ssn\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>部门</mat-label>\n      <input matInput  type=\"text\" formControlName=\"department\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n  </form>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onSubmit(employeeGroup)\" cdkFocusInitial>确认提交</button>\n  <button mat-stroked-button color=\"warn\" (click)=\"onNoClick()\">取消</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Compo} from '../../shared/models/compo';\nimport {Observable} from 'rxjs';\nimport {Vendor} from '../../shared/models/vendor';\nimport {CompoService} from '../../shared/services/compo.service';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {VendorService} from '../../shared/services/vendor.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nclass DialogData {\n  compo!: Compo\n}\n\n@Component({\n  selector: 'app-edit-component-dialog',\n  templateUrl: './edit-component-dialog.component.html',\n  styleUrls: ['./edit-component-dialog.component.scss']\n})\nexport class EditComponentDialogComponent implements OnInit {\n  compoGroup!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditComponentDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    private compoService: CompoService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.compoGroup = this.formBuilder.group({\n      id: new FormControl(''),\n      name: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      material: new FormControl(''),\n      description: new FormControl(''),\n      expiration: new FormControl(''),\n      unit_weight: new FormControl(''),\n      warn_stock: new FormControl(1000, Validators.min(0)),\n      notice: new FormControl(''),\n      picture: new FormControl('')\n    });\n    this.compoGroup.setValue(this.data.compo);\n  }\n\n  onCompoInfoConfirm(form: FormGroup): void {\n    const updated_compo: Compo = {...form.value};\n    updated_compo.id = this.data.compo.id;\n    console.log(updated_compo);\n    this.compoService.putCompo(updated_compo).subscribe(\n      res => {\n        this.dialogRef.close(res);\n      },\n      error => {\n        this.onFailure('配件信息修改');\n        console.log(error);\n      }\n    )\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">编辑配件</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"compoGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>配件名称</mat-label>\n      <input matInput formControlName=\"name\">\n      <mat-hint align=\"end\">可以与其他产品重复</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>分类</mat-label>\n      <input matInput formControlName=\"category\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>材质</mat-label>\n      <input matInput type=\"text\" formControlName=\"material\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>配件描述</mat-label>\n      <!--          <input matInput formControlName=\"description\">-->\n      <textarea matInput formControlName=\"description\"></textarea>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>保存期限</mat-label>\n      <input matInput type=\"text\" formControlName=\"expiration\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>单位重量</mat-label>\n      <input matInput type=\"text\" formControlName=\"unit_weight\">\n      <mat-hint align=\"end\">默认值为零</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>警示库存</mat-label>\n      <input matInput type=\"number\" formControlName=\"warn_stock\">\n      <mat-hint align=\"end\">默认值为1000</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <!--          <input matInput formControlName=\"notice\">-->\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n  </form>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!compoGroup.valid\" (click)=\"onCompoInfoConfirm(compoGroup)\">确认提交</button>\n  <button mat-button color=\"warn\" (click)=\"dialogRef.close()\">取消</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {User} from '../models/user';\nimport {environment} from '../../../environments/environment';\nimport jwt_decode from 'jwt-decode';\nimport {JWTTokenService} from './jwt-token.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user: any = null;\n\n  constructor(\n    private http: HttpClient,\n    private jwtTokenService: JWTTokenService\n  ) {\n  }\n\n  login(user: any): Observable<{ access_token: string, token_type: string }> {\n    const userFormData = new HttpParams()\n      .append('username', user.username)\n      .append('password', user.password);\n    return this.http.post<{ access_token: string, token_type: string }>(\n      `${environment.API_URL}/token`, userFormData,\n      {withCredentials: true});\n  }\n\n}\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {Product} from '../shared/models/product';\nimport {Vendor} from '../shared/models/vendor';\nimport {VendorService} from '../shared/services/vendor.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateVendorDialogComponent} from './create-vendor-dialog/create-vendor-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {FormControl} from '@angular/forms';\n\nconst SCHEMA = {\n  \"id\": \"text\",\n  \"name\": \"text\",\n  \"company\": \"text\",\n  \"payment_period\": \"text\",\n  \"contact\": \"text\",\n  \"address\": \"text\",\n  \"notice\": \"text\"\n}\n\n@Component({\n  selector: 'app-vendor-list',\n  templateUrl: './vendor-list.component.html',\n  styleUrls: ['./vendor-list.component.scss']\n})\nexport class VendorListComponent implements OnInit, AfterViewInit{\n  displayedColumns: string[] = [\n    'id', 'name', 'company', 'payment_period',\n    'contact', 'address', 'notice', 'edit', 'delete'\n  ];\n\n  searchKeyword = new FormControl('')\n  vendors: Vendor[] = [];\n  dataSource: any;\n  dataSchema = SCHEMA;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  constructor(\n    private vendorService: VendorService,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.vendorService.getVendors().subscribe(\n      res => {\n        this.vendors = res;\n        this.dataSource = new MatTableDataSource<Vendor>(this.vendors);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => console.log(error)\n    );\n    this.searchKeyword.valueChanges.subscribe(\n      kw => {\n        this.dataSource = new MatTableDataSource<Vendor>(this.vendorSearchFilter(kw));\n        this.dataSource.paginator = this.paginator;\n      })\n  }\n\n  openCreateVendorDialog(): void {\n    const dialogRef = this.dialog.open(CreateVendorDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH\n    });\n\n    dialogRef.afterClosed().subscribe(new_vendor => {\n      this.vendors.push(new_vendor);\n      this.dataSource = new MatTableDataSource<Vendor>(this.vendors);\n    });\n  }\n\n  vendorSearchFilter(keyword: string): Vendor[] {\n    return keyword\n      ? this.vendors.filter(\n        vendor => vendor.company.includes(keyword) || vendor.name.includes(keyword) || (vendor.notice && vendor.notice.includes(keyword)))\n      : this.vendors\n  }\n\n  onVendorSubmit(vendor: Vendor): void {\n    this.vendorService.putVendor(vendor).subscribe(\n      res => this.onSuccess('修改供应商'),\n      error => this.onFailure('修改供应商')\n    )\n  }\n\n  onVendorDelete(vendor: Vendor): void {\n    this.vendorService.deleteVendor(Number(vendor.id)).subscribe(\n      res => {\n        const target = this.vendors.findIndex(v => v.id === vendor.id);\n        if (target > -1) {\n          this.vendors.splice(target, 1);\n          this.dataSource = new MatTableDataSource<Vendor>(this.vendors);\n        }\n        this.onSuccess('删除供应商');\n      },\n      error => this.onFailure('删除供应商')\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <mat-form-field appearance=\"standard\" class=\"field-search\">\n      <mat-label>搜索</mat-label>\n      <input matInput type=\"text\" [formControl]=\"searchKeyword\">\n    </mat-form-field>\n    <button mat-button class=\"call\" (click)=\"openCreateVendorDialog()\"> 添加新供应商 </button>\n  </div>\n\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\"\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedColumns\">\n        <th mat-header-cell *matHeaderCellDef>{{col.toUpperCase()}}</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"!element.isEdit\">\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit\"><mat-icon>edit</mat-icon></button>\n            </div>\n            <div class=\"btn-delete\" *ngIf=\"col ==='delete' ; spanHeader\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit\"><mat-icon>delete</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              {{element[col]}}\n            </span>\n          </div>\n          <div *ngIf=\"element.isEdit && (col !== 'delete')\">\n            <div class=\"btn-edit\" *ngIf=\"col === 'edit'; else dataField\">\n              <button mat-icon-button (click)=\"element.isEdit = !element.isEdit; onVendorSubmit(element);\"><mat-icon>done</mat-icon></button>\n            </div>\n            <ng-template #dataField>\n              <mat-form-field>\n                <mat-label>{{col}}</mat-label>\n                <input [type]=\"'text'\" matInput [(ngModel)]=\"element[col]\">\n              </mat-form-field>\n            </ng-template>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    FlexLayoutModule,\n    MatGridListModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatChipsModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    FlexLayoutModule,\n    MatGridListModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatChipsModule\n  ]\n})\n\nexport class CustomStyleModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Vendor} from '../models/vendor';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VendorService {\n\n  constructor(private http: HttpClient) { }\n\n  getVendors(): Observable<Vendor[]> {\n    return this.http.get<Vendor[]>(`${environment.API_URL}/vendors`)\n  }\n\n  getVendorById(vendor_id: number): Observable<Vendor> {\n    return this.http.get<Vendor>(`${environment.API_URL}/vendors/${vendor_id}`)\n  }\n\n  postVendor(vendor: Vendor): Observable<Vendor> {\n    return this.http.post<Vendor>(`${environment.API_URL}/vendors`, vendor)\n  }\n\n  putVendor(vendor: Vendor): Observable<Vendor> {\n    return this.http.put<Vendor>(`${environment.API_URL}/vendors/${String(vendor.id)}`, vendor)\n  }\n\n  deleteVendor(vendor_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/vendors/${String(vendor_id)}`)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Employee} from '../models/employee';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${environment.API_URL}/employee`)\n  }\n\n  getEmployeesByStatus(status: string): Observable<Employee[]> {\n  return this.http.get<Employee[]>(`${environment.API_URL}/employee/status/${status}`)\n}\n\n  getEmployee(id: number): Observable<Employee> {\n    return this.http.get<Employee>(`${environment.API_URL}/employee/${String(id)}`)\n  }\n\n  getEmployeesByName(name: string): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${environment.API_URL}/employee/name/${name}`)\n  }\n\n  postEmployee(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(`${environment.API_URL}/employee`, employee)\n  }\n\n  putEmployee(employee: Employee): Observable<Employee> {\n    return this.http.put<Employee>(`${environment.API_URL}/employee`, employee)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Process} from '../models/process';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessService {\n\n  constructor(private http: HttpClient) { }\n\n  getProcessesByProductId(product_id: number): Observable<Process[]> {\n    return this.http.get<Process[]>(`${environment.API_URL}/process/product_id/${product_id}`)\n  }\n\n  getProcessById(id: number): Observable<Process> {\n    return this.http.get<Process>(`${environment.API_URL}/process/${id}`)\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'yfmms';\n}\n","<app-header></app-header>\n<mat-divider></mat-divider>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {WarehouseRecord} from '../models/warehouse-record';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseRecordService {\n  target_url = `${environment.API_URL}/warehouse_record`\n\n  constructor(private http: HttpClient) { }\n\n  getWarehouseRecordsByBatchProcessId(bp_id: number): Observable<WarehouseRecord[]> {\n    return this.http.get<WarehouseRecord[]>(`${this.target_url}/batch_process_id/${bp_id}`)\n  }\n\n  postWarehouseRecord(wr: WarehouseRecord): Observable<WarehouseRecord> {\n    return this.http.post<WarehouseRecord>(`${this.target_url}`, wr)\n  }\n\n  putWarehouseRecord(wr: WarehouseRecord): Observable<WarehouseRecord> {\n    return this.http.put<WarehouseRecord>(`${this.target_url}`, wr)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Batch} from '../../shared/models/batch';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Employee} from '../../shared/models/employee';\nimport {BatchService} from '../../shared/services/batch.service';\nimport {EmployeeService} from '../../shared/services/employee.service';\nimport {ProductService} from '../../shared/services/product.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {WorkService} from '../../shared/services/work.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {SpecService} from '../../shared/services/spec.service';\nimport {BatchProcessService} from '../../shared/services/batch-process.service';\nimport {WarehouseRecordService} from '../../shared/services/warehouse-record.service';\nimport {CompoService} from '../../shared/services/compo.service';\nimport {UtilService} from '../../shared/util.service';\nimport {MatListOption} from '@angular/material/list';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent implements OnInit {\n\n  displayedBatches: Batch[] = []\n  selectedBatch!: Batch;\n  selectedBatchProcess!: BatchProcess;\n\n  step = 1;\n\n  specChoiceGroup!: FormGroup;\n\n  constructor(\n    private batchService: BatchService,\n    private formBuilder: FormBuilder,\n    private employeeService: EmployeeService,\n    private productService: ProductService,\n  ) { }\n\n\n  ngOnInit(): void {\n    this.batchService.getCollectedBatches().subscribe(\n      res => {\n        this.displayedBatches = res;\n        this.displayedBatches.forEach(b => {\n          this.productService.getProductNameById(b.product_id).subscribe(\n            res => b.product_name = res.name,\n            error => console.log(error)\n          );\n        })\n      },\n      error => console.log(error)\n    );\n    this.specChoiceGroup = this.formBuilder.group({});\n  }\n\n  onBatchChange(options: MatListOption[]) {\n    // map these MatListOptions to their values\n    this.selectedBatch = options[0].value;\n    this.step = this.selectedBatch.batch_process.find(bp => bp.status === 'ongoing')?.process?.process_order || 1;\n    this.specChoiceGroup = new FormGroup({});\n  }\n\n  updateSpecChoiceGroup(bp: BatchProcess): void {\n    // this.selectedBatchProcess = bp;\n    this.specChoiceGroup = this.formBuilder.group({});\n    bp.process?.process_component.forEach(\n      pc => {\n        this.specChoiceGroup.addControl(pc.component_id, this.formBuilder.control('', Validators.required));\n      }\n    );\n    if (bp.warehouse_record && bp.warehouse_record.length > 0) {\n      bp.warehouse_record.forEach(wr => {\n        const compo_id = wr.component_id;\n        const spec_id = wr.specification_id;\n        const selectedSpec = bp.process?.process_component.find(pc => pc.component_id === compo_id)?.component?.specification?.find(spec => spec.id === spec_id)\n        this.specChoiceGroup.controls[compo_id].setValue(selectedSpec);\n      });\n      this.specChoiceGroup.disable();\n    } else {\n      this.specChoiceGroup.enable();\n    }\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  sortedBatchProcesses(bp_array: BatchProcess[]): BatchProcess[] {\n    return bp_array.sort((a, b) => (Number(a.process?.process_order) - Number(b.process?.process_order)))\n  }\n\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"fullfill\">\n    <mat-card fxFlex=\"40\">\n      <mat-card-header>\n        <mat-card-title> 生产批次列表 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-selection-list #unfinished [multiple]=\"false\" (selectionChange)=\"onBatchChange(unfinished.selectedOptions.selected)\">\n          <mat-list-option *ngFor=\"let batch of displayedBatches\" [value]=\"batch\">\n            {{batch.product_name}} | {{batch.plan_amount}}件 | 排产：{{batch.start | date:\"YYYY/MM/dd\" }}\n          </mat-list-option>\n        </mat-selection-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card *ngIf=\"selectedBatch && selectedBatch.id\" fxFlex=\"60\">\n      <mat-card-header>\n        <p class=\"mat-title highlight\">批次：{{selectedBatch.id}}</p>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-accordion class=\"example-headers-align\">\n          <mat-expansion-panel\n            [expanded]=\"step === (bp.process?.process_order || 1)\"\n            (opened)=\"setStep(bp.process?.process_order || 1);updateSpecChoiceGroup(bp)\"\n            hideToggle\n            *ngFor=\"let bp of sortedBatchProcesses(selectedBatch.batch_process)\">\n            <mat-expansion-panel-header *ngIf=\"bp.process\">\n              <mat-panel-title>\n                工艺{{bp.process.process_order}} - {{bp.process.process_name}}\n              </mat-panel-title>\n              <mat-panel-description>\n                状态：{{bp.status}}\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"meta-info\" *ngIf=\"bp.process && bp.process.process_order === step\">\n              <p class=\"info\"> 预计数量：{{bp.start_amount || '尚未开始'}} | 完成数量：{{bp.end_amount || '尚未完成'}}</p>\n              <p class=\"subtitle\"> 采用配件： </p>\n              <div class=\"greyborder distance\">\n                <p *ngIf=\"!bp.process.process_component || bp.process.process_component.length === 0\"> 无需配件 </p>\n                <div *ngFor=\"let pc of bp.process.process_component\">\n                  <form [formGroup]=\"specChoiceGroup\"\n                        class=\"flex-container\">\n                    <div *ngIf=\"pc.component\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"fullfill\">\n                      <p> {{pc.component.name}} * {{pc.consumption}} </p>\n                      <mat-form-field>\n                        <mat-select [formControlName]=\"pc.component.id || ''\">\n                          <mat-option *ngFor=\"let spec of pc.component.specification\" [value]=\"spec\">\n                            {{spec.id}} | {{spec.vendor?.company}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <div class=\"work-info\">\n              <p class=\"subtitle\"> 领料记录： </p>\n              <div class=\"greyborder distance work\" *ngIf=\"!bp.work || bp.work.length === 0\"> <p>无领料记录</p> </div>\n              <div *ngIf=\"!!bp.work\">\n                <div *ngFor=\"let work of bp.work\" class=\"greyborder distance work\">\n                  <p> {{work.employee_name}} ({{work.employee_id}}) | {{work.work_date | date:\"YYYY/MM/dd\"}}</p>\n                  <p *ngFor=\"let ws of work.work_specification\">\n                    {{ws.specification_id}} 实领 {{ws.actual_amount}} (应领：{{ws.plan_amount}})\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <mat-action-row *ngIf=\"selectedBatch.batch_process\">\n              <button mat-button color=\"warn\" (click)=\"prevStep()\" *ngIf=\"step > 1\">前一步</button>\n              <button mat-button color=\"primary\" (click)=\"nextStep()\" *ngIf=\"step <= selectedBatch.batch_process.length\">后一步</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n        </mat-accordion>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Work} from '../models/work';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getWorks(): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work`)\n  }\n\n  getWorkNameById(id: number): Observable<any> {\n    return this.http.get<any>(`${environment.API_URL}/work/only_name/${id}`)\n  }\n\n  getWorkById(work_id: number): Observable<Work> {\n    return this.http.get<Work>(`${environment.API_URL}/work/${work_id}`)\n  }\n\n  getWorksByEmployeeId(employee_id: number): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/employee_id/${employee_id}`)\n  }\n\n  getWorksInDateRange(after: Date, before: Date): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/work_date/${after}/${before}`)\n  }\n\n  getWorksByEmployeeIdAndWorkDate(employee_id: number, after: Date, before: Date): Observable<Work[]> {\n    return this.http.get<Work[]>(`${environment.API_URL}/work/employee_id_and_work_date/${employee_id}/${after}/${before}`)\n  }\n\n  postWork(work: Work): Observable<Work> {\n    return this.http.post<Work>(`${environment.API_URL}/work`, work)\n  }\n\n  putWork(work: Work): Observable<Work> {\n    return this.http.put<Work>(`${environment.API_URL}/work`, work)\n  }\n\n  deleteWork(work_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/work/${work_id}`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-work-record-dialog',\n  templateUrl: './work-record-dialog.component.html',\n  styleUrls: ['./work-record-dialog.component.scss']\n})\nexport class WorkRecordDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>work-record-dialog works!</p>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { OverviewComponent } from './overview/overview.component';\nimport { TransmissionComponent } from './transmission/transmission.component';\nimport { ManufactureComponent } from './manufacture/manufacture.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { HrComponent } from './hr/hr.component';\nimport { ProcessCompleteDialogComponent } from './manufacture/process-complete-dialog/process-complete-dialog.component';\nimport { BatchCompleteDialogComponent } from './manufacture/batch-complete-dialog/batch-complete-dialog.component';\nimport { CreateSpecComponent } from './create-spec/create-spec.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { WorkRecordDialogComponent } from './hr/work-record-dialog/work-record-dialog.component';\nimport { StockComponent } from './stock/stock.component';\nimport { PullInDialogComponent } from './stock/pull-in-dialog/pull-in-dialog.component';\nimport { LoginComponent } from './login/login.component';\nimport { AccountComponent } from './account/account.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CustomStyleModule} from './shared/custom-style.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport { OperationComponent } from './operation/operation.component';\nimport { VendorListComponent } from './vendor-list/vendor-list.component';\nimport { CreateVendorDialogComponent } from './vendor-list/create-vendor-dialog/create-vendor-dialog.component';\nimport { CreateWorkDialogComponent } from './manufacture/create-work-dialog/create-work-dialog.component';\nimport { EditWorkDialogComponent } from './manufacture/edit-work-dialog/edit-work-dialog.component';\nimport { CompleteWorkDialogComponent } from './manufacture/complete-work-dialog/complete-work-dialog.component';\nimport { CreateBatchDialogComponent } from './manufacture/create-batch-dialog/create-batch-dialog.component';\nimport { HistoryComponent } from './manufacture/history/history.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EditComponentDialogComponent } from './stock/edit-component-dialog/edit-component-dialog.component';\nimport { DeleteComponentDialogComponent } from './stock/delete-component-dialog/delete-component-dialog.component';\nimport { EditSpecDialogComponent } from './stock/edit-spec-dialog/edit-spec-dialog.component';\nimport { CreateEmployeeDialogComponent } from './employee/create-employee-dialog/create-employee-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    OverviewComponent,\n    TransmissionComponent,\n    ManufactureComponent,\n    InventoryComponent,\n    HrComponent,\n    ProcessCompleteDialogComponent,\n    BatchCompleteDialogComponent,\n    CreateSpecComponent,\n    CreateProductComponent,\n    CreateEmployeeComponent,\n    WorkRecordDialogComponent,\n    StockComponent,\n    PullInDialogComponent,\n    LoginComponent,\n    AccountComponent,\n    OperationComponent,\n    VendorListComponent,\n    CreateVendorDialogComponent,\n    CreateWorkDialogComponent,\n    EditWorkDialogComponent,\n    CompleteWorkDialogComponent,\n    CreateBatchDialogComponent,\n    HistoryComponent,\n    EmployeeComponent,\n    EditComponentDialogComponent,\n    DeleteComponentDialogComponent,\n    EditSpecDialogComponent,\n    CreateEmployeeDialogComponent\n  ],\n    imports: [\n      HttpClientModule,\n      BrowserModule,\n      AppRoutingModule,\n      BrowserAnimationsModule,\n      MatDividerModule,\n      ReactiveFormsModule,\n      CustomStyleModule,\n      FormsModule,\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-transmission',\n  templateUrl: './transmission.component.html',\n  styleUrls: ['./transmission.component.scss']\n})\nexport class TransmissionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>transmission works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-spec-dialog',\n  templateUrl: './edit-spec-dialog.component.html',\n  styleUrls: ['./edit-spec-dialog.component.scss']\n})\nexport class EditSpecDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-spec-dialog works!</p>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Batch} from '../../shared/models/batch';\nimport {ProductService} from '../../shared/services/product.service';\nimport {Product} from '../../shared/models/product';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {BatchService} from '../../shared/services/batch.service';\nimport {BatchProcessService} from '../../shared/services/batch-process.service';\nimport {ProcessService} from '../../shared/services/process.service';\nimport {Process} from '../../shared/models/process';\nimport {BatchProcess} from '../../shared/models/batch-process';\n\nclass DialogData {\n}\n\n@Component({\n  selector: 'app-create-batch-dialog',\n  templateUrl: './create-batch-dialog.component.html',\n  styleUrls: ['./create-batch-dialog.component.scss']\n})\nexport class CreateBatchDialogComponent implements OnInit {\n  batchGroup!: FormGroup;\n  products: Product[] = [];\n  productOptions!: Observable<Product[]>;\n  returnBatch: Batch | null = null;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateBatchDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private batchService: BatchService,\n    private bpService: BatchProcessService,\n    private processService: ProcessService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.productService.getProducts().subscribe(\n      res => this.products = res,\n      error => console.log(error))\n    this.batchGroup = this.formBuilder.group({\n      product_id: new FormControl(null, Validators.required),\n      plan_amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n      start: new FormControl('', Validators.required),\n      notice: new FormControl('')\n    })\n    this.productOptions = this.batchGroup.controls['product_id'].valueChanges.pipe(\n      map(input => this.productAutocompleteFilter(input)));\n  }\n\n  productAutocompleteFilter(input: string): Product[] {\n    return this.products.filter(p => p.name.includes(input) || String(p.id).startsWith(input))\n  }\n\n  productDisplayFn(product: Product): string {\n    return product ? `${product.name} | ${product.id}` : ''\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onBatchSubmit(form: FormGroup): void {\n    const now = new Date();\n    const product_name = form.value.product_id.name;\n    const new_batch: Batch = {...form.value, product_id: form.value.product_id.id};\n    new_batch.create = now;\n    new_batch.status = new_batch.start > now ? 'unstarted' : 'ongoing'\n    this.batchService.postBatch(new_batch).subscribe(\n      returnBatch => {\n        this.returnBatch = {...returnBatch, batch_process: this.bpService.postBatchProcessesByBatch(returnBatch), product_name: product_name};\n        this.dialogRef.close(this.returnBatch);\n      },\n      error => {\n        console.log(error);\n        this.onFailure('创建生产批次');\n      }\n    )\n  }\n\n  onSuccess(eventString: string): void {\n    this._snackBar.open(`${eventString}成功`, \"关闭\");\n  }\n\n  onFailure(eventString: string): void {\n    this._snackBar.open(`${eventString}失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加参与员工</p>\n</div>\n\n<div mat-dialog-content>\n  <form [formGroup]=\"batchGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>生产产品</mat-label>\n      <input matInput formControlName=\"product_id\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"productDisplayFn\">\n        <mat-option *ngFor=\"let p of this.productOptions | async\" [value]=\"p\">\n          {{p.name}} | {{p.id}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>计划生产数量</mat-label>\n      <input matInput type=\"number\" formControlName=\"plan_amount\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>开工日期</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"start\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\">\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>备注</mat-label>\n      <textarea matInput formControlName=\"notice\"></textarea>\n    </mat-form-field>\n  </form>\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onBatchSubmit(batchGroup)\">确认提交</button>\n  <button mat-button (click)=\"onNoClick()\">结束</button>\n</div>\n","<nav class=\"topnav\">\n  <a>雍傅数字化生产管理系统</a>\n  <a class=\"nav-link\" routerLink=\"/overview\" routerLinkActive=\"active\">总览</a>\n  <a class=\"nav-link\" routerLink=\"/manufacture\" routerLinkActive=\"active\">生产</a>\n\n  <a class=\"nav-link\" routerLink=\"/inventory\" routerLinkActive=\"active\">产品</a>\n\n  <a class=\"nav-link\" routerLink=\"/stock\" routerLinkActive=\"active\">配件</a>\n\n  <a class=\"nav-link\" routerLink=\"/employee\" routerLinkActive=\"active\">人员</a>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" >\n    <p class=\"whiteout\">欢迎，{{this.jwtTokenService.decodedToken.sub}}</p>\n    <button mat-stroked-button class=\"action navbar-login nav-link\" *ngIf=\"!auth.user; else logoutTemplate\" routerLink=\"/login\" routerLinkActive=\"active\"> 登陆 </button>\n    <ng-template #logoutTemplate>\n      <button mat-stroked-button class=\"action pointer navbar-login nav-link\"> Logout </button>\n    </ng-template>\n  </div>\n\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../shared/services/auth.service';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    public auth: AuthService,\n    public jwtTokenService: JWTTokenService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Product} from '../models/product';\nimport {environment} from '../../../environments/environment';\nimport {Compo} from '../models/compo';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompoService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCompos(): Observable<Compo[]> {\n    return this.http.get<Compo[]>(`${environment.API_URL}/components`)\n  }\n\n  getCompo(id: string): Observable<Compo> {\n    return this.http.get<Compo>(`${environment.API_URL}/components/${id}`)\n  }\n\n  postCompo(compo: Compo): Observable<Compo> {\n    return this.http.post<Compo>(`${environment.API_URL}/components`, compo)\n  }\n\n  putCompo(compo: Compo): Observable<Compo> {\n    return this.http.put<Compo>(`${environment.API_URL}/components`, compo)\n  }\n\n  deleteCompo(compo_id: string): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/components/${compo_id}`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>account works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-batch-complete-dialog',\n  templateUrl: './batch-complete-dialog.component.html',\n  styleUrls: ['./batch-complete-dialog.component.scss']\n})\nexport class BatchCompleteDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>batch-complete-dialog works!</p>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {Spec} from '../models/spec';\nimport {PostResponse} from '../models/post-response'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpecService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getSpecs(): Observable<Spec[]> {\n    return this.http.get<Spec[]>(`${environment.API_URL}/specifications`)\n  }\n\n  getSpecById(specification_id: string): Observable<Spec> {\n    return this.http.get<Spec>(`${environment.API_URL}/specifications/${specification_id}`)\n  }\n\n  getSpecsByCompoId(compo_id: string): Observable<Spec[]> {\n    return this.http.get<Spec[]>(`${environment.API_URL}/specifications/component_id/${compo_id}`)\n  }\n\n  adjustSpecStock(spec_id: string, adjust_number: number): Observable<Spec> {\n    return this.http.put<Spec>(`${environment.API_URL}/specifications/adjust_stock/${spec_id}/${adjust_number}`, null)\n  }\n\n  postSpec(spec: Spec): Observable<Spec> {\n    return this.http.post<Spec>(`${environment.API_URL}/specifications/`, spec)\n  }\n\n  putSpec(spec: Spec): Observable<Spec> {\n    return this.http.put<Spec>(`${environment.API_URL}/specifications/`, spec)\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pull-in-dialog',\n  templateUrl: './pull-in-dialog.component.html',\n  styleUrls: ['./pull-in-dialog.component.scss']\n})\nexport class PullInDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pull-in-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CompoService} from '../shared/services/compo.service';\nimport {SpecService} from '../shared/services/spec.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Vendor} from '../shared/models/vendor';\nimport {Compo} from '../shared/models/compo';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {VendorService} from '../shared/services/vendor.service';\nimport {CreateVendorDialogComponent} from '../vendor-list/create-vendor-dialog/create-vendor-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-create-spec',\n  templateUrl: './create-spec.component.html',\n  styleUrls: ['./create-spec.component.scss']\n})\nexport class CreateSpecComponent implements OnInit {\n  showCreateSpec: Boolean = false;\n\n  compoGroup!: FormGroup;\n  specGroup!: FormGroup;\n\n  compos: Compo[] = [];\n  compoOptions!: Observable<Compo[]>;\n  selectedCompo = new FormControl('', Validators.required);\n\n  vendors: Vendor[] = [];\n  vendorOptions!: Observable<Vendor[]>;\n  selectedVendor = new FormControl('', Validators.required);\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private compoService: CompoService,\n    private specService: SpecService,\n    private vendorService: VendorService,\n    private _snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.compoGroup = this.formBuilder.group({\n      name: new FormControl('', Validators.required),\n      category: new FormControl('', Validators.required),\n      material: new FormControl(''),\n      description: new FormControl(''),\n      expiration: new FormControl(''),\n      unit_weight: new FormControl(''),\n      warn_stock: new FormControl(1000, Validators.min(0)),\n      notice: new FormControl(''),\n      picture: new FormControl('')\n    });\n\n    this.specGroup = this.formBuilder.group({\n      id: new FormControl('', Validators.required),\n      gross_price: new FormControl(''),\n      net_price: new FormControl(''),\n      stock: new FormControl(0),\n      blueprint: new FormControl(''),\n      notice: new FormControl('')\n    });\n\n    this.compoService.getCompos().subscribe(\n      res => this.compos = res,\n      error => console.log(error)\n    );\n    this.vendorService.getVendors().subscribe(\n      res => this.vendors = res,\n      error => console.log(error)\n    );\n\n    this.compoOptions = this.selectedCompo.valueChanges\n      .pipe(\n        map(c => this.compoAutocompleteFilter(c))\n      );\n    this.vendorOptions = this.selectedVendor.valueChanges\n      .pipe(\n        map(v => this.vendorAutocompleteFilter(v))\n      );\n  }\n\n  compoAutocompleteFilter(value: string): Compo[] {\n    return this.compos.filter(c => c.name.includes(value));\n  }\n\n  vendorAutocompleteFilter(value: string): Vendor[] {\n    return this.vendors.filter(v => (v.name.includes(value) || v.company.includes(value)));\n  }\n\n  compoDisplayFn(compo: Compo): string {\n    return compo && compo.name ? `${compo.name} | ${compo.id}` : '';\n  }\n\n  vendorDisplayFn(vendor: Vendor): string {\n    return vendor && vendor.name ? `${vendor.name} | ${vendor.company}` : '';\n  }\n\n  onCompoSubmit(form: FormGroup): void {\n    console.log(\"Sending out the new product...\")\n    this.compoService.postCompo(form.value).subscribe(\n      res => {\n        this.onSuccess('新配件');\n        form.reset();\n        },\n      error => {\n        this.onFailure('新配件');\n        console.log(error);\n      }\n    )\n  }\n\n  onSpecSubmit(form: FormGroup): void {\n    const spec = form.value;\n    spec['component_id'] = this.selectedCompo.value.id;\n    spec['vendor_id'] = this.selectedVendor.value.id;\n    console.log(spec);\n    this.specService.postSpec(form.value).subscribe(\n      res => {\n        this.onSuccess('新供应商规格');\n        form.reset();\n        },\n      error => {\n        this.onFailure('新供应商规格')\n        console.log(error);\n      }\n    );\n  }\n\n  openCreateVendorDialog(): void {\n    const dialogRef = this.dialog.open(CreateVendorDialogComponent, {\n      width: environment.MEDIAN_DIALOG_WIDTH\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.vendors.push(result);\n    });\n  }\n\n  onSuccess(obj: string): void {\n    this._snackBar.open(`创建${obj}成功`, \"关闭\");\n  }\n\n  onFailure(obj: string): void {\n    this._snackBar.open(`创建${obj}失败`, \"关闭\");\n  }\n\n}\n","<div>\n  <div class=\"sub-header\">\n    <p class=\"mat-title\">创建配件</p>\n  </div>\n  <div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title> 新配件 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"button-container clearfix\">\n          <button mat-raised-button color=\"primary\" class=\"centered\" (click)=\"showCreateSpec=true\"> 为已存在配件添加供应商规格<mat-icon>open_in_new</mat-icon> </button>\n        </div>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"compoGroup\" (ngSubmit)=\"onCompoSubmit(compoGroup)\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>配件名称</mat-label>\n            <input matInput formControlName=\"name\">\n            <mat-hint align=\"end\">可以与其他产品重复</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>分类</mat-label>\n            <input matInput formControlName=\"category\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>材质</mat-label>\n            <input matInput type=\"text\" formControlName=\"material\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>配件描述</mat-label>\n            <!--          <input matInput formControlName=\"description\">-->\n            <textarea matInput formControlName=\"description\"></textarea>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>保存期限</mat-label>\n            <input matInput type=\"text\" formControlName=\"expiration\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>单位重量</mat-label>\n            <input matInput type=\"text\" formControlName=\"unit_weight\">\n            <mat-hint align=\"end\">默认值为零</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>警示库存</mat-label>\n            <input matInput type=\"number\" formControlName=\"warn_stock\">\n            <mat-hint align=\"end\">默认值为1000</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <!--          <input matInput formControlName=\"notice\">-->\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n          <div class=\"button-container\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!compoGroup.valid\">确认添加</button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card *ngIf=\"showCreateSpec\">\n      <mat-card-header>\n        <mat-card-title> 添加新供应商规格 </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"button-container clearfix\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <button mat-raised-button [routerLink]=\"'/vendors'\"> 查看供应商<mat-icon>store</mat-icon> </button>\n          <button mat-raised-button (click)=\"openCreateVendorDialog()\"> 添加新供应商<mat-icon>store</mat-icon> </button>\n        </div>\n        <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"specGroup\" (ngSubmit)=\"onSpecSubmit(specGroup)\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>对应配件</mat-label>\n            <input type=\"text\" matInput [formControl]=\"selectedCompo\" [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"compoDisplayFn\">\n              <mat-option *ngFor=\"let compo of this.compoOptions | async\" [value]=\"compo\">\n                {{compo.name}} | {{compo.id}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>供应商</mat-label>\n            <input type=\"text\" matInput [formControl]=\"selectedVendor\" [matAutocomplete]=\"autoBeta\">\n            <mat-autocomplete #autoBeta=\"matAutocomplete\" [displayWith]=\"vendorDisplayFn\">\n              <mat-option *ngFor=\"let vendor of this.vendorOptions | async\" [value]=\"vendor\">\n                {{vendor.name}} | {{vendor.company}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>规格编码</mat-label>\n            <input matInput type=\"text\" formControlName=\"id\">\n            <mat-hint align=\"end\">请遵循既定编码规则</mat-hint>\n          </mat-form-field>\n\n          <div class=\"nty-percent-fill\" fxLayout=\"row\" fxLayoutAlign=\"space-between none\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>税前价格</mat-label>\n              <input matInput type=\"number\" formControlName=\"net_price\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n              <mat-label>含税价格</mat-label>\n              <input matInput type=\"number\" formControlName=\"gross_price\">\n            </mat-form-field>\n          </div>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>初始库存</mat-label>\n            <input matInput type=\"number\" formControlName=\"stock\">\n            <mat-hint align=\"end\">默认值为0</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>备注</mat-label>\n            <textarea matInput formControlName=\"notice\"></textarea>\n          </mat-form-field>\n\n          <div class=\"button-container\">\n            <button type=\"submit\" [disabled]=\"!specGroup.valid\">确认添加</button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n</div>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {APIDataSource} from '../shared/models/api-data-source';\nimport {CompoService} from '../shared/services/compo.service';\nimport {DataSource} from '@angular/cdk/collections';\nimport {Product} from '../shared/models/product';\nimport {ProductService} from '../shared/services/product.service';\nimport {Observable} from 'rxjs';\nimport {Compo} from '../shared/models/compo';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {SpecService} from '../shared/services/spec.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {CreateVendorDialogComponent} from '../vendor-list/create-vendor-dialog/create-vendor-dialog.component';\nimport {environment} from '../../environments/environment';\nimport {Vendor} from '../shared/models/vendor';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {EditComponentDialogComponent} from './edit-component-dialog/edit-component-dialog.component';\nimport {DeleteComponentDialogComponent} from './delete-component-dialog/delete-component-dialog.component';\nimport {Spec} from '../shared/models/spec';\n\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class StockComponent implements OnInit, AfterViewInit {\n  displayedColumns: string[] = [\n    'id', 'name', 'category', 'material', 'description', 'warn_stock', 'edit', 'delete'\n  ];\n\n  compos: Compo[] = [];\n  displayCompos: Compo[] = [];\n  dataSource: any;\n  expandedElement!: Compo | null;\n\n  filterGroup!: FormGroup\n\n  materials: (string | undefined)[] = [];\n  categories: string[] = [];\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(\n    private compoService: CompoService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.compoService.getCompos().subscribe(\n      res => {\n        this.compos = res;\n        this.displayCompos = this.compos;\n        this.materials = res.map(compo => compo.material).filter((v, idx, arr) => !!v && arr.indexOf(v) === idx);\n        this.categories = res.map(compo => compo.category).filter((v, idx, arr) => !!v && arr.indexOf(v) === idx);\n        this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n        this.dataSource.paginator = this.paginator;\n      }\n    )\n    this.filterGroup = this.formBuilder.group({\n      keyword: new FormControl(''),\n      material: new FormControl(null),\n      category: new FormControl(null)\n    })\n    this.filterGroup.valueChanges.subscribe(\n      changes => {\n        this.displayCompos = this.compoSearchFilter(changes)\n        this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n      }\n    )\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  compoSearchFilter(changes: any): Compo[] {\n    return this.compos\n      .filter(compo => !changes.category || (compo.category === changes.category))\n      .filter(compo => !changes.material || (compo.material === changes.material))\n      .filter(compo => compo.id?.includes(changes.keyword)\n        || compo.name.includes(changes.keyword)\n        || compo.description?.includes(changes.keyword)\n        || (compo.notice && compo.notice.includes(changes.keyword)))\n  }\n\n  emptyFilter(): void {\n    this.filterGroup.reset()\n    this.displayCompos = this.compos;\n    this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n  }\n\n  checkWarns(): void {\n    this.displayCompos = this.compos.filter(compo => Number(compo.specification?.reduce((acc, spec) => acc + spec.stock, 0)) < compo.warn_stock);\n    this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n  }\n\n  openEditCompoDialog(compo: Compo): void {\n    const dialogRef = this.dialog.open(EditComponentDialogComponent, {\n      width: environment.LARGE_DIALOG_WIDTH,\n      data: {compo: compo}\n    });\n\n    dialogRef.afterClosed().subscribe(updated_compo => {\n      if (!!updated_compo) {\n        const idx = this.displayCompos.findIndex(c => c.id === updated_compo.id);\n        this.displayCompos[idx] = {...this.displayCompos[idx], ...updated_compo};\n        this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n        this.dataSource.paginator = this.paginator;\n        this._snackBar.open(\"修改成功\", \"关闭\")\n      }\n    });\n  }\n\n  openDeleteCompoDialog(compo: Compo): void {\n    const dialogRef = this.dialog.open(DeleteComponentDialogComponent, {\n      width: environment.LARGE_DIALOG_WIDTH,\n      data: {compo: compo}\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (!!res) {\n        const idx = this.displayCompos.findIndex(c => c.id === compo.id);\n        if (idx > -1) {\n          this.displayCompos.slice(idx, 1);\n          this.dataSource = new MatTableDataSource<Compo>(this.displayCompos);\n          this.dataSource.paginator = this.paginator;\n          this._snackBar.open(\"删除成功\", \"关闭\")\n        }\n      }\n    });\n  }\n\n  openEditSpecDialog(spec: Spec): void {\n\n  }\n}\n","<div class=\"body-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n  <div class=\"button-container fullfill\">\n    <form [formGroup]=\"filterGroup\">\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>搜索</mat-label>\n        <input matInput type=\"text\" formControlName=\"keyword\">\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>材料</mat-label>\n        <mat-select formControlName=\"material\">\n          <mat-option *ngFor=\"let m of materials\" [value]=\"m\">\n            {{m}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"standard\" class=\"filter\">\n        <mat-label>种类</mat-label>\n        <mat-select formControlName=\"category\">\n          <mat-option *ngFor=\"let c of categories\" [value]=\"c\">\n            {{c}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <button mat-stroked-button color=\"warn\" (click)=\"checkWarns()\">查看危险库存</button>\n      <button mat-flat-button (click)=\"emptyFilter()\">清空筛选</button>\n    </form>\n    <button mat-button class=\"call\" [routerLink]=\"['/create-spec']\"> 创建新配件/规格 </button>\n    <button mat-button class=\"call\" [routerLink]=\"['/vendors']\"> 供应商列表 </button>\n  </div>\n  <div class=\"data-table\">\n    <table mat-table\n           [dataSource]=\"dataSource\" multiTemplateDataRows\n           class=\"mat-elevation-z8 data-table\">\n      <ng-container matColumnDef=\"{{col}}\" *ngFor=\"let col of displayedColumns\">\n        <th mat-header-cell *matHeaderCellDef> {{col.toUpperCase()}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div>\n            <div class=\"btn-edit\" *ngIf=\"col ==='edit' ; spanHeader\">\n              <button mat-icon-button (click)=\"openEditCompoDialog(element)\"><mat-icon>edit</mat-icon></button>\n            </div>\n            <div class=\"btn-delete\" *ngIf=\"col ==='delete' ; spanHeader\">\n              <button mat-icon-button (click)=\"openDeleteCompoDialog(element)\"><mat-icon>delete</mat-icon></button>\n            </div>\n            <span #spanHeader>\n              {{element[col]}}\n            </span>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n          <div class=\"example-element-detail\"\n               [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <div class=\"example-element-description\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\n              <mat-card *ngFor=\"let spec of element.specification\">\n                <mat-card-header>\n                  <mat-card-title>{{spec.vendor.company}}</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                  <p>规格号：{{spec.id}}</p>\n                  <p>价格（税前|税后）：{{spec.net_price || '无记录'}} | {{spec.gross_price || '无记录'}}</p>\n                  <p class=\"mat-h3 info\">库存：{{spec.stock}}</p>\n                </mat-card-content>\n                <mat-card-actions>\n                  <button mat-stroked-button color=\"primary\" (click)=\"openEditSpecDialog(spec)\">修改</button>\n                  <button mat-stroked-button color=\"warn\">删除</button>\n                </mat-card-actions>\n              </mat-card>\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\"\n          class=\"example-element-row\"\n          [class.example-expanded-row]=\"expandedElement === element\"\n          (click)=\"expandedElement = expandedElement === element ? null : element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of products\"\n                   class=\"mat-elevation-z8 data-table\">\n    </mat-paginator>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Product} from '../models/product';\nimport {environment} from '../../../environments/environment';\nimport {PostResponse} from '../models/post-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products`)\n  }\n\n  getProductNameById(id: number): Observable<any> {\n    return this.http.get<any>(`${environment.API_URL}/products/only_name/${id}`)\n  }\n\n  getProductById(product_id: number): Observable<Product> {\n    return this.http.get<Product>(`${environment.API_URL}/products/${product_id}`)\n  }\n\n  getProductsByName(name: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/name/${name}`)\n  }\n\n  getProductsByCategory(category: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/category/${category}`)\n  }\n\n  getProductsUnderInventory(inventory: number): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/products/inventory_under/${inventory}`)\n  }\n\n  postProduct(product: Product): Observable<PostResponse> {\n    return this.http.post<PostResponse>(`${environment.API_URL}/products`, product)\n  }\n\n  putProduct(product: Product): Observable<Product> {\n    return this.http.put<Product>(`${environment.API_URL}/products`, product)\n  }\n\n  adjustProductInventory(product_id: number, adjust: number): Observable<Product> {\n    return this.http.put<Product>(`${environment.API_URL}/products/adjust_inventory/${product_id}/${adjust}`, null)\n  }\n\n  deleteProduct(product_id: number): Observable<PostResponse> {\n    return this.http.delete<PostResponse>(`${environment.API_URL}/products/${product_id}`)\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  set(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n\n  get(key: string): any {\n    return localStorage.getItem(key);\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {Employee} from '../../shared/models/employee';\nimport {Work} from '../../shared/models/work';\nimport {WarehouseRecord} from '../../shared/models/warehouse-record';\nimport {UtilService} from '../../shared/util.service';\n\nclass DialogData {\n  work!: Work;\n  warehouse_record!: WarehouseRecord[];\n  max_amount!: number\n}\n\n@Component({\n  selector: 'app-edit-work-dialog',\n  templateUrl: './edit-work-dialog.component.html',\n  styleUrls: ['./edit-work-dialog.component.scss']\n})\nexport class EditWorkDialogComponent implements OnInit {\n  workSpecGroup = new FormGroup({});\n  work_date = new FormControl(\n    null,\n    Validators.required);\n  plan_unit = new FormControl(\n    '',\n    [Validators.required, Validators.max(this.data.max_amount), Validators.min(1)]\n  )\n\n\n  constructor(\n    public dialogRef: MatDialogRef<EditWorkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    public util: UtilService\n  ) { }\n\n  ngOnInit(): void {\n    this.work_date.setValue(this.util.mysqlDatetimeParser(this.data.work.work_date));\n    this.plan_unit.setValue(this.data.work.plan_unit);\n    this.data.work.work_specification?.forEach(\n      ws => this.workSpecGroup.addControl(\n        ws.specification_id,\n        this.formBuilder.control(\n          ws.actual_amount,\n          [Validators.required, Validators.min(0)]))\n    );\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirmClick(): void {\n    this.data.work.plan_unit = this.plan_unit.value;\n    this.data.work.work_date = this.util.mysqlDatetimeTransformer(this.work_date.value)\n    this.data.work.work_specification?.forEach(ws =>{\n      ws.plan_amount = this.plan_unit.value;\n      ws.actual_amount = this.workSpecGroup.controls[ws.specification_id].value;\n    });\n    this.dialogRef.close(this.data.work);\n  }\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">编辑领料记录</p>\n</div>\n\n<div mat-dialog-content>\n  <p>{{data.work.employee_name}}</p>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>领料日期</mat-label>\n      <input matInput [matDatepicker]=\"picker\" [formControl]=\"work_date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\">\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>应完成数量</mat-label>\n      <input type=\"number\" matInput [formControl]=\"plan_unit\">\n    </mat-form-field>\n\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <div [formGroup]=\"workSpecGroup\">\n      <div *ngFor=\"let wr of data.warehouse_record\" class=\"flex-container\">\n        <p>配件：{{wr.specification_id}}</p>\n        <p>应领：{{plan_unit.value * wr.consumption}}</p>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>实领</mat-label>\n          <input matInput [formControlName]=\"wr.specification_id\">\n        </mat-form-field>\n      </div>\n    </div>\n\n  </form>\n\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">取消</button>\n  <button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\">确认修改</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTTokenService {\n\n  jwtToken = '';\n  decodedToken: { [key: string]: string } = {};\n\n  constructor() {\n  }\n\n  setToken(token: string): void {\n    if (token) {\n      this.jwtToken = token;\n    }\n  }\n\n  decodeToken(): void {\n    if (this.jwtToken) {\n      this.decodedToken = jwt_decode(this.jwtToken);\n    }\n  }\n\n  getDecodeToken(): any {\n    return jwt_decode(this.jwtToken);\n  }\n\n  getUser(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.displayname : null;\n  }\n\n  getExpiryTime(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.exp : null;\n  }\n\n  isTokenExpired(): boolean {\n    const expiryTime: number = this.getExpiryTime();\n    if (expiryTime) {\n      return ((1000 * expiryTime) - (new Date()).getTime()) < 5000;\n    } else {\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>create-employee works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hr',\n  templateUrl: './hr.component.html',\n  styleUrls: ['./hr.component.scss']\n})\nexport class HrComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>hr works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-process-complete-dialog',\n  templateUrl: './process-complete-dialog.component.html',\n  styleUrls: ['./process-complete-dialog.component.scss']\n})\nexport class ProcessCompleteDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>process-complete-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {VendorService} from '../../shared/services/vendor.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Vendor} from '../../shared/models/vendor';\n\n@Component({\n  selector: 'app-create-vendor-dialog',\n  templateUrl: './create-vendor-dialog.component.html',\n  styleUrls: ['./create-vendor-dialog.component.scss']\n})\nexport class CreateVendorDialogComponent implements OnInit {\n\n  vendorGroup!: FormGroup;\n  newVendor!: Vendor\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateVendorDialogComponent>,\n    private formBuilder: FormBuilder,\n    private vendorService: VendorService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.vendorGroup = this.formBuilder.group({\n      name: new FormControl('', Validators.required),\n      company: new FormControl('', Validators.required),\n      contact: new FormControl(''),\n      payment_period: new FormControl(''),\n      address: new FormControl(''),\n      notice: new FormControl('')\n    })\n  }\n\n  onSubmit(form: FormGroup): void {\n    const newVendor = form.value\n    this.vendorService.postVendor(newVendor).subscribe(\n      res => {\n        this.dialogRef.close(res)\n      },\n      error => {\n        console.log(error);\n        this.onFailure();\n      }\n    )\n  }\n\n  onFailure(): void {\n    this._snackBar.open(`创建失败`, \"关闭\");\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加新供应商</p>\n</div>\n\n<div mat-dialog-content>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around center\" [formGroup]=\"vendorGroup\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>联系人名称</mat-label>\n      <input matInput formControlName=\"name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>公司名称</mat-label>\n      <input matInput formControlName=\"company\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>联系电话</mat-label>\n      <input matInput formControlName=\"contact\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>付款周期</mat-label>\n      <input matInput formControlName=\"payment_period\">\n      <mat-hint align=\"end\">仅记录作参考</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>地址</mat-label>\n      <input matInput formControlName=\"address\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>备注</mat-label>\n      <input matInput formControlName=\"notice\">\n    </mat-form-field>\n  </form>\n\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onSubmit(vendorGroup)\" cdkFocusInitial>确认提交</button>\n  <button mat-stroked-button color=\"warn\" (click)=\"onNoClick()\">取消</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JWTTokenService } from './shared/services/jwt-token.service';\nimport { LocalStorageService } from './shared/services/local-storage.service';\nimport {AuthService} from './shared/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizeGuard implements CanActivate {\n  constructor(private authService: AuthService,\n              private authStorageService: LocalStorageService,\n              private jwtService: JWTTokenService,\n              private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.jwtService.getUser() && this.jwtService.isTokenExpired()) {\n        return true;\n    } else {\n      return this.router.navigateByUrl('/login');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {OverviewComponent} from './overview/overview.component';\nimport {InventoryComponent} from './inventory/inventory.component';\nimport {StockComponent} from './stock/stock.component';\nimport {ManufactureComponent} from './manufacture/manufacture.component';\nimport {HrComponent} from './hr/hr.component';\nimport {AuthorizeGuard} from './auth.guard';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {CreateProductComponent} from './create-product/create-product.component';\nimport {CreateEmployeeComponent} from './create-employee/create-employee.component';\nimport {CreateSpecComponent} from './create-spec/create-spec.component';\nimport {TransmissionComponent} from './transmission/transmission.component';\nimport {VendorListComponent} from './vendor-list/vendor-list.component';\nimport {HistoryComponent} from './manufacture/history/history.component';\nimport {EmployeeComponent} from './employee/employee.component';\n\nconst routes: Routes = [\n  {\n    path: 'app',\n    component: AppComponent,\n    canActivate: [AuthorizeGuard]\n  },\n  {\n    path: 'overview',\n    component: OverviewComponent\n  },\n  {\n    path: 'inventory',\n    component: InventoryComponent\n  },\n  {\n    path: 'stock',\n    component: StockComponent\n  },\n  {\n    path: 'manufacture',\n    component: ManufactureComponent\n  },\n  {\n    path: 'history',\n    component: HistoryComponent\n  },\n  {\n    path: 'employee',\n    component: EmployeeComponent\n  },\n  {\n    path: 'hr',\n    component: HrComponent\n  },\n  {\n    path: 'vendors',\n    component: VendorListComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'create-product',\n    component: CreateProductComponent\n  },\n  {\n    path: 'create-employee',\n    component: CreateEmployeeComponent\n  },\n  {\n    path: 'create-spec',\n    component: CreateSpecComponent\n  },\n  {\n    path: 'transmission/:error',\n    component: TransmissionComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../shared/services/auth.service';\nimport {Location} from '@angular/common';\nimport {Router} from '@angular/router';\nimport {JWTTokenService} from '../shared/services/jwt-token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    public auth: AuthService,\n    private location: Location,\n    private fb: FormBuilder,\n    private router: Router,\n    private jwtToken: JWTTokenService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: FormGroup | any): void {\n    console.log(\"sending out login request...\")\n    this.auth.login(form.value || form).subscribe({\n      next: res => {\n        if (res.access_token) {\n          console.log(\"Login succeed!\")\n          this.jwtToken.setToken(res.access_token);\n          this.jwtToken.decodeToken();\n          this.router.navigateByUrl('/overview');\n          }\n        },\n      error: err => console.log(err)\n    });\n  }\n}\n","<div class=\"body-container\" fxLayout=\"row\" fxLayoutAlign=\"center start\" >\n  <mat-card fxFlex=\"45%\">\n    <mat-card-title>\n      <p class=\"mat-title\">登陆</p>\n    </mat-card-title>\n    <form fxLayout=\"column\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm)\">\n      <mat-form-field appearance=\"outline\">\n        <!--  ngModel + name will let Angular take the form control  -->\n        <mat-label>用户名</mat-label>\n        <input matInput type=\"text\" formControlName=\"username\" required>\n        <!--        <mat-error> Username is required</mat-error>-->\n      </mat-form-field>\n      <p *ngIf=\"loginForm.controls.username.touched && loginForm.controls.username.status !== 'VALID'\"\n         class=\"text-danger\"> Username is required </p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>密码</mat-label>\n        <input matInput type=\"password\" formControlName=\"password\" required>\n        <!--        <mat-error> Password has to be at least 6 characters long </mat-error>-->\n      </mat-form-field>\n      <p *ngIf=\"loginForm.controls.password.touched && loginForm.controls.password.status !== 'VALID'\"\n         class=\"text-danger\"> Password has to be at least 6 characters long </p>\n      <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button [disabled]=\"loginForm.invalid\" mat-raised-button color=\"primary\" type=\"submit\"> 确认 </button>\n      </div>\n    </form>\n  </mat-card>\n\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Work} from '../../shared/models/work';\nimport {BatchProcess} from '../../shared/models/batch-process';\nimport {Employee} from '../../shared/models/employee';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {map} from 'rxjs/operators';\nimport {Compo} from '../../shared/models/compo';\nimport {WorkSpecification} from '../../shared/models/work-specification';\nimport {WorkService} from '../../shared/services/work.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {WorkSpecificationService} from '../../shared/services/work-specification.service';\nimport {SpecService} from '../../shared/services/spec.service';\n\nclass DialogData {\n  bp!: BatchProcess;\n  employees!: Employee[]\n}\n\n@Component({\n  selector: 'app-create-work-dialog',\n  templateUrl: './create-work-dialog.component.html',\n  styleUrls: ['./create-work-dialog.component.scss']\n})\nexport class CreateWorkDialogComponent implements OnInit {\n  new_work!: Work;\n  batchProcess!: BatchProcess;\n\n  employees: Employee[] = [];\n  employeeOptions!: Observable<Employee[]>;\n  selectedEmployee = new FormControl('');\n\n  workSpecGroup = new FormGroup({});\n  work_date = new FormControl(new Date(), Validators.required);\n  plan_unit = new FormControl(\n    '',\n    [Validators.required, Validators.max(this.data.bp.start_amount ?? 1000), Validators.min(1)]\n  )\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateWorkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private formBuilder: FormBuilder,\n    private workService: WorkService,\n    private wsService: WorkSpecificationService,\n    private specService: SpecService,\n    public _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.batchProcess = this.data.bp;\n    this.employees = this.data.employees;\n    this.employeeOptions = this.selectedEmployee.valueChanges.pipe(\n      map(name => this.employeeAutocompleteFilter(name)));\n    this.batchProcess.warehouse_record?.forEach(\n      wr => this.workSpecGroup.addControl(\n        wr.specification_id,\n        this.formBuilder.control(\n          '',\n          [Validators.required, Validators.min(0)]\n        )\n      )\n    );\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  employeeAutocompleteFilter(value: string): Employee[] {\n    return this.employees.filter(e => e.name.includes(value));\n  }\n\n  employeeDisplayFn(emp: Employee): string {\n    return emp && emp.name ? `${emp.name} | ${emp.id}` : '';\n  }\n\n  onWorkConfirm(): void {\n    const work_specification_array: WorkSpecification[] = [];\n    this.new_work = {\n      batch_process_id: this.batchProcess.id || 0,\n      employee_id: this.selectedEmployee.value.id,\n      employee_name: this.selectedEmployee.value.name,\n      work_date: this.work_date.value,\n      plan_unit: this.plan_unit.value,\n    }\n    this.workService.postWork(this.new_work).subscribe(\n      res_work => {\n        this.batchProcess.warehouse_record?.forEach(\n          wr => {\n            const ws: WorkSpecification = {\n              work_id: res_work.id,\n              specification_id: wr.specification_id,\n              plan_amount: this.plan_unit.value * wr.consumption,\n              actual_amount: this.workSpecGroup.controls[wr.specification_id].value\n            }\n            this.wsService.postWorkSpecification(ws).subscribe(\n              res_ws => {\n                work_specification_array.push(res_ws);\n                this.specService.adjustSpecStock(res_ws.specification_id, 0-Number(res_ws.actual_amount)).subscribe();\n              }\n            )\n          }\n        );\n        this.dialogRef.close({...this.new_work, work_specification: work_specification_array});\n      },\n      error => {\n        console.log(error);\n        this.onFailure();\n      }\n    )\n  }\n\n  onSuccess(): void {\n    this._snackBar.open(`创建成功`, \"关闭\");\n  }\n\n  onFailure(): void {\n    this._snackBar.open(`创建失败`, \"关闭\");\n  }\n\n}\n","<div mat-dialog-title>\n  <p class=\"mat-h3\">添加参与员工</p>\n</div>\n\n<div mat-dialog-content class=\"nty-percent-fill\">\n  <p>{{batchProcess.process?.process_name}}</p>\n  <form fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>工人</mat-label>\n      <input type=\"text\" matInput [formControl]=\"selectedEmployee\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"employeeDisplayFn\">\n        <mat-option *ngFor=\"let emp of this.employeeOptions | async\" [value]=\"emp\">\n          {{emp.name}} | {{emp.id}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>领料日期</mat-label>\n      <input matInput [matDatepicker]=\"picker\" [formControl]=\"work_date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\">\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>应完成数量</mat-label>\n      <input type=\"number\" matInput [formControl]=\"plan_unit\">\n    </mat-form-field>\n\n    <mat-divider></mat-divider>\n    <div [formGroup]=\"workSpecGroup\" class=\"fullfill\">\n      <div *ngFor=\"let record of batchProcess.warehouse_record\" class=\"fullfill\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <p fxFlex=\"45\">{{record.component_name}} | 应领：{{plan_unit.value * record.consumption}}</p>\n        <mat-form-field appearance=\"outline\" fxFlex=\"45\">\n          <mat-label>实领</mat-label>\n          <input matInput [formControlName]=\"record.specification_id\">\n          <mat-hint>随后可修改</mat-hint>\n        </mat-form-field>\n      </div>\n    </div>\n\n  </form>\n\n</div>\n\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onWorkConfirm()\">确认提交</button>\n  <button mat-button (click)=\"onNoClick()\">结束</button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}